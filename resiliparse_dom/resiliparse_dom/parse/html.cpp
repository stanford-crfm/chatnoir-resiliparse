/* Generated by Cython 3.0.10 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "resiliparse_dom/parse/encoding.h",
            "resiliparse_dom/parse/html.h"
        ],
        "extra_compile_args": [
            "-std=c++17",
            "-O3",
            "-Wall",
            "-Wno-deprecated-declarations",
            "-Wno-unreachable-code",
            "-Wno-unused-function"
        ],
        "extra_link_args": [
            "-std=c++17"
        ],
        "include_dirs": [
            "resiliparse_dom/parse"
        ],
        "language": "c++",
        "libraries": [
            "lexbor"
        ],
        "name": "resiliparse_dom.parse.html",
        "sources": [
            "resiliparse_dom/parse/html.pyx"
        ]
    },
    "module_name": "resiliparse_dom.parse.html"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#if defined(CYTHON_LIMITED_API) && CYTHON_LIMITED_API
#define __PYX_EXTRA_ABI_MODULE_NAME "limited"
#else
#define __PYX_EXTRA_ABI_MODULE_NAME ""
#endif
#define CYTHON_ABI "3_0_10" __PYX_EXTRA_ABI_MODULE_NAME
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x03000AF0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(Py_GIL_DISABLED) || defined(Py_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 0
  #endif
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    static CYTHON_INLINE PyObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030B0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030B0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
    #ifndef CO_OPTIMIZED
    #define CO_OPTIMIZED 0x0001
    #endif
    #ifndef CO_NEWLOCALS
    #define CO_NEWLOCALS 0x0002
    #endif
    #ifndef CO_VARARGS
    #define CO_VARARGS 0x0004
    #endif
    #ifndef CO_VARKEYWORDS
    #define CO_VARKEYWORDS 0x0008
    #endif
    #ifndef CO_ASYNC_GENERATOR
    #define CO_ASYNC_GENERATOR 0x0200
    #endif
    #ifndef CO_GENERATOR
    #define CO_GENERATOR 0x0020
    #endif
    #ifndef CO_COROUTINE
    #define CO_COROUTINE 0x0080
    #endif
#elif PY_VERSION_HEX >= 0x030B0000
  static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);
    if (!empty_bytes) return NULL;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, empty_bytes);
    Py_DECREF(empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_MAJOR_VERSION >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void *cfunc) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000 || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && PY_VERSION_HEX < 0x030d0000 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyObject_GenericSetAttr((PyObject*)tp, k, v)
#else
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyDict_SetItem(tp->tp_dict, k, v)
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__;  (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__resiliparse_dom__parse__html
#define __PYX_HAVE_API__resiliparse_dom__parse__html
/* Early includes */
#include <string.h>
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <string_view>
#include <stdint.h>
#include <lexbor/core/core.h>
#include <lexbor/html/html.h>
#include <lexbor/dom/dom.h>
#include <lexbor/dom/interfaces/element.h>
#include "lexbor/dom/interfaces/document.h"
#include <lexbor/dom/collection.h>
#include <lexbor/css/css.h>
#include <lexbor/tag/tag.h>
#include <lexbor/html/encoding.h>
#include <lexbor/encoding/encoding.h>
#include "html.h"
#include <stdio.h>
#include <utility>

    #if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
    // move should be defined for these versions of MSVC, but __cplusplus isn't set usefully
    #include <type_traits>

    namespace cython_std {
    template <typename T> typename std::remove_reference<T>::type&& move(T& t) noexcept { return std::move(t); }
    template <typename T> typename std::remove_reference<T>::type&& move(T&& t) noexcept { return std::move(t); }
    }

    #endif
    
#include <set>
#include <vector>
#include <uchardet/uchardet.h>
#include "encoding.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
#include <string.h>
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#include <string.h>
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "resiliparse_dom/parse/html.pyx",
  "<stringsource>",
  "type.pxd",
  "resiliparse_dom/parse/encoding.pxd",
};
/* #### Code section: utility_code_proto_before_types ### */
/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* NoFastGil.proto */
#define __Pyx_PyGILState_Ensure PyGILState_Ensure
#define __Pyx_PyGILState_Release PyGILState_Release
#define __Pyx_FastGIL_Remember()
#define __Pyx_FastGIL_Forget()
#define __Pyx_FastGilFuncInit()

/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector;
struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList;
struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode;
struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection;
struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree;
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__;
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__;
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr;
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__;
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr;
struct __pyx_obj___Pyx_EnumMeta;
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_16EncodingDetector_encoding;
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_detect_encoding;
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_bytes_to_str;
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5;

/* "resiliparse_dom/parse/encoding.pxd":23
 * 
 *     cpdef void update(self, const string& data)
 *     cpdef str encoding(self, bint html5_compatible=*)             # <<<<<<<<<<<<<<
 *     cpdef void reset(self)
 * 
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_16EncodingDetector_encoding {
  int __pyx_n;
  int html5_compatible;
};

/* "resiliparse_dom/parse/encoding.pxd":26
 *     cpdef void reset(self)
 * 
 * cpdef str detect_encoding(bytes data, size_t max_len=*, bint html5_compatible=*, bint from_html_meta=*)             # <<<<<<<<<<<<<<
 * cpdef str bytes_to_str(bytes data, str encoding=*, str errors=*, fallback_encodings=*, bint strip_bom=*)
 * cpdef str map_encoding_to_html5(str encoding, bint fallback_utf8=*)
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_detect_encoding {
  int __pyx_n;
  size_t max_len;
  int html5_compatible;
  int from_html_meta;
};

/* "resiliparse_dom/parse/encoding.pxd":27
 * 
 * cpdef str detect_encoding(bytes data, size_t max_len=*, bint html5_compatible=*, bint from_html_meta=*)
 * cpdef str bytes_to_str(bytes data, str encoding=*, str errors=*, fallback_encodings=*, bint strip_bom=*)             # <<<<<<<<<<<<<<
 * cpdef str map_encoding_to_html5(str encoding, bint fallback_utf8=*)
 * 
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_bytes_to_str {
  int __pyx_n;
  PyObject *encoding;
  PyObject *errors;
  PyObject *fallback_encodings;
  int strip_bom;
};

/* "resiliparse_dom/parse/encoding.pxd":28
 * cpdef str detect_encoding(bytes data, size_t max_len=*, bint html5_compatible=*, bint from_html_meta=*)
 * cpdef str bytes_to_str(bytes data, str encoding=*, str errors=*, fallback_encodings=*, bint strip_bom=*)
 * cpdef str map_encoding_to_html5(str encoding, bint fallback_utf8=*)             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "encoding.h" nogil:
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5 {
  int __pyx_n;
  int fallback_utf8;
};
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_element_node;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_query_selector_all_impl;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name;
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree;
struct __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx;

/* "resiliparse_dom/parse/html.pxd":131
 * 
 * # noinspection DuplicatedCode
 * cpdef enum NodeType:             # <<<<<<<<<<<<<<
 *     ELEMENT = 0x01,
 *     ATTRIBUTE = 0x02,
 */
enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType {
  __pyx_e_15resiliparse_dom_5parse_4html_ELEMENT = 0x01,
  __pyx_e_15resiliparse_dom_5parse_4html_ATTRIBUTE = 0x02,
  __pyx_e_15resiliparse_dom_5parse_4html_TEXT = 0x03,
  __pyx_e_15resiliparse_dom_5parse_4html_CDATA_SECTION = 0x04,
  __pyx_e_15resiliparse_dom_5parse_4html_ENTITY_REFERENCE = 0x05,
  __pyx_e_15resiliparse_dom_5parse_4html_ENTITY = 0x06,
  __pyx_e_15resiliparse_dom_5parse_4html_PROCESSING_INSTRUCTION = 0x07,
  __pyx_e_15resiliparse_dom_5parse_4html_COMMENT = 0x08,
  __pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT = 0x09,
  __pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_TYPE = 0x0A,
  __pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_FRAGMENT = 0x0B,
  __pyx_e_15resiliparse_dom_5parse_4html_NOTATION = 0x0C,
  __pyx_e_15resiliparse_dom_5parse_4html_LAST_ENTRY = 0x0D
};

/* "resiliparse_dom/parse/html.pxd":31
 *                                                   size_t selector_len) except NULL nogil
 * 
 * cdef lxb_dom_node_t* next_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                size_t* depth=*, bint* end_tag=*) noexcept nogil
 * 
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node {
  int __pyx_n;
  size_t *depth;
  int *end_tag;
};

/* "resiliparse_dom/parse/html.pxd":34
 *                                size_t* depth=*, bint* end_tag=*) noexcept nogil
 * 
 * cdef inline lxb_dom_node_t* next_element_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                               size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     node = next_node(root_node, node, depth, end_tag)
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_element_node {
  int __pyx_n;
  size_t *depth;
  int *end_tag;
};

/* "resiliparse_dom/parse/html.pxd":50
 * cdef string get_node_text(lxb_dom_node_t* node) noexcept nogil
 * 
 * cdef lxb_dom_node_t* get_element_by_id_impl(lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                             const char* id_value, size_t id_value_len,
 *                                             bint case_insensitive=*) noexcept nogil
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":53
 *                                             const char* id_value, size_t id_value_len,
 *                                             bint case_insensitive=*) noexcept nogil
 * cdef lxb_dom_collection_t* get_elements_by_attr_impl(lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                                      const char* attr_name, size_t attr_name_len,
 *                                                      const char* attr_value, size_t attr_value_len,
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl {
  int __pyx_n;
  size_t init_size;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":57
 *                                                      const char* attr_value, size_t attr_value_len,
 *                                                      size_t init_size=*, bint case_insensitive=*) noexcept nogil
 * cdef lxb_dom_collection_t* get_elements_by_class_name_impl(lxb_dom_node_t* node, const char* class_name,             # <<<<<<<<<<<<<<
 *                                                            size_t class_name_len, size_t init_size=*) noexcept nogil
 * cdef lxb_dom_collection_t* get_elements_by_tag_name_impl(lxb_dom_node_t* node,
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl {
  int __pyx_n;
  size_t init_size;
};

/* "resiliparse_dom/parse/html.pxd":63
 * cdef lxb_dom_node_t* query_selector_impl(lxb_dom_node_t* node, HTMLTree tree,
 *                                          const char* selector, size_t select_len) except <lxb_dom_node_t*>-1 nogil
 * cdef lxb_dom_collection_t* query_selector_all_impl(lxb_dom_node_t* node, HTMLTree tree,             # <<<<<<<<<<<<<<
 *                                                    const char* selector, size_t selector_len,
 *                                                    size_t init_size=*) except <lxb_dom_collection_t*>-1 nogil
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_query_selector_all_impl {
  int __pyx_n;
  size_t init_size;
};

/* "resiliparse_dom/parse/html.pxd":90
 *     cdef bint _getattr_impl(self, const char* attr_name, size_t attr_name_len,
 *                             const char** attr_out_value, size_t* attr_out_len) except -1 nogil
 *     cpdef str getattr(self, str attr_name, str default_value=*)             # <<<<<<<<<<<<<<
 *     cdef bint _setattr_impl(self, const char* attr_name, size_t attr_name_len,
 *                             const char* attr_value, size_t attr_value_len) except -1 nogil
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr {
  int __pyx_n;
  PyObject *default_value;
};

/* "resiliparse_dom/parse/html.pxd":97
 *     cpdef delattr(self, str attr_name)
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=*)             # <<<<<<<<<<<<<<
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=*)
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":98
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=*)             # <<<<<<<<<<<<<<
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name)
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":99
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=*)             # <<<<<<<<<<<<<<
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name)
 * 
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":120
 *     cdef DOMCollection _forward_collection_match(self, bytes func, attrs)
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=*)             # <<<<<<<<<<<<<<
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=*)
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":121
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=*)             # <<<<<<<<<<<<<<
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name)
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":122
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=*)
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=*)             # <<<<<<<<<<<<<<
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name)
 * 
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name {
  int __pyx_n;
  int case_insensitive;
};

/* "resiliparse_dom/parse/html.pxd":147
 * 
 * 
 * cdef HTMLTree create_html_tree(bytes document, bint reencode=*, str encoding=*, str errors=*)             # <<<<<<<<<<<<<<
 * 
 * cdef class HTMLTree:
 */
struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree {
  int __pyx_n;
  int reencode;
  PyObject *encoding;
  PyObject *errors;
};

/* "resiliparse_dom/parse/html.pyx":195
 * 
 * 
 * cdef struct element_by_id_match_ctx:             # <<<<<<<<<<<<<<
 *     const lxb_char_t* id_val
 *     size_t id_val_len
 */
struct __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx {
  lxb_char_t const *id_val;
  size_t id_val_len;
  lxb_dom_node_t *result_node;
};

/* "resiliparse_dom/parse/html.pyx":200
 *     lxb_dom_node_t* result_node
 * 
 * ctypedef element_by_id_match_ctx element_by_id_match_ctx_t             # <<<<<<<<<<<<<<
 * 
 * 
 */
typedef struct __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx_t;

/* "resiliparse_dom/parse/encoding.pxd":19
 * from resiliparse_inc.uchardet cimport uchardet_t
 * 
 * cdef class EncodingDetector:             # <<<<<<<<<<<<<<
 *     cdef uchardet_t d
 * 
 */
struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector {
  PyObject_HEAD
  struct __pyx_vtabstruct_15resiliparse_dom_5parse_8encoding_EncodingDetector *__pyx_vtab;
  uchardet_t d;
};


/* "resiliparse_dom/parse/html.pxd":73
 * 
 * 
 * cdef class DOMElementClassList:             # <<<<<<<<<<<<<<
 *     cdef DOMNode node
 * 
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList {
  PyObject_HEAD
  struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_vtab;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *node;
};


/* "resiliparse_dom/parse/html.pxd":82
 * 
 * 
 * cdef class DOMNode:             # <<<<<<<<<<<<<<
 *     cdef HTMLTree tree
 *     cdef lxb_dom_node_t* node
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode {
  PyObject_HEAD
  struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *__pyx_vtab;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *tree;
  lxb_dom_node_t *node;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *class_list_singleton;
};


/* "resiliparse_dom/parse/html.pxd":113
 * 
 * 
 * cdef class DOMCollection:             # <<<<<<<<<<<<<<
 *     cdef HTMLTree tree
 *     cdef lxb_dom_collection_t* coll
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection {
  PyObject_HEAD
  struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_vtab;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *tree;
  lxb_dom_collection_t *coll;
};


/* "resiliparse_dom/parse/html.pxd":149
 * cdef HTMLTree create_html_tree(bytes document, bint reencode=*, str encoding=*, str errors=*)
 * 
 * cdef class HTMLTree:             # <<<<<<<<<<<<<<
 *     cdef lxb_html_document_t* dom_document
 *     cdef str encoding
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree {
  PyObject_HEAD
  struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_vtab;
  lxb_html_document_t *dom_document;
  PyObject *encoding;
  lxb_css_parser_t *css_parser;
  lxb_css_memory_t *css_memory;
};


/* "resiliparse_dom/parse/html.pyx":548
 *         self.node = NULL
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ {
  PyObject_HEAD
  lxb_dom_node_t *__pyx_v_node;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self;
};


/* "resiliparse_dom/parse/html.pyx":1332
 *         self.tree = None
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if not check_node(self):
 *             return '<INVALID ELEMENT>'
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ {
  PyObject_HEAD
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self;
};


/* "resiliparse_dom/parse/html.pyx":1337
 * 
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)             # <<<<<<<<<<<<<<
 *             if attrs:
 *                 attrs = ' ' + attrs
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr {
  PyObject_HEAD
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *__pyx_outer_scope;
  PyObject *__pyx_genexpr_arg_0;
  PyObject *__pyx_v_a;
};


/* "resiliparse_dom/parse/html.pyx":1587
 *         return False
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ {
  PyObject_HEAD
  size_t __pyx_v_i;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self;
  size_t __pyx_t_0;
  size_t __pyx_t_1;
  size_t __pyx_t_2;
};


/* "resiliparse_dom/parse/html.pyx":1666
 * 
 *     def __repr__(self):
 *         return f'{{{", ".join(repr(n) for n in self)}}}'             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr {
  PyObject_HEAD
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_genexpr_arg_0;
  PyObject *__pyx_v_n;
};


/* "EnumBase":16
 * 
 * @cython.internal
 * cdef class __Pyx_EnumMeta(type):             # <<<<<<<<<<<<<<
 *     def __init__(cls, name, parents, dct):
 *         type.__init__(cls, name, parents, dct)
 */
struct __pyx_obj___Pyx_EnumMeta {
  PyHeapTypeObject __pyx_base;
};



/* "resiliparse_dom/parse/encoding.pxd":19
 * from resiliparse_inc.uchardet cimport uchardet_t
 * 
 * cdef class EncodingDetector:             # <<<<<<<<<<<<<<
 *     cdef uchardet_t d
 * 
 */

struct __pyx_vtabstruct_15resiliparse_dom_5parse_8encoding_EncodingDetector {
  void (*update)(struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector *, std::string const &, int __pyx_skip_dispatch);
  PyObject *(*encoding)(struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_16EncodingDetector_encoding *__pyx_optional_args);
  void (*reset)(struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_8encoding_EncodingDetector *__pyx_vtabptr_15resiliparse_dom_5parse_8encoding_EncodingDetector;


/* "resiliparse_dom/parse/html.pyx":398
 * 
 * 
 * cdef class DOMElementClassList:             # <<<<<<<<<<<<<<
 *     """Class name list of an Element DOM node."""
 * 
 */

struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList {
  PyObject *(*_create_list)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *);
  PyObject *(*_class_name_bytes)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *);
  void (*add)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *, PyObject *, int __pyx_skip_dispatch);
  void (*remove)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMElementClassList;
static CYTHON_INLINE PyObject *__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__class_name_bytes(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *);


/* "resiliparse_dom/parse/html.pyx":520
 * 
 * 
 * cdef class DOMNode:             # <<<<<<<<<<<<<<
 *     """
 *     __init__(self)
 */

struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode {
  int (*hasattr)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch);
  int (*_getattr_impl)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, char const *, size_t, char const **, size_t *);
  PyObject *(*getattr)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr *__pyx_optional_args);
  int (*_setattr_impl)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, char const *, size_t, char const *, size_t);
  PyObject *(*setattr)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, PyObject *, int __pyx_skip_dispatch);
  int (*_delattr_impl)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, char const *, size_t);
  PyObject *(*delattr)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*get_element_by_id)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id *__pyx_optional_args);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*get_elements_by_attr)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr *__pyx_optional_args);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*get_elements_by_class_name)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name *__pyx_optional_args);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*get_elements_by_tag_name)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*query_selector)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*query_selector_all)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch);
  int (*matches)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*append_child)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*insert_before)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*replace_child)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*remove_child)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch);
  PyObject *(*decompose)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode;


/* "resiliparse_dom/parse/html.pyx":1378
 * 
 * 
 * cdef class DOMCollection:             # <<<<<<<<<<<<<<
 *     """
 *     __init__(self)
 */

struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection {
  size_t (*_wrap_idx)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, Py_ssize_t);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*_forward_collection_match)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, PyObject *);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*get_element_by_id)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id *__pyx_optional_args);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*get_elements_by_attr)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr *__pyx_optional_args);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*get_elements_by_class_name)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name *__pyx_optional_args);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*get_elements_by_tag_name)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*query_selector)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*query_selector_all)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch);
  int (*matches)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection;
static CYTHON_INLINE size_t __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, Py_ssize_t);


/* "resiliparse_dom/parse/html.pyx":1696
 * 
 * 
 * cdef class HTMLTree:             # <<<<<<<<<<<<<<
 *     """
 *     __init__(self)
 */

struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_HTMLTree {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*create_element)(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*create_text_node)(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, PyObject *, int __pyx_skip_dispatch);
  void (*init_css_parser)(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *);
};
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_vtabptr_15resiliparse_dom_5parse_4html_HTMLTree;
static void __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *);
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_VARARGS(args, i) PySequence_GetItem(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#else
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GetItem(args, i)
#endif
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_NewRef_VARARGS(arg) __Pyx_NewRef(arg)
    #define __Pyx_Arg_XDECREF_VARARGS(arg) Py_XDECREF(arg)
#else
    #define __Pyx_Arg_NewRef_VARARGS(arg) arg
    #define __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg  /* no-op, __Pyx_Arg_FASTCALL is direct and this needs
                                                   to have the same reference counting */
    #define __Pyx_Arg_XDECREF_FASTCALL(arg)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
    #define __Pyx_Arg_NewRef_FASTCALL(arg) __Pyx_Arg_NewRef_VARARGS(arg)
    #define __Pyx_Arg_XDECREF_FASTCALL(arg) __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kw, const char* function_name, int kw_allowed);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* RaiseUnexpectedTypeError.proto */
static int __Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* HasAttr.proto */
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
#define __Pyx_HasAttr(o, n)  PyObject_HasAttrWithError(o, n)
#else
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* IncludeCppStringH.proto */
#include <string>

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* decode_cpp_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_cpp_string(
         std::string cppstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    return __Pyx_decode_c_bytes(
        cppstring.data(), cppstring.size(), start, stop, encoding, errors, decode_func);
}

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_repr(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_repr(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* MoveIfSupported.proto */
#if CYTHON_USE_CPP_STD_MOVE
  #include <utility>
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) std::move(x)
#else
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) x
#endif

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* decode_c_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* StringJoin.proto */
#if PY_MAJOR_VERSION < 3
#define __Pyx_PyString_Join __Pyx_PyBytes_Join
#define __Pyx_PyBaseString_Join(s, v) (PyUnicode_CheckExact(s) ? PyUnicode_Join(s, v) : __Pyx_PyBytes_Join(s, v))
#else
#define __Pyx_PyString_Join PyUnicode_Join
#define __Pyx_PyBaseString_Join PyUnicode_Join
#endif
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values);

/* PyObject_Str.proto */
#define __Pyx_PyObject_Str(obj)\
    (likely(PyString_CheckExact(obj)) ? __Pyx_NewRef(obj) : PyObject_Str(obj))

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* pep479.proto */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen);

/* PyUnicode_Unicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* RaiseUnboundLocalError.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* RaiseClosureNameError.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* ModInt[Py_ssize_t].proto */
static CYTHON_INLINE Py_ssize_t __Pyx_mod_Py_ssize_t(Py_ssize_t, Py_ssize_t);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* py_abs.proto */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *num);
#define __Pyx_PyNumber_Absolute(x)\
    ((likely(PyLong_CheckExact(x))) ?\
         (likely(__Pyx_PyLong_IsNonNeg(x)) ? (Py_INCREF(x), (x)) : __Pyx_PyLong_AbsNeg(x)) :\
         PyNumber_Absolute(x))
#else
#define __Pyx_PyNumber_Absolute(x)  PyNumber_Absolute(x)
#endif

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyTypeObject* typeptr , void* vtable);

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyTypeObject *type);

/* MergeVTables.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type);
#endif

/* SetupReduce.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce(PyObject* type_obj);
#endif

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_3_0_10
#define __PYX_HAVE_RT_ImportType_proto_3_0_10
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_10(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_10(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_0_10 {
   __Pyx_ImportType_CheckSize_Error_3_0_10 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_0_10 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_0_10 = 2
};
static PyTypeObject *__Pyx_ImportType_3_0_10(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_10 check_size);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *typesModule=NULL, *methodType=NULL, *result=NULL;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    typesModule = PyImport_ImportModule("types");
    if (!typesModule) return NULL;
    methodType = PyObject_GetAttrString(typesModule, "MethodType");
    Py_DECREF(typesModule);
    if (!methodType) return NULL;
    result = PyObject_CallFunctionObjArgs(methodType, func, self, NULL);
    Py_DECREF(methodType);
    return result;
}
#elif PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc);
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* Py3UpdateBases.proto */
static PyObject* __Pyx_PEP560_update_bases(PyObject *bases);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* SetNewInClass.proto */
static int __Pyx_SetNewInClass(PyObject *ns, PyObject *name, PyObject *value);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)
#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);
#else
#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* ClassMethod.proto */
#include "descrobject.h"
CYTHON_UNUSED static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* CoroutineBase.proto */
struct __pyx_CoroutineObject;
typedef PyObject *(*__pyx_coroutine_body_t)(struct __pyx_CoroutineObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct __pyx_CoroutineObject {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    PyObject *gi_frame;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
#define __Pyx_Generator_CheckExact(obj) __Pyx_IS_TYPE(obj, __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(PyObject *module);

/* CheckBinaryVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* FunctionExport.proto */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig);

/* FunctionImport.proto */
static int __Pyx_ImportFunction_3_0_10(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__create_list(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto*/
static CYTHON_INLINE PyObject *__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__class_name_bytes(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_add(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_remove(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_hasattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__getattr_impl(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len, char const **__pyx_v_attr_out_value, size_t *__pyx_v_attr_out_len); /* proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_getattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr *__pyx_optional_args); /* proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__setattr_impl(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len, char const *__pyx_v_attr_value, size_t __pyx_v_attr_value_len); /* proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_setattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__delattr_impl(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len); /* proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_delattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr *__pyx_optional_args); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id *__pyx_optional_args); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name *__pyx_optional_args); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_tag_name, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_append_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_insert_before(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_reference, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_replace_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_new_child, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_old_child, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_remove_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_decompose(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static CYTHON_INLINE size_t __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, Py_ssize_t __pyx_v_idx); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__forward_collection_match(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_func, PyObject *__pyx_v_attrs); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id *__pyx_optional_args); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr *__pyx_optional_args); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name *__pyx_optional_args); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_tag_name, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_element(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_tag_name, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_text_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_text, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from "libc.string" */

/* Module declarations from "libcpp.string" */

/* Module declarations from "resiliparse_inc.string_view" */

/* Module declarations from "libc.stdint" */

/* Module declarations from "resiliparse_inc.lexbor" */

/* Module declarations from "cython" */

/* Module declarations from "libc.stdio" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.type" */

/* Module declarations from "cpython" */

/* Module declarations from "cpython.object" */

/* Module declarations from "cpython.ref" */

/* Module declarations from "libcpp.utility" */

/* Module declarations from "libcpp.set" */

/* Module declarations from "libcpp.vector" */

/* Module declarations from "resiliparse_inc.uchardet" */

/* Module declarations from "resiliparse_dom.parse.encoding" */
static PyObject *(*__pyx_f_15resiliparse_dom_5parse_8encoding_bytes_to_str)(PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_bytes_to_str *__pyx_optional_args); /*proto*/
static PyObject *(*__pyx_f_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5)(PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5 *__pyx_optional_args); /*proto*/

/* Module declarations from "resiliparse_dom.parse.html" */
static std::set<lxb_tag_id_t>  __pyx_v_15resiliparse_dom_5parse_4html_BLOCK_ELEMENT_SET;
static PyObject *__Pyx_OrderedDict = 0;
static PyObject *__Pyx_EnumBase = 0;
static PyObject *__Pyx_FlagBase = 0;
static PyObject *__Pyx_globals = 0;
static CYTHON_INLINE int __pyx_f_15resiliparse_dom_5parse_4html_check_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *); /*proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_create_css_parser(lxb_css_memory_t **, lxb_css_parser_t **); /*proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_parser(lxb_css_memory_t *, lxb_css_parser_t *); /*proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(lxb_css_parser_t *); /*proto*/
static lxb_css_selector_list_t *__pyx_f_15resiliparse_dom_5parse_4html_parse_css_selectors(lxb_css_parser_t *, lxb_char_t const *, size_t); /*proto*/
static CYTHON_INLINE lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_next_node(lxb_dom_node_t const *, lxb_dom_node_t *, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node *__pyx_optional_args); /*proto*/
static CYTHON_INLINE lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_next_element_node(lxb_dom_node_t const *, lxb_dom_node_t *, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_element_node *__pyx_optional_args); /*proto*/
static CYTHON_INLINE std::string __pyx_f_15resiliparse_dom_5parse_4html_get_node_text(lxb_dom_node_t *); /*proto*/
static lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_get_element_by_id_impl(lxb_dom_node_t *, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl *__pyx_optional_args); /*proto*/
static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl(lxb_dom_node_t *, char const *, size_t, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl *__pyx_optional_args); /*proto*/
static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl(lxb_dom_node_t *, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl *__pyx_optional_args); /*proto*/
static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_tag_name_impl(lxb_dom_node_t *, char const *, size_t); /*proto*/
static lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_query_selector_impl(lxb_dom_node_t *, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, char const *, size_t); /*proto*/
static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_query_selector_all_impl(lxb_dom_node_t *, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_query_selector_all_impl *__pyx_optional_args); /*proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_matches_impl(lxb_dom_node_t *, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, char const *, size_t); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_f_15resiliparse_dom_5parse_4html_create_html_tree(PyObject *, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree *__pyx_optional_args); /*proto*/
static CYTHON_INLINE struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, lxb_dom_node_t *); /*proto*/
static CYTHON_INLINE struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, lxb_dom_collection_t *); /*proto*/
static CYTHON_INLINE void __pyx_f_15resiliparse_dom_5parse_4html__log_serialize_cb(lxb_char_t const *, size_t, void *); /*proto*/
static CYTHON_INLINE lexbor_action_t __pyx_f_15resiliparse_dom_5parse_4html_element_by_id_callback(lxb_dom_node_t *, void *); /*proto*/
static CYTHON_INLINE lxb_status_t __pyx_f_15resiliparse_dom_5parse_4html_css_select_callback(lxb_dom_node_t *, lxb_css_selector_specificity_t *, void *); /*proto*/
static CYTHON_INLINE lxb_status_t __pyx_f_15resiliparse_dom_5parse_4html_css_select_callback_single(lxb_dom_node_t *, lxb_css_selector_specificity_t *, void *); /*proto*/
static CYTHON_INLINE lxb_status_t __pyx_f_15resiliparse_dom_5parse_4html_css_match_callback(lxb_dom_node_t *, lxb_css_selector_specificity_t *, void *); /*proto*/
static CYTHON_INLINE int __pyx_f_15resiliparse_dom_5parse_4html_is_whitespace(char const ); /*proto*/
static CYTHON_INLINE void __pyx_f_15resiliparse_dom_5parse_4html__join_collections(lxb_dom_collection_t *, lxb_dom_collection_t *); /*proto*/
static CYTHON_INLINE void __pyx_f_15resiliparse_dom_5parse_4html__init_block_element_set(void); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string(std::string const &); /*proto*/
static PyObject *__Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType); /*proto*/
static PyObject *__pyx_unpickle___Pyx_EnumMeta__set_state(struct __pyx_obj___Pyx_EnumMeta *, PyObject *); /*proto*/
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "resiliparse_dom.parse.html"
extern int __pyx_module_is_main_resiliparse_dom__parse__html;
int __pyx_module_is_main_resiliparse_dom__parse__html = 0;

/* Implementation of "resiliparse_dom.parse.html" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_IndexError;
static PyObject *__pyx_builtin_SyntaxError;
/* #### Code section: string_decls ### */
static const char __pyx_k_[] = "";
static const char __pyx_k_t[] = "t";
static const char __pyx_k_v[] = "v";
static const char __pyx_k__3[] = ".";
static const char __pyx_k__5[] = " ";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k__20[] = "=\"";
static const char __pyx_k__21[] = "\"";
static const char __pyx_k__22[] = "<";
static const char __pyx_k__23[] = ">";
static const char __pyx_k__27[] = "{";
static const char __pyx_k__28[] = ", ";
static const char __pyx_k__29[] = "}";
static const char __pyx_k__50[] = "*";
static const char __pyx_k_add[] = "add";
static const char __pyx_k_all[] = "__all__";
static const char __pyx_k_cls[] = "cls";
static const char __pyx_k_dct[] = "dct";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_res[] = "res";
static const char __pyx_k_s_s[] = "%s.%s";
static const char __pyx_k_str[] = "__str__";
static const char __pyx_k_tag[] = "tag";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_TEXT[] = "TEXT";
static const char __pyx_k__113[] = "?";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_enum[] = "enum";
static const char __pyx_k_head[] = "head";
static const char __pyx_k_html[] = "html";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_iter[] = "__iter__";
static const char __pyx_k_join[] = "join";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_node[] = "node";
static const char __pyx_k_repr[] = "__repr__";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_step[] = "step";
static const char __pyx_k_stop[] = "stop";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_tree[] = "tree";
static const char __pyx_k_attrs[] = "attrs";
static const char __pyx_k_class[] = "__class__";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_depth[] = "depth";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_parse[] = "parse";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_s_s_d[] = "<%s.%s: %d>";
static const char __pyx_k_start[] = "start";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_strip[] = "strip";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_ENTITY[] = "ENTITY";
static const char __pyx_k_by_tag[] = "by_tag";
static const char __pyx_k_dict_2[] = "_dict";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_errors[] = "errors";
static const char __pyx_k_ignore[] = "ignore";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_remove[] = "remove";
static const char __pyx_k_typing[] = "typing";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_COMMENT[] = "COMMENT";
static const char __pyx_k_DOMNode[] = "DOMNode";
static const char __pyx_k_ELEMENT[] = "ELEMENT";
static const char __pyx_k_Element[] = " Element>";
static const char __pyx_k_IntEnum[] = "IntEnum";
static const char __pyx_k_IntFlag[] = "IntFlag";
static const char __pyx_k_by_attr[] = "by_attr";
static const char __pyx_k_context[] = "context";
static const char __pyx_k_delattr[] = "delattr";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_getattr[] = "getattr";
static const char __pyx_k_hasattr[] = "hasattr";
static const char __pyx_k_matches[] = "matches";
static const char __pyx_k_members[] = "__members__";
static const char __pyx_k_parents[] = "parents";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_setattr[] = "setattr";
static const char __pyx_k_DOCUMENT[] = "DOCUMENT";
static const char __pyx_k_EnumBase[] = "EnumBase";
static const char __pyx_k_EnumType[] = "EnumType";
static const char __pyx_k_HTMLTree[] = "HTMLTree";
static const char __pyx_k_KeyError[] = "KeyError";
static const char __pyx_k_NOTATION[] = "NOTATION";
static const char __pyx_k_NodeType[] = "NodeType";
static const char __pyx_k_by_class[] = "by_class";
static const char __pyx_k_document[] = "document";
static const char __pyx_k_encoding[] = "encoding";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_module_2[] = "module";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_selector[] = "selector";
static const char __pyx_k_set_name[] = "__set_name__";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_tag_name[] = "tag_name";
static const char __pyx_k_ATTRIBUTE[] = "ATTRIBUTE";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_attr_name[] = "attr_name";
static const char __pyx_k_base_node[] = "base_node";
static const char __pyx_k_decompose[] = "decompose";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_new_child[] = "new_child";
static const char __pyx_k_old_child[] = "old_child";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_reference[] = "reference";
static const char __pyx_k_DOMContext[] = "DOMContext";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_LAST_ENTRY[] = "LAST_ENTRY";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_attr_value[] = "attr_value";
static const char __pyx_k_class_name[] = "class_name";
static const char __pyx_k_element_id[] = "element_id";
static const char __pyx_k_is_end_tag[] = "is_end_tag";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_OrderedDict[] = "OrderedDict";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_SyntaxError[] = "SyntaxError";
static const char __pyx_k_collections[] = "collections";
static const char __pyx_k_mro_entries[] = "__mro_entries__";
static const char __pyx_k_DOCTYPE_html[] = "<!DOCTYPE html>";
static const char __pyx_k_Pyx_EnumBase[] = "__Pyx_EnumBase";
static const char __pyx_k_Pyx_FlagBase[] = "__Pyx_FlagBase";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_append_child[] = "append_child";
static const char __pyx_k_end_callback[] = "end_callback";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_member_names[] = "_member_names_";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_remove_child[] = "remove_child";
static const char __pyx_k_selector_all[] = "selector_all";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_traverse_dom[] = "traverse_dom";
static const char __pyx_k_use_setstate[] = "use_setstate";
static const char __pyx_k_CDATA_SECTION[] = "CDATA_SECTION";
static const char __pyx_k_DOCUMENT_TYPE[] = "DOCUMENT_TYPE";
static const char __pyx_k_DOMCollection[] = "DOMCollection";
static const char __pyx_k_HTML_Document[] = "[HTML Document]";
static const char __pyx_k_class_getitem[] = "__class_getitem__";
static const char __pyx_k_default_value[] = "default_value";
static const char __pyx_k_elements_only[] = "elements_only";
static const char __pyx_k_init_subclass[] = "__init_subclass__";
static const char __pyx_k_insert_before[] = "insert_before";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_replace_child[] = "replace_child";
static const char __pyx_k_DOMNode___iter[] = "DOMNode.__iter__";
static const char __pyx_k_HTMLTree_parse[] = "HTMLTree.parse";
static const char __pyx_k_create_element[] = "create_element";
static const char __pyx_k_is_end_tag_ptr[] = "is_end_tag_ptr";
static const char __pyx_k_query_selector[] = "query_selector";
static const char __pyx_k_start_callback[] = "start_callback";
static const char __pyx_k_DOMNode_delattr[] = "DOMNode.delattr";
static const char __pyx_k_DOMNode_getattr[] = "DOMNode.getattr";
static const char __pyx_k_DOMNode_hasattr[] = "DOMNode.hasattr";
static const char __pyx_k_DOMNode_matches[] = "DOMNode.matches";
static const char __pyx_k_DOMNode_setattr[] = "DOMNode.setattr";
static const char __pyx_k_INVALID_ELEMENT[] = "<INVALID ELEMENT>";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_CSS_parser_error[] = "CSS parser error: ";
static const char __pyx_k_ENTITY_REFERENCE[] = "ENTITY_REFERENCE";
static const char __pyx_k_Invalid_key_type[] = "Invalid key type: ";
static const char __pyx_k_case_insensitive[] = "case_insensitive";
static const char __pyx_k_create_text_node[] = "create_text_node";
static const char __pyx_k_parse_from_bytes[] = "parse_from_bytes";
static const char __pyx_k_DOCUMENT_FRAGMENT[] = "DOCUMENT_FRAGMENT";
static const char __pyx_k_DOMContext___init[] = "DOMContext.__init__";
static const char __pyx_k_DOMNode_decompose[] = "DOMNode.decompose";
static const char __pyx_k_No_such_attribute[] = "No such attribute: ";
static const char __pyx_k_get_element_by_id[] = "get_element_by_id";
static const char __pyx_k_Index_out_of_range[] = "Index out of range";
static const char __pyx_k_Pyx_EnumBase___new[] = "__Pyx_EnumBase.__new__";
static const char __pyx_k_Pyx_EnumBase___str[] = "__Pyx_EnumBase.__str__";
static const char __pyx_k_Pyx_FlagBase___new[] = "__Pyx_FlagBase.__new__";
static const char __pyx_k_Pyx_FlagBase___str[] = "__Pyx_FlagBase.__str__";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_query_selector_all[] = "query_selector_all";
static const char __pyx_k_DOMElementClassList[] = "DOMElementClassList";
static const char __pyx_k_Pyx_EnumBase___repr[] = "__Pyx_EnumBase.__repr__";
static const char __pyx_k_Pyx_FlagBase___repr[] = "__Pyx_FlagBase.__repr__";
static const char __pyx_k_DOMCollection___iter[] = "DOMCollection.__iter__";
static const char __pyx_k_DOMNode_append_child[] = "DOMNode.append_child";
static const char __pyx_k_DOMNode_remove_child[] = "DOMNode.remove_child";
static const char __pyx_k_Unknown_enum_value_s[] = "Unknown enum value: '%s'";
static const char __pyx_k_get_elements_by_attr[] = "get_elements_by_attr";
static const char __pyx_k_DOMCollection_matches[] = "DOMCollection.matches";
static const char __pyx_k_DOMNode_insert_before[] = "DOMNode.insert_before";
static const char __pyx_k_DOMNode_replace_child[] = "DOMNode.replace_child";
static const char __pyx_k_repr___locals_genexpr[] = "__repr__.<locals>.genexpr";
static const char __pyx_k_DOMNode_query_selector[] = "DOMNode.query_selector";
static const char __pyx_k_PROCESSING_INSTRUCTION[] = "PROCESSING_INSTRUCTION";
static const char __pyx_k_DOMElementClassList_add[] = "DOMElementClassList.add";
static const char __pyx_k_DOMNode___reduce_cython[] = "DOMNode.__reduce_cython__";
static const char __pyx_k_HTMLTree_create_element[] = "HTMLTree.create_element";
static const char __pyx_k_HTMLTree___reduce_cython[] = "HTMLTree.__reduce_cython__";
static const char __pyx_k_get_elements_by_tag_name[] = "get_elements_by_tag_name";
static const char __pyx_k_DOMNode___setstate_cython[] = "DOMNode.__setstate_cython__";
static const char __pyx_k_DOMNode_get_element_by_id[] = "DOMNode.get_element_by_id";
static const char __pyx_k_HTMLTree_create_text_node[] = "HTMLTree.create_text_node";
static const char __pyx_k_HTMLTree_parse_from_bytes[] = "HTMLTree.parse_from_bytes";
static const char __pyx_k_DOMElementClassList_remove[] = "DOMElementClassList.remove";
static const char __pyx_k_DOMNode_query_selector_all[] = "DOMNode.query_selector_all";
static const char __pyx_k_HTMLTree___setstate_cython[] = "HTMLTree.__setstate_cython__";
static const char __pyx_k_get_elements_by_class_name[] = "get_elements_by_class_name";
static const char __pyx_k_resiliparse_dom_parse_html[] = "resiliparse_dom.parse.html";
static const char __pyx_k_pyx_unpickle___Pyx_EnumMeta[] = "__pyx_unpickle___Pyx_EnumMeta";
static const char __pyx_k_DOMCollection_query_selector[] = "DOMCollection.query_selector";
static const char __pyx_k_DOMNode_get_elements_by_attr[] = "DOMNode.get_elements_by_attr";
static const char __pyx_k_Node_ist_not_an_Element_node[] = "Node ist not an Element node.";
static const char __pyx_k_Node_ist_not_an_element_node[] = "Node ist not an element node.";
static const char __pyx_k_Pyx_EnumMeta___reduce_cython[] = "__Pyx_EnumMeta.__reduce_cython__";
static const char __pyx_k_DOMCollection___reduce_cython[] = "DOMCollection.__reduce_cython__";
static const char __pyx_k_Failed_to_parse_HTML_document[] = "Failed to parse HTML document";
static const char __pyx_k_init___DOM_node_traversal_con[] = "\n    __init__()\n\n    DOM node traversal context object.\n\n    The context object has two attributes that are set by the traversal function for\n    keeping track of the current :class:`DOMNode` and the current traversal depth.\n    Besides these, the context object is arbitrarily mutable and can be used for\n    maintaining custom state.\n\n    :ivar DOMNode node: the current :class:`DOMNode`\n    :ivar int depth: the current traversal depth\n    ";
static const char __pyx_k_Pyx_EnumMeta___setstate_cython[] = "__Pyx_EnumMeta.__setstate_cython__";
static const char __pyx_k_resiliparse_dom_parse_html_pyx[] = "resiliparse_dom/parse/html.pyx";
static const char __pyx_k_Cannot_create_instance_directly[] = "Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()";
static const char __pyx_k_DOMCollection___setstate_cython[] = "DOMCollection.__setstate_cython__";
static const char __pyx_k_DOMCollection_get_element_by_id[] = "DOMCollection.get_element_by_id";
static const char __pyx_k_Failed_to_create_DOM_collection[] = "Failed to create DOM collection";
static const char __pyx_k_Failed_to_match_elements_by_CSS[] = "Failed to match elements by CSS selector";
static const char __pyx_k_Append_operation_on_uninitialize[] = "Append operation on uninitialized node";
static const char __pyx_k_DOMCollection_get_elements_by_at[] = "DOMCollection.get_elements_by_attr";
static const char __pyx_k_DOMCollection_get_elements_by_cl[] = "DOMCollection.get_elements_by_class_name";
static const char __pyx_k_DOMCollection_get_elements_by_ta[] = "DOMCollection.get_elements_by_tag_name";
static const char __pyx_k_DOMCollection_query_selector_all[] = "DOMCollection.query_selector_all";
static const char __pyx_k_DOMElementClassList___reduce_cyt[] = "DOMElementClassList.__reduce_cython__";
static const char __pyx_k_DOMElementClassList___setstate_c[] = "DOMElementClassList.__setstate_cython__";
static const char __pyx_k_DOMNode_get_elements_by_class_na[] = "DOMNode.get_elements_by_class_name";
static const char __pyx_k_DOMNode_get_elements_by_tag_name[] = "DOMNode.get_elements_by_tag_name";
static const char __pyx_k_Decompose_operation_on_uninitial[] = "Decompose operation on uninitialized node";
static const char __pyx_k_Failed_to_allocate_HTML_document[] = "Failed to allocate HTML document";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0[] = "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())";
static const char __pyx_k_Insert_operation_on_uninitialize[] = "Insert operation on uninitialized node";
static const char __pyx_k_Node_is_not_a_child_of_the_curre[] = "Node is not a child of the current node";
static const char __pyx_k_Reference_node_must_be_a_child_n[] = "Reference node must be a child node";
static const char __pyx_k_Remove_operation_on_uninitialize[] = "Remove operation on uninitialized node";
static const char __pyx_k_Replace_operation_on_uninitializ[] = "Replace operation on uninitialized node";
static const char __pyx_k_Trying_to_append_child_to_itself[] = "Trying to append child to itself";
static const char __pyx_k_Trying_to_create_element_in_unin[] = "Trying to create element in uninitialized document.";
static const char __pyx_k_Trying_to_create_text_node_in_un[] = "Trying to create text node in uninitialized document.";
static const char __pyx_k_Trying_to_get_item_of_uninitiali[] = "Trying to get item of uninitialized collection";
static const char __pyx_k_Trying_to_insert_node_as_its_own[] = "Trying to insert node as its own child";
static const char __pyx_k_Trying_to_select_items_from_unin[] = "Trying to select items from uninitialized collection";
static const char __pyx_k_Trying_to_set_HTML_contents_of_u[] = "Trying to set HTML contents of uninitialized DOM node";
static const char __pyx_k_Trying_to_set_text_contents_of_u[] = "Trying to set text contents of uninitialized DOM node";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
/* #### Code section: decls ### */
static int __pyx_pf_8EnumBase_14__Pyx_EnumMeta___init__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_cls, PyObject *__pyx_v_name, PyObject *__pyx_v_parents, PyObject *__pyx_v_dct); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_2__iter__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_cls); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_4__getitem__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_cls, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_6__reduce_cython__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_8__setstate_cython__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumBase___new__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cls, PyObject *__pyx_v_value, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumBase_2__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumBase_4__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_FlagBase___new__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cls, PyObject *__pyx_v_value, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_FlagBase_2__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8EnumBase_14__Pyx_FlagBase_4__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8EnumBase___pyx_unpickle___Pyx_EnumMeta(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList___cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_2add(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_4remove(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static Py_ssize_t __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_20__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_22__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode___cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree); /* proto */
static void __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2__dealloc__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4type___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_3tag___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11first_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10last_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_19first_element_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_18last_element_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11child_nodes___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_6parent___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4next___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4prev___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_12next_element___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_12prev_element___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_5value___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4text___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4text_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_text); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4html___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4html_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_html); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2id___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2id_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_name___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_list___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_5attrs___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_7hasattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_9getattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_default_value); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_13setattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_17delattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_21query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_23query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_25matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_27get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_v_case_insensitive); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_29get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_v_case_insensitive); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_31get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_v_case_insensitive); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_33get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_tag_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_35append_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_37insert_before(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_reference); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_39replace_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_new_child, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_old_child); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_41remove_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_43decompose(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___genexpr(PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_45__repr__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_47__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_49__eq__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static Py_hash_t __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_51__hash__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_53__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_55__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection___cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree); /* proto */
static void __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_2__dealloc__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_4get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_v_case_insensitive); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_6get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_v_case_insensitive); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_8get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_v_case_insensitive); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_10get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_tag_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_12query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_14query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_16matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___genexpr(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_genexpr_arg_0); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_25__repr__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_27__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_29__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_31__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree___init__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_2__cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static void __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4__dealloc__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_6parse(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_document); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_8parse_from_bytes(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_document, PyObject *__pyx_v_encoding, PyObject *__pyx_v_errors); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_8document___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4head___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4body___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_5title___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_10create_element(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_tag_name); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_12create_text_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_text); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_14__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_10DOMContext___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_traverse_dom(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_base_node, PyObject *__pyx_v_start_callback, PyObject *__pyx_v_end_callback, PyObject *__pyx_v_context, int __pyx_v_elements_only); /* proto */
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMElementClassList(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMNode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMCollection(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_HTMLTree(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, 0, 0, 0, 0};
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4type_type;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector;
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html_DOMNode;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__;
  PyObject *__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr;
  PyObject *__Pyx_EnumMeta;
  #endif
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__;
  PyTypeObject *__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr;
  PyTypeObject *__pyx_ptype___Pyx_EnumMeta;
  PyObject *__pyx_kp_b_;
  PyObject *__pyx_kp_s_;
  PyObject *__pyx_kp_u_;
  PyObject *__pyx_n_s_ATTRIBUTE;
  PyObject *__pyx_n_u_ATTRIBUTE;
  PyObject *__pyx_kp_u_Append_operation_on_uninitialize;
  PyObject *__pyx_n_s_CDATA_SECTION;
  PyObject *__pyx_n_u_CDATA_SECTION;
  PyObject *__pyx_n_s_COMMENT;
  PyObject *__pyx_n_u_COMMENT;
  PyObject *__pyx_kp_u_CSS_parser_error;
  PyObject *__pyx_kp_u_Cannot_create_instance_directly;
  PyObject *__pyx_kp_u_DOCTYPE_html;
  PyObject *__pyx_n_s_DOCUMENT;
  PyObject *__pyx_n_u_DOCUMENT;
  PyObject *__pyx_n_s_DOCUMENT_FRAGMENT;
  PyObject *__pyx_n_u_DOCUMENT_FRAGMENT;
  PyObject *__pyx_n_s_DOCUMENT_TYPE;
  PyObject *__pyx_n_u_DOCUMENT_TYPE;
  PyObject *__pyx_n_s_DOMCollection;
  PyObject *__pyx_n_u_DOMCollection;
  PyObject *__pyx_n_s_DOMCollection___iter;
  PyObject *__pyx_n_s_DOMCollection___reduce_cython;
  PyObject *__pyx_n_s_DOMCollection___setstate_cython;
  PyObject *__pyx_n_s_DOMCollection_get_element_by_id;
  PyObject *__pyx_n_s_DOMCollection_get_elements_by_at;
  PyObject *__pyx_n_s_DOMCollection_get_elements_by_cl;
  PyObject *__pyx_n_s_DOMCollection_get_elements_by_ta;
  PyObject *__pyx_n_s_DOMCollection_matches;
  PyObject *__pyx_n_s_DOMCollection_query_selector;
  PyObject *__pyx_n_s_DOMCollection_query_selector_all;
  PyObject *__pyx_n_s_DOMContext;
  PyObject *__pyx_n_u_DOMContext;
  PyObject *__pyx_n_s_DOMContext___init;
  PyObject *__pyx_n_s_DOMElementClassList;
  PyObject *__pyx_n_u_DOMElementClassList;
  PyObject *__pyx_n_s_DOMElementClassList___reduce_cyt;
  PyObject *__pyx_n_s_DOMElementClassList___setstate_c;
  PyObject *__pyx_n_s_DOMElementClassList_add;
  PyObject *__pyx_n_s_DOMElementClassList_remove;
  PyObject *__pyx_n_s_DOMNode;
  PyObject *__pyx_n_u_DOMNode;
  PyObject *__pyx_n_s_DOMNode___iter;
  PyObject *__pyx_n_s_DOMNode___reduce_cython;
  PyObject *__pyx_n_s_DOMNode___setstate_cython;
  PyObject *__pyx_n_s_DOMNode_append_child;
  PyObject *__pyx_n_s_DOMNode_decompose;
  PyObject *__pyx_n_s_DOMNode_delattr;
  PyObject *__pyx_n_s_DOMNode_get_element_by_id;
  PyObject *__pyx_n_s_DOMNode_get_elements_by_attr;
  PyObject *__pyx_n_s_DOMNode_get_elements_by_class_na;
  PyObject *__pyx_n_s_DOMNode_get_elements_by_tag_name;
  PyObject *__pyx_n_s_DOMNode_getattr;
  PyObject *__pyx_n_s_DOMNode_hasattr;
  PyObject *__pyx_n_s_DOMNode_insert_before;
  PyObject *__pyx_n_s_DOMNode_matches;
  PyObject *__pyx_n_s_DOMNode_query_selector;
  PyObject *__pyx_n_s_DOMNode_query_selector_all;
  PyObject *__pyx_n_s_DOMNode_remove_child;
  PyObject *__pyx_n_s_DOMNode_replace_child;
  PyObject *__pyx_n_s_DOMNode_setattr;
  PyObject *__pyx_kp_u_Decompose_operation_on_uninitial;
  PyObject *__pyx_n_s_ELEMENT;
  PyObject *__pyx_n_u_ELEMENT;
  PyObject *__pyx_n_s_ENTITY;
  PyObject *__pyx_n_u_ENTITY;
  PyObject *__pyx_n_s_ENTITY_REFERENCE;
  PyObject *__pyx_n_u_ENTITY_REFERENCE;
  PyObject *__pyx_kp_u_Element;
  PyObject *__pyx_n_s_EnumBase;
  PyObject *__pyx_n_s_EnumType;
  PyObject *__pyx_kp_u_Failed_to_allocate_HTML_document;
  PyObject *__pyx_kp_u_Failed_to_create_DOM_collection;
  PyObject *__pyx_kp_u_Failed_to_match_elements_by_CSS;
  PyObject *__pyx_kp_u_Failed_to_parse_HTML_document;
  PyObject *__pyx_n_s_HTMLTree;
  PyObject *__pyx_n_u_HTMLTree;
  PyObject *__pyx_n_s_HTMLTree___reduce_cython;
  PyObject *__pyx_n_s_HTMLTree___setstate_cython;
  PyObject *__pyx_n_s_HTMLTree_create_element;
  PyObject *__pyx_n_s_HTMLTree_create_text_node;
  PyObject *__pyx_n_s_HTMLTree_parse;
  PyObject *__pyx_n_s_HTMLTree_parse_from_bytes;
  PyObject *__pyx_kp_u_HTML_Document;
  PyObject *__pyx_kp_u_INVALID_ELEMENT;
  PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0;
  PyObject *__pyx_n_s_IndexError;
  PyObject *__pyx_kp_u_Index_out_of_range;
  PyObject *__pyx_kp_u_Insert_operation_on_uninitialize;
  PyObject *__pyx_n_s_IntEnum;
  PyObject *__pyx_n_s_IntFlag;
  PyObject *__pyx_kp_u_Invalid_key_type;
  PyObject *__pyx_n_s_KeyError;
  PyObject *__pyx_n_s_LAST_ENTRY;
  PyObject *__pyx_n_u_LAST_ENTRY;
  PyObject *__pyx_n_s_NOTATION;
  PyObject *__pyx_n_u_NOTATION;
  PyObject *__pyx_kp_u_No_such_attribute;
  PyObject *__pyx_n_s_NodeType;
  PyObject *__pyx_n_u_NodeType;
  PyObject *__pyx_kp_u_Node_is_not_a_child_of_the_curre;
  PyObject *__pyx_kp_u_Node_ist_not_an_Element_node;
  PyObject *__pyx_kp_u_Node_ist_not_an_element_node;
  PyObject *__pyx_kp_u_None;
  PyObject *__pyx_n_s_OrderedDict;
  PyObject *__pyx_n_s_PROCESSING_INSTRUCTION;
  PyObject *__pyx_n_u_PROCESSING_INSTRUCTION;
  PyObject *__pyx_n_s_PickleError;
  PyObject *__pyx_n_s_Pyx_EnumBase;
  PyObject *__pyx_n_s_Pyx_EnumBase___new;
  PyObject *__pyx_n_s_Pyx_EnumBase___repr;
  PyObject *__pyx_n_s_Pyx_EnumBase___str;
  PyObject *__pyx_n_s_Pyx_EnumMeta___reduce_cython;
  PyObject *__pyx_n_s_Pyx_EnumMeta___setstate_cython;
  PyObject *__pyx_n_s_Pyx_FlagBase;
  PyObject *__pyx_n_s_Pyx_FlagBase___new;
  PyObject *__pyx_n_s_Pyx_FlagBase___repr;
  PyObject *__pyx_n_s_Pyx_FlagBase___str;
  PyObject *__pyx_kp_u_Reference_node_must_be_a_child_n;
  PyObject *__pyx_kp_u_Remove_operation_on_uninitialize;
  PyObject *__pyx_kp_u_Replace_operation_on_uninitializ;
  PyObject *__pyx_n_s_RuntimeError;
  PyObject *__pyx_n_s_SyntaxError;
  PyObject *__pyx_n_s_TEXT;
  PyObject *__pyx_n_u_TEXT;
  PyObject *__pyx_kp_u_Trying_to_append_child_to_itself;
  PyObject *__pyx_kp_u_Trying_to_create_element_in_unin;
  PyObject *__pyx_kp_u_Trying_to_create_text_node_in_un;
  PyObject *__pyx_kp_u_Trying_to_get_item_of_uninitiali;
  PyObject *__pyx_kp_u_Trying_to_insert_node_as_its_own;
  PyObject *__pyx_kp_u_Trying_to_select_items_from_unin;
  PyObject *__pyx_kp_u_Trying_to_set_HTML_contents_of_u;
  PyObject *__pyx_kp_u_Trying_to_set_text_contents_of_u;
  PyObject *__pyx_n_s_TypeError;
  PyObject *__pyx_kp_s_Unknown_enum_value_s;
  PyObject *__pyx_n_s_ValueError;
  PyObject *__pyx_n_s__113;
  PyObject *__pyx_kp_u__20;
  PyObject *__pyx_kp_u__21;
  PyObject *__pyx_kp_u__22;
  PyObject *__pyx_kp_u__23;
  PyObject *__pyx_kp_u__27;
  PyObject *__pyx_kp_u__28;
  PyObject *__pyx_kp_u__29;
  PyObject *__pyx_kp_u__3;
  PyObject *__pyx_kp_b__5;
  PyObject *__pyx_kp_u__5;
  PyObject *__pyx_n_s__50;
  PyObject *__pyx_n_s_add;
  PyObject *__pyx_n_s_all;
  PyObject *__pyx_n_s_append_child;
  PyObject *__pyx_n_s_args;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_attr_name;
  PyObject *__pyx_n_s_attr_value;
  PyObject *__pyx_n_s_attrs;
  PyObject *__pyx_n_s_base_node;
  PyObject *__pyx_n_b_by_attr;
  PyObject *__pyx_n_b_by_class;
  PyObject *__pyx_n_b_by_tag;
  PyObject *__pyx_n_s_case_insensitive;
  PyObject *__pyx_n_s_class;
  PyObject *__pyx_n_s_class_getitem;
  PyObject *__pyx_n_s_class_name;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_close;
  PyObject *__pyx_n_s_cls;
  PyObject *__pyx_n_s_collections;
  PyObject *__pyx_n_s_context;
  PyObject *__pyx_n_s_create_element;
  PyObject *__pyx_n_s_create_text_node;
  PyObject *__pyx_n_s_dct;
  PyObject *__pyx_n_s_decompose;
  PyObject *__pyx_n_s_default_value;
  PyObject *__pyx_n_s_delattr;
  PyObject *__pyx_n_s_depth;
  PyObject *__pyx_n_s_dict;
  PyObject *__pyx_n_s_dict_2;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_doc;
  PyObject *__pyx_n_s_document;
  PyObject *__pyx_n_s_element_id;
  PyObject *__pyx_n_s_elements_only;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_encode;
  PyObject *__pyx_n_s_encoding;
  PyObject *__pyx_n_s_end_callback;
  PyObject *__pyx_n_s_enum;
  PyObject *__pyx_n_s_errors;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_genexpr;
  PyObject *__pyx_n_s_get;
  PyObject *__pyx_n_s_get_element_by_id;
  PyObject *__pyx_n_s_get_elements_by_attr;
  PyObject *__pyx_n_s_get_elements_by_class_name;
  PyObject *__pyx_n_s_get_elements_by_tag_name;
  PyObject *__pyx_n_s_getattr;
  PyObject *__pyx_n_s_getstate;
  PyObject *__pyx_n_s_hasattr;
  PyObject *__pyx_n_s_head;
  PyObject *__pyx_n_s_html;
  PyObject *__pyx_n_u_ignore;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_init;
  PyObject *__pyx_kp_s_init___DOM_node_traversal_con;
  PyObject *__pyx_n_s_init_subclass;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_s_insert_before;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_n_s_is_end_tag;
  PyObject *__pyx_n_s_is_end_tag_ptr;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_iter;
  PyObject *__pyx_n_s_join;
  PyObject *__pyx_n_s_lower;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_matches;
  PyObject *__pyx_n_s_member_names;
  PyObject *__pyx_n_s_members;
  PyObject *__pyx_n_s_metaclass;
  PyObject *__pyx_n_s_module;
  PyObject *__pyx_n_s_module_2;
  PyObject *__pyx_n_s_mro_entries;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_name_2;
  PyObject *__pyx_n_s_new;
  PyObject *__pyx_n_s_new_child;
  PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
  PyObject *__pyx_n_s_node;
  PyObject *__pyx_n_s_old_child;
  PyObject *__pyx_n_s_parents;
  PyObject *__pyx_n_s_parse;
  PyObject *__pyx_n_s_parse_from_bytes;
  PyObject *__pyx_n_s_pickle;
  PyObject *__pyx_n_s_prepare;
  PyObject *__pyx_n_s_pyx_PickleError;
  PyObject *__pyx_n_s_pyx_checksum;
  PyObject *__pyx_n_s_pyx_result;
  PyObject *__pyx_n_s_pyx_state;
  PyObject *__pyx_n_s_pyx_type;
  PyObject *__pyx_n_s_pyx_unpickle___Pyx_EnumMeta;
  PyObject *__pyx_n_s_pyx_vtable;
  PyObject *__pyx_n_s_qualname;
  PyObject *__pyx_n_s_query_selector;
  PyObject *__pyx_n_s_query_selector_all;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_reduce;
  PyObject *__pyx_n_s_reduce_cython;
  PyObject *__pyx_n_s_reduce_ex;
  PyObject *__pyx_n_s_reference;
  PyObject *__pyx_n_s_remove;
  PyObject *__pyx_n_s_remove_child;
  PyObject *__pyx_n_s_replace_child;
  PyObject *__pyx_n_s_repr;
  PyObject *__pyx_n_s_repr___locals_genexpr;
  PyObject *__pyx_n_s_res;
  PyObject *__pyx_n_s_resiliparse_dom_parse_html;
  PyObject *__pyx_kp_s_resiliparse_dom_parse_html_pyx;
  PyObject *__pyx_kp_s_s_s;
  PyObject *__pyx_kp_s_s_s_d;
  PyObject *__pyx_n_s_selector;
  PyObject *__pyx_n_b_selector_all;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_n_s_send;
  PyObject *__pyx_n_s_set_name;
  PyObject *__pyx_n_s_setattr;
  PyObject *__pyx_n_s_setstate;
  PyObject *__pyx_n_s_setstate_cython;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_start;
  PyObject *__pyx_n_s_start_callback;
  PyObject *__pyx_n_s_state;
  PyObject *__pyx_n_s_step;
  PyObject *__pyx_n_s_stop;
  PyObject *__pyx_n_s_str;
  PyObject *__pyx_kp_s_stringsource;
  PyObject *__pyx_n_s_strip;
  PyObject *__pyx_n_s_super;
  PyObject *__pyx_n_s_t;
  PyObject *__pyx_n_s_tag;
  PyObject *__pyx_n_s_tag_name;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_text;
  PyObject *__pyx_n_s_throw;
  PyObject *__pyx_n_s_traverse_dom;
  PyObject *__pyx_n_u_traverse_dom;
  PyObject *__pyx_n_s_tree;
  PyObject *__pyx_n_s_typing;
  PyObject *__pyx_n_s_update;
  PyObject *__pyx_n_s_use_setstate;
  PyObject *__pyx_kp_u_utf_8;
  PyObject *__pyx_n_s_v;
  PyObject *__pyx_n_s_value;
  PyObject *__pyx_n_s_values;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_10;
  PyObject *__pyx_int_222419149;
  PyObject *__pyx_int_228825662;
  PyObject *__pyx_int_238750788;
  PyObject *__pyx_int_neg_1;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__8;
  PyObject *__pyx_tuple__9;
  PyObject *__pyx_tuple__10;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__18;
  PyObject *__pyx_tuple__19;
  PyObject *__pyx_tuple__24;
  PyObject *__pyx_tuple__25;
  PyObject *__pyx_tuple__26;
  PyObject *__pyx_tuple__30;
  PyObject *__pyx_tuple__31;
  PyObject *__pyx_tuple__32;
  PyObject *__pyx_tuple__33;
  PyObject *__pyx_tuple__34;
  PyObject *__pyx_tuple__35;
  PyObject *__pyx_tuple__37;
  PyObject *__pyx_tuple__39;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__42;
  PyObject *__pyx_tuple__48;
  PyObject *__pyx_tuple__51;
  PyObject *__pyx_tuple__56;
  PyObject *__pyx_tuple__58;
  PyObject *__pyx_tuple__60;
  PyObject *__pyx_tuple__63;
  PyObject *__pyx_tuple__67;
  PyObject *__pyx_tuple__69;
  PyObject *__pyx_tuple__70;
  PyObject *__pyx_tuple__72;
  PyObject *__pyx_tuple__73;
  PyObject *__pyx_tuple__75;
  PyObject *__pyx_tuple__76;
  PyObject *__pyx_tuple__78;
  PyObject *__pyx_tuple__80;
  PyObject *__pyx_tuple__82;
  PyObject *__pyx_tuple__89;
  PyObject *__pyx_tuple__91;
  PyObject *__pyx_tuple__93;
  PyObject *__pyx_tuple__100;
  PyObject *__pyx_tuple__102;
  PyObject *__pyx_tuple__104;
  PyObject *__pyx_tuple__106;
  PyObject *__pyx_tuple__111;
  PyObject *__pyx_codeobj__36;
  PyObject *__pyx_codeobj__38;
  PyObject *__pyx_codeobj__40;
  PyObject *__pyx_codeobj__43;
  PyObject *__pyx_codeobj__44;
  PyObject *__pyx_codeobj__45;
  PyObject *__pyx_codeobj__46;
  PyObject *__pyx_codeobj__47;
  PyObject *__pyx_codeobj__49;
  PyObject *__pyx_codeobj__52;
  PyObject *__pyx_codeobj__53;
  PyObject *__pyx_codeobj__54;
  PyObject *__pyx_codeobj__55;
  PyObject *__pyx_codeobj__57;
  PyObject *__pyx_codeobj__59;
  PyObject *__pyx_codeobj__61;
  PyObject *__pyx_codeobj__62;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__65;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__68;
  PyObject *__pyx_codeobj__71;
  PyObject *__pyx_codeobj__74;
  PyObject *__pyx_codeobj__77;
  PyObject *__pyx_codeobj__79;
  PyObject *__pyx_codeobj__81;
  PyObject *__pyx_codeobj__83;
  PyObject *__pyx_codeobj__84;
  PyObject *__pyx_codeobj__85;
  PyObject *__pyx_codeobj__86;
  PyObject *__pyx_codeobj__87;
  PyObject *__pyx_codeobj__88;
  PyObject *__pyx_codeobj__90;
  PyObject *__pyx_codeobj__92;
  PyObject *__pyx_codeobj__94;
  PyObject *__pyx_codeobj__95;
  PyObject *__pyx_codeobj__96;
  PyObject *__pyx_codeobj__97;
  PyObject *__pyx_codeobj__98;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__101;
  PyObject *__pyx_codeobj__103;
  PyObject *__pyx_codeobj__105;
  PyObject *__pyx_codeobj__107;
  PyObject *__pyx_codeobj__108;
  PyObject *__pyx_codeobj__109;
  PyObject *__pyx_codeobj__110;
  PyObject *__pyx_codeobj__112;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4type_type);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html_DOMNode);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__);
  Py_CLEAR(clear_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype___Pyx_EnumMeta);
  Py_CLEAR(clear_module_state->__Pyx_EnumMeta);
  Py_CLEAR(clear_module_state->__pyx_kp_b_);
  Py_CLEAR(clear_module_state->__pyx_kp_s_);
  Py_CLEAR(clear_module_state->__pyx_kp_u_);
  Py_CLEAR(clear_module_state->__pyx_n_s_ATTRIBUTE);
  Py_CLEAR(clear_module_state->__pyx_n_u_ATTRIBUTE);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Append_operation_on_uninitialize);
  Py_CLEAR(clear_module_state->__pyx_n_s_CDATA_SECTION);
  Py_CLEAR(clear_module_state->__pyx_n_u_CDATA_SECTION);
  Py_CLEAR(clear_module_state->__pyx_n_s_COMMENT);
  Py_CLEAR(clear_module_state->__pyx_n_u_COMMENT);
  Py_CLEAR(clear_module_state->__pyx_kp_u_CSS_parser_error);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Cannot_create_instance_directly);
  Py_CLEAR(clear_module_state->__pyx_kp_u_DOCTYPE_html);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOCUMENT);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOCUMENT);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOCUMENT_FRAGMENT);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOCUMENT_FRAGMENT);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOCUMENT_TYPE);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOCUMENT_TYPE);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOMCollection);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection___iter);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_get_element_by_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_get_elements_by_at);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_get_elements_by_cl);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_get_elements_by_ta);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_matches);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_query_selector);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMCollection_query_selector_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMContext);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOMContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMContext___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMElementClassList);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOMElementClassList);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMElementClassList___reduce_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMElementClassList___setstate_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMElementClassList_add);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMElementClassList_remove);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode);
  Py_CLEAR(clear_module_state->__pyx_n_u_DOMNode);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode___iter);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_append_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_decompose);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_delattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_get_element_by_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_get_elements_by_attr);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_get_elements_by_class_na);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_get_elements_by_tag_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_getattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_hasattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_insert_before);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_matches);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_query_selector);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_query_selector_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_remove_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_replace_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOMNode_setattr);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Decompose_operation_on_uninitial);
  Py_CLEAR(clear_module_state->__pyx_n_s_ELEMENT);
  Py_CLEAR(clear_module_state->__pyx_n_u_ELEMENT);
  Py_CLEAR(clear_module_state->__pyx_n_s_ENTITY);
  Py_CLEAR(clear_module_state->__pyx_n_u_ENTITY);
  Py_CLEAR(clear_module_state->__pyx_n_s_ENTITY_REFERENCE);
  Py_CLEAR(clear_module_state->__pyx_n_u_ENTITY_REFERENCE);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Element);
  Py_CLEAR(clear_module_state->__pyx_n_s_EnumBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_EnumType);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Failed_to_allocate_HTML_document);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Failed_to_create_DOM_collection);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Failed_to_match_elements_by_CSS);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Failed_to_parse_HTML_document);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree);
  Py_CLEAR(clear_module_state->__pyx_n_u_HTMLTree);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree_create_element);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree_create_text_node);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree_parse);
  Py_CLEAR(clear_module_state->__pyx_n_s_HTMLTree_parse_from_bytes);
  Py_CLEAR(clear_module_state->__pyx_kp_u_HTML_Document);
  Py_CLEAR(clear_module_state->__pyx_kp_u_INVALID_ELEMENT);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_IndexError);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Index_out_of_range);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Insert_operation_on_uninitialize);
  Py_CLEAR(clear_module_state->__pyx_n_s_IntEnum);
  Py_CLEAR(clear_module_state->__pyx_n_s_IntFlag);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_key_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_KeyError);
  Py_CLEAR(clear_module_state->__pyx_n_s_LAST_ENTRY);
  Py_CLEAR(clear_module_state->__pyx_n_u_LAST_ENTRY);
  Py_CLEAR(clear_module_state->__pyx_n_s_NOTATION);
  Py_CLEAR(clear_module_state->__pyx_n_u_NOTATION);
  Py_CLEAR(clear_module_state->__pyx_kp_u_No_such_attribute);
  Py_CLEAR(clear_module_state->__pyx_n_s_NodeType);
  Py_CLEAR(clear_module_state->__pyx_n_u_NodeType);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Node_is_not_a_child_of_the_curre);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Node_ist_not_an_Element_node);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Node_ist_not_an_element_node);
  Py_CLEAR(clear_module_state->__pyx_kp_u_None);
  Py_CLEAR(clear_module_state->__pyx_n_s_OrderedDict);
  Py_CLEAR(clear_module_state->__pyx_n_s_PROCESSING_INSTRUCTION);
  Py_CLEAR(clear_module_state->__pyx_n_u_PROCESSING_INSTRUCTION);
  Py_CLEAR(clear_module_state->__pyx_n_s_PickleError);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_EnumBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_EnumBase___new);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_EnumBase___repr);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_EnumBase___str);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_EnumMeta___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_EnumMeta___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_FlagBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_FlagBase___new);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_FlagBase___repr);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pyx_FlagBase___str);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reference_node_must_be_a_child_n);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Remove_operation_on_uninitialize);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Replace_operation_on_uninitializ);
  Py_CLEAR(clear_module_state->__pyx_n_s_RuntimeError);
  Py_CLEAR(clear_module_state->__pyx_n_s_SyntaxError);
  Py_CLEAR(clear_module_state->__pyx_n_s_TEXT);
  Py_CLEAR(clear_module_state->__pyx_n_u_TEXT);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_append_child_to_itself);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_create_element_in_unin);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_create_text_node_in_un);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_get_item_of_uninitiali);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_insert_node_as_its_own);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_select_items_from_unin);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_set_HTML_contents_of_u);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Trying_to_set_text_contents_of_u);
  Py_CLEAR(clear_module_state->__pyx_n_s_TypeError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Unknown_enum_value_s);
  Py_CLEAR(clear_module_state->__pyx_n_s_ValueError);
  Py_CLEAR(clear_module_state->__pyx_n_s__113);
  Py_CLEAR(clear_module_state->__pyx_kp_u__20);
  Py_CLEAR(clear_module_state->__pyx_kp_u__21);
  Py_CLEAR(clear_module_state->__pyx_kp_u__22);
  Py_CLEAR(clear_module_state->__pyx_kp_u__23);
  Py_CLEAR(clear_module_state->__pyx_kp_u__27);
  Py_CLEAR(clear_module_state->__pyx_kp_u__28);
  Py_CLEAR(clear_module_state->__pyx_kp_u__29);
  Py_CLEAR(clear_module_state->__pyx_kp_u__3);
  Py_CLEAR(clear_module_state->__pyx_kp_b__5);
  Py_CLEAR(clear_module_state->__pyx_kp_u__5);
  Py_CLEAR(clear_module_state->__pyx_n_s__50);
  Py_CLEAR(clear_module_state->__pyx_n_s_add);
  Py_CLEAR(clear_module_state->__pyx_n_s_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_append_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_args);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_attr_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_attr_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_attrs);
  Py_CLEAR(clear_module_state->__pyx_n_s_base_node);
  Py_CLEAR(clear_module_state->__pyx_n_b_by_attr);
  Py_CLEAR(clear_module_state->__pyx_n_b_by_class);
  Py_CLEAR(clear_module_state->__pyx_n_b_by_tag);
  Py_CLEAR(clear_module_state->__pyx_n_s_case_insensitive);
  Py_CLEAR(clear_module_state->__pyx_n_s_class);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_getitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_close);
  Py_CLEAR(clear_module_state->__pyx_n_s_cls);
  Py_CLEAR(clear_module_state->__pyx_n_s_collections);
  Py_CLEAR(clear_module_state->__pyx_n_s_context);
  Py_CLEAR(clear_module_state->__pyx_n_s_create_element);
  Py_CLEAR(clear_module_state->__pyx_n_s_create_text_node);
  Py_CLEAR(clear_module_state->__pyx_n_s_dct);
  Py_CLEAR(clear_module_state->__pyx_n_s_decompose);
  Py_CLEAR(clear_module_state->__pyx_n_s_default_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_delattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_depth);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_doc);
  Py_CLEAR(clear_module_state->__pyx_n_s_document);
  Py_CLEAR(clear_module_state->__pyx_n_s_element_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_elements_only);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_encode);
  Py_CLEAR(clear_module_state->__pyx_n_s_encoding);
  Py_CLEAR(clear_module_state->__pyx_n_s_end_callback);
  Py_CLEAR(clear_module_state->__pyx_n_s_enum);
  Py_CLEAR(clear_module_state->__pyx_n_s_errors);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_get);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_element_by_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_elements_by_attr);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_elements_by_class_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_elements_by_tag_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_getattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_getstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_hasattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_head);
  Py_CLEAR(clear_module_state->__pyx_n_s_html);
  Py_CLEAR(clear_module_state->__pyx_n_u_ignore);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_init);
  Py_CLEAR(clear_module_state->__pyx_kp_s_init___DOM_node_traversal_con);
  Py_CLEAR(clear_module_state->__pyx_n_s_init_subclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_s_insert_before);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_end_tag);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_end_tag_ptr);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_iter);
  Py_CLEAR(clear_module_state->__pyx_n_s_join);
  Py_CLEAR(clear_module_state->__pyx_n_s_lower);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_matches);
  Py_CLEAR(clear_module_state->__pyx_n_s_member_names);
  Py_CLEAR(clear_module_state->__pyx_n_s_members);
  Py_CLEAR(clear_module_state->__pyx_n_s_metaclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_module);
  Py_CLEAR(clear_module_state->__pyx_n_s_module_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_mro_entries);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_name_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_new);
  Py_CLEAR(clear_module_state->__pyx_n_s_new_child);
  Py_CLEAR(clear_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_CLEAR(clear_module_state->__pyx_n_s_node);
  Py_CLEAR(clear_module_state->__pyx_n_s_old_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_parents);
  Py_CLEAR(clear_module_state->__pyx_n_s_parse);
  Py_CLEAR(clear_module_state->__pyx_n_s_parse_from_bytes);
  Py_CLEAR(clear_module_state->__pyx_n_s_pickle);
  Py_CLEAR(clear_module_state->__pyx_n_s_prepare);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_PickleError);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_checksum);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_result);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle___Pyx_EnumMeta);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_vtable);
  Py_CLEAR(clear_module_state->__pyx_n_s_qualname);
  Py_CLEAR(clear_module_state->__pyx_n_s_query_selector);
  Py_CLEAR(clear_module_state->__pyx_n_s_query_selector_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_reference);
  Py_CLEAR(clear_module_state->__pyx_n_s_remove);
  Py_CLEAR(clear_module_state->__pyx_n_s_remove_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_replace_child);
  Py_CLEAR(clear_module_state->__pyx_n_s_repr);
  Py_CLEAR(clear_module_state->__pyx_n_s_repr___locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_res);
  Py_CLEAR(clear_module_state->__pyx_n_s_resiliparse_dom_parse_html);
  Py_CLEAR(clear_module_state->__pyx_kp_s_resiliparse_dom_parse_html_pyx);
  Py_CLEAR(clear_module_state->__pyx_kp_s_s_s);
  Py_CLEAR(clear_module_state->__pyx_kp_s_s_s_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_selector);
  Py_CLEAR(clear_module_state->__pyx_n_b_selector_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_n_s_send);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_setattr);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_start);
  Py_CLEAR(clear_module_state->__pyx_n_s_start_callback);
  Py_CLEAR(clear_module_state->__pyx_n_s_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_stop);
  Py_CLEAR(clear_module_state->__pyx_n_s_str);
  Py_CLEAR(clear_module_state->__pyx_kp_s_stringsource);
  Py_CLEAR(clear_module_state->__pyx_n_s_strip);
  Py_CLEAR(clear_module_state->__pyx_n_s_super);
  Py_CLEAR(clear_module_state->__pyx_n_s_t);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_throw);
  Py_CLEAR(clear_module_state->__pyx_n_s_traverse_dom);
  Py_CLEAR(clear_module_state->__pyx_n_u_traverse_dom);
  Py_CLEAR(clear_module_state->__pyx_n_s_tree);
  Py_CLEAR(clear_module_state->__pyx_n_s_typing);
  Py_CLEAR(clear_module_state->__pyx_n_s_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_use_setstate);
  Py_CLEAR(clear_module_state->__pyx_kp_u_utf_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_v);
  Py_CLEAR(clear_module_state->__pyx_n_s_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_values);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_10);
  Py_CLEAR(clear_module_state->__pyx_int_222419149);
  Py_CLEAR(clear_module_state->__pyx_int_228825662);
  Py_CLEAR(clear_module_state->__pyx_int_238750788);
  Py_CLEAR(clear_module_state->__pyx_int_neg_1);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__9);
  Py_CLEAR(clear_module_state->__pyx_tuple__10);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__19);
  Py_CLEAR(clear_module_state->__pyx_tuple__24);
  Py_CLEAR(clear_module_state->__pyx_tuple__25);
  Py_CLEAR(clear_module_state->__pyx_tuple__26);
  Py_CLEAR(clear_module_state->__pyx_tuple__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__31);
  Py_CLEAR(clear_module_state->__pyx_tuple__32);
  Py_CLEAR(clear_module_state->__pyx_tuple__33);
  Py_CLEAR(clear_module_state->__pyx_tuple__34);
  Py_CLEAR(clear_module_state->__pyx_tuple__35);
  Py_CLEAR(clear_module_state->__pyx_tuple__37);
  Py_CLEAR(clear_module_state->__pyx_tuple__39);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__42);
  Py_CLEAR(clear_module_state->__pyx_tuple__48);
  Py_CLEAR(clear_module_state->__pyx_tuple__51);
  Py_CLEAR(clear_module_state->__pyx_tuple__56);
  Py_CLEAR(clear_module_state->__pyx_tuple__58);
  Py_CLEAR(clear_module_state->__pyx_tuple__60);
  Py_CLEAR(clear_module_state->__pyx_tuple__63);
  Py_CLEAR(clear_module_state->__pyx_tuple__67);
  Py_CLEAR(clear_module_state->__pyx_tuple__69);
  Py_CLEAR(clear_module_state->__pyx_tuple__70);
  Py_CLEAR(clear_module_state->__pyx_tuple__72);
  Py_CLEAR(clear_module_state->__pyx_tuple__73);
  Py_CLEAR(clear_module_state->__pyx_tuple__75);
  Py_CLEAR(clear_module_state->__pyx_tuple__76);
  Py_CLEAR(clear_module_state->__pyx_tuple__78);
  Py_CLEAR(clear_module_state->__pyx_tuple__80);
  Py_CLEAR(clear_module_state->__pyx_tuple__82);
  Py_CLEAR(clear_module_state->__pyx_tuple__89);
  Py_CLEAR(clear_module_state->__pyx_tuple__91);
  Py_CLEAR(clear_module_state->__pyx_tuple__93);
  Py_CLEAR(clear_module_state->__pyx_tuple__100);
  Py_CLEAR(clear_module_state->__pyx_tuple__102);
  Py_CLEAR(clear_module_state->__pyx_tuple__104);
  Py_CLEAR(clear_module_state->__pyx_tuple__106);
  Py_CLEAR(clear_module_state->__pyx_tuple__111);
  Py_CLEAR(clear_module_state->__pyx_codeobj__36);
  Py_CLEAR(clear_module_state->__pyx_codeobj__38);
  Py_CLEAR(clear_module_state->__pyx_codeobj__40);
  Py_CLEAR(clear_module_state->__pyx_codeobj__43);
  Py_CLEAR(clear_module_state->__pyx_codeobj__44);
  Py_CLEAR(clear_module_state->__pyx_codeobj__45);
  Py_CLEAR(clear_module_state->__pyx_codeobj__46);
  Py_CLEAR(clear_module_state->__pyx_codeobj__47);
  Py_CLEAR(clear_module_state->__pyx_codeobj__49);
  Py_CLEAR(clear_module_state->__pyx_codeobj__52);
  Py_CLEAR(clear_module_state->__pyx_codeobj__53);
  Py_CLEAR(clear_module_state->__pyx_codeobj__54);
  Py_CLEAR(clear_module_state->__pyx_codeobj__55);
  Py_CLEAR(clear_module_state->__pyx_codeobj__57);
  Py_CLEAR(clear_module_state->__pyx_codeobj__59);
  Py_CLEAR(clear_module_state->__pyx_codeobj__61);
  Py_CLEAR(clear_module_state->__pyx_codeobj__62);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__65);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__68);
  Py_CLEAR(clear_module_state->__pyx_codeobj__71);
  Py_CLEAR(clear_module_state->__pyx_codeobj__74);
  Py_CLEAR(clear_module_state->__pyx_codeobj__77);
  Py_CLEAR(clear_module_state->__pyx_codeobj__79);
  Py_CLEAR(clear_module_state->__pyx_codeobj__81);
  Py_CLEAR(clear_module_state->__pyx_codeobj__83);
  Py_CLEAR(clear_module_state->__pyx_codeobj__84);
  Py_CLEAR(clear_module_state->__pyx_codeobj__85);
  Py_CLEAR(clear_module_state->__pyx_codeobj__86);
  Py_CLEAR(clear_module_state->__pyx_codeobj__87);
  Py_CLEAR(clear_module_state->__pyx_codeobj__88);
  Py_CLEAR(clear_module_state->__pyx_codeobj__90);
  Py_CLEAR(clear_module_state->__pyx_codeobj__92);
  Py_CLEAR(clear_module_state->__pyx_codeobj__94);
  Py_CLEAR(clear_module_state->__pyx_codeobj__95);
  Py_CLEAR(clear_module_state->__pyx_codeobj__96);
  Py_CLEAR(clear_module_state->__pyx_codeobj__97);
  Py_CLEAR(clear_module_state->__pyx_codeobj__98);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__101);
  Py_CLEAR(clear_module_state->__pyx_codeobj__103);
  Py_CLEAR(clear_module_state->__pyx_codeobj__105);
  Py_CLEAR(clear_module_state->__pyx_codeobj__107);
  Py_CLEAR(clear_module_state->__pyx_codeobj__108);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  Py_CLEAR(clear_module_state->__pyx_codeobj__110);
  Py_CLEAR(clear_module_state->__pyx_codeobj__112);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4type_type);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html_DOMNode);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__);
  Py_VISIT(traverse_module_state->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype___Pyx_EnumMeta);
  Py_VISIT(traverse_module_state->__Pyx_EnumMeta);
  Py_VISIT(traverse_module_state->__pyx_kp_b_);
  Py_VISIT(traverse_module_state->__pyx_kp_s_);
  Py_VISIT(traverse_module_state->__pyx_kp_u_);
  Py_VISIT(traverse_module_state->__pyx_n_s_ATTRIBUTE);
  Py_VISIT(traverse_module_state->__pyx_n_u_ATTRIBUTE);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Append_operation_on_uninitialize);
  Py_VISIT(traverse_module_state->__pyx_n_s_CDATA_SECTION);
  Py_VISIT(traverse_module_state->__pyx_n_u_CDATA_SECTION);
  Py_VISIT(traverse_module_state->__pyx_n_s_COMMENT);
  Py_VISIT(traverse_module_state->__pyx_n_u_COMMENT);
  Py_VISIT(traverse_module_state->__pyx_kp_u_CSS_parser_error);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Cannot_create_instance_directly);
  Py_VISIT(traverse_module_state->__pyx_kp_u_DOCTYPE_html);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOCUMENT);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOCUMENT);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOCUMENT_FRAGMENT);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOCUMENT_FRAGMENT);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOCUMENT_TYPE);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOCUMENT_TYPE);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOMCollection);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection___iter);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_get_element_by_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_get_elements_by_at);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_get_elements_by_cl);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_get_elements_by_ta);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_matches);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_query_selector);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMCollection_query_selector_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMContext);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOMContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMContext___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMElementClassList);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOMElementClassList);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMElementClassList___reduce_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMElementClassList___setstate_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMElementClassList_add);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMElementClassList_remove);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode);
  Py_VISIT(traverse_module_state->__pyx_n_u_DOMNode);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode___iter);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_append_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_decompose);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_delattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_get_element_by_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_get_elements_by_attr);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_get_elements_by_class_na);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_get_elements_by_tag_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_getattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_hasattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_insert_before);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_matches);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_query_selector);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_query_selector_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_remove_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_replace_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOMNode_setattr);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Decompose_operation_on_uninitial);
  Py_VISIT(traverse_module_state->__pyx_n_s_ELEMENT);
  Py_VISIT(traverse_module_state->__pyx_n_u_ELEMENT);
  Py_VISIT(traverse_module_state->__pyx_n_s_ENTITY);
  Py_VISIT(traverse_module_state->__pyx_n_u_ENTITY);
  Py_VISIT(traverse_module_state->__pyx_n_s_ENTITY_REFERENCE);
  Py_VISIT(traverse_module_state->__pyx_n_u_ENTITY_REFERENCE);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Element);
  Py_VISIT(traverse_module_state->__pyx_n_s_EnumBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_EnumType);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Failed_to_allocate_HTML_document);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Failed_to_create_DOM_collection);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Failed_to_match_elements_by_CSS);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Failed_to_parse_HTML_document);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree);
  Py_VISIT(traverse_module_state->__pyx_n_u_HTMLTree);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree_create_element);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree_create_text_node);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree_parse);
  Py_VISIT(traverse_module_state->__pyx_n_s_HTMLTree_parse_from_bytes);
  Py_VISIT(traverse_module_state->__pyx_kp_u_HTML_Document);
  Py_VISIT(traverse_module_state->__pyx_kp_u_INVALID_ELEMENT);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_IndexError);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Index_out_of_range);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Insert_operation_on_uninitialize);
  Py_VISIT(traverse_module_state->__pyx_n_s_IntEnum);
  Py_VISIT(traverse_module_state->__pyx_n_s_IntFlag);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_key_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_KeyError);
  Py_VISIT(traverse_module_state->__pyx_n_s_LAST_ENTRY);
  Py_VISIT(traverse_module_state->__pyx_n_u_LAST_ENTRY);
  Py_VISIT(traverse_module_state->__pyx_n_s_NOTATION);
  Py_VISIT(traverse_module_state->__pyx_n_u_NOTATION);
  Py_VISIT(traverse_module_state->__pyx_kp_u_No_such_attribute);
  Py_VISIT(traverse_module_state->__pyx_n_s_NodeType);
  Py_VISIT(traverse_module_state->__pyx_n_u_NodeType);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Node_is_not_a_child_of_the_curre);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Node_ist_not_an_Element_node);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Node_ist_not_an_element_node);
  Py_VISIT(traverse_module_state->__pyx_kp_u_None);
  Py_VISIT(traverse_module_state->__pyx_n_s_OrderedDict);
  Py_VISIT(traverse_module_state->__pyx_n_s_PROCESSING_INSTRUCTION);
  Py_VISIT(traverse_module_state->__pyx_n_u_PROCESSING_INSTRUCTION);
  Py_VISIT(traverse_module_state->__pyx_n_s_PickleError);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_EnumBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_EnumBase___new);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_EnumBase___repr);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_EnumBase___str);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_EnumMeta___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_EnumMeta___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_FlagBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_FlagBase___new);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_FlagBase___repr);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pyx_FlagBase___str);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reference_node_must_be_a_child_n);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Remove_operation_on_uninitialize);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Replace_operation_on_uninitializ);
  Py_VISIT(traverse_module_state->__pyx_n_s_RuntimeError);
  Py_VISIT(traverse_module_state->__pyx_n_s_SyntaxError);
  Py_VISIT(traverse_module_state->__pyx_n_s_TEXT);
  Py_VISIT(traverse_module_state->__pyx_n_u_TEXT);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_append_child_to_itself);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_create_element_in_unin);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_create_text_node_in_un);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_get_item_of_uninitiali);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_insert_node_as_its_own);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_select_items_from_unin);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_set_HTML_contents_of_u);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Trying_to_set_text_contents_of_u);
  Py_VISIT(traverse_module_state->__pyx_n_s_TypeError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Unknown_enum_value_s);
  Py_VISIT(traverse_module_state->__pyx_n_s_ValueError);
  Py_VISIT(traverse_module_state->__pyx_n_s__113);
  Py_VISIT(traverse_module_state->__pyx_kp_u__20);
  Py_VISIT(traverse_module_state->__pyx_kp_u__21);
  Py_VISIT(traverse_module_state->__pyx_kp_u__22);
  Py_VISIT(traverse_module_state->__pyx_kp_u__23);
  Py_VISIT(traverse_module_state->__pyx_kp_u__27);
  Py_VISIT(traverse_module_state->__pyx_kp_u__28);
  Py_VISIT(traverse_module_state->__pyx_kp_u__29);
  Py_VISIT(traverse_module_state->__pyx_kp_u__3);
  Py_VISIT(traverse_module_state->__pyx_kp_b__5);
  Py_VISIT(traverse_module_state->__pyx_kp_u__5);
  Py_VISIT(traverse_module_state->__pyx_n_s__50);
  Py_VISIT(traverse_module_state->__pyx_n_s_add);
  Py_VISIT(traverse_module_state->__pyx_n_s_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_append_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_args);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_attr_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_attr_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_attrs);
  Py_VISIT(traverse_module_state->__pyx_n_s_base_node);
  Py_VISIT(traverse_module_state->__pyx_n_b_by_attr);
  Py_VISIT(traverse_module_state->__pyx_n_b_by_class);
  Py_VISIT(traverse_module_state->__pyx_n_b_by_tag);
  Py_VISIT(traverse_module_state->__pyx_n_s_case_insensitive);
  Py_VISIT(traverse_module_state->__pyx_n_s_class);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_getitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_close);
  Py_VISIT(traverse_module_state->__pyx_n_s_cls);
  Py_VISIT(traverse_module_state->__pyx_n_s_collections);
  Py_VISIT(traverse_module_state->__pyx_n_s_context);
  Py_VISIT(traverse_module_state->__pyx_n_s_create_element);
  Py_VISIT(traverse_module_state->__pyx_n_s_create_text_node);
  Py_VISIT(traverse_module_state->__pyx_n_s_dct);
  Py_VISIT(traverse_module_state->__pyx_n_s_decompose);
  Py_VISIT(traverse_module_state->__pyx_n_s_default_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_delattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_depth);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_doc);
  Py_VISIT(traverse_module_state->__pyx_n_s_document);
  Py_VISIT(traverse_module_state->__pyx_n_s_element_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_elements_only);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_encode);
  Py_VISIT(traverse_module_state->__pyx_n_s_encoding);
  Py_VISIT(traverse_module_state->__pyx_n_s_end_callback);
  Py_VISIT(traverse_module_state->__pyx_n_s_enum);
  Py_VISIT(traverse_module_state->__pyx_n_s_errors);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_get);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_element_by_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_elements_by_attr);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_elements_by_class_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_elements_by_tag_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_getattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_getstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_hasattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_head);
  Py_VISIT(traverse_module_state->__pyx_n_s_html);
  Py_VISIT(traverse_module_state->__pyx_n_u_ignore);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_init);
  Py_VISIT(traverse_module_state->__pyx_kp_s_init___DOM_node_traversal_con);
  Py_VISIT(traverse_module_state->__pyx_n_s_init_subclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_s_insert_before);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_end_tag);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_end_tag_ptr);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_iter);
  Py_VISIT(traverse_module_state->__pyx_n_s_join);
  Py_VISIT(traverse_module_state->__pyx_n_s_lower);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_matches);
  Py_VISIT(traverse_module_state->__pyx_n_s_member_names);
  Py_VISIT(traverse_module_state->__pyx_n_s_members);
  Py_VISIT(traverse_module_state->__pyx_n_s_metaclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_module);
  Py_VISIT(traverse_module_state->__pyx_n_s_module_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_mro_entries);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_name_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_new);
  Py_VISIT(traverse_module_state->__pyx_n_s_new_child);
  Py_VISIT(traverse_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_VISIT(traverse_module_state->__pyx_n_s_node);
  Py_VISIT(traverse_module_state->__pyx_n_s_old_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_parents);
  Py_VISIT(traverse_module_state->__pyx_n_s_parse);
  Py_VISIT(traverse_module_state->__pyx_n_s_parse_from_bytes);
  Py_VISIT(traverse_module_state->__pyx_n_s_pickle);
  Py_VISIT(traverse_module_state->__pyx_n_s_prepare);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_PickleError);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_checksum);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_result);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle___Pyx_EnumMeta);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_vtable);
  Py_VISIT(traverse_module_state->__pyx_n_s_qualname);
  Py_VISIT(traverse_module_state->__pyx_n_s_query_selector);
  Py_VISIT(traverse_module_state->__pyx_n_s_query_selector_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_reference);
  Py_VISIT(traverse_module_state->__pyx_n_s_remove);
  Py_VISIT(traverse_module_state->__pyx_n_s_remove_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_replace_child);
  Py_VISIT(traverse_module_state->__pyx_n_s_repr);
  Py_VISIT(traverse_module_state->__pyx_n_s_repr___locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_res);
  Py_VISIT(traverse_module_state->__pyx_n_s_resiliparse_dom_parse_html);
  Py_VISIT(traverse_module_state->__pyx_kp_s_resiliparse_dom_parse_html_pyx);
  Py_VISIT(traverse_module_state->__pyx_kp_s_s_s);
  Py_VISIT(traverse_module_state->__pyx_kp_s_s_s_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_selector);
  Py_VISIT(traverse_module_state->__pyx_n_b_selector_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_n_s_send);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_setattr);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_start);
  Py_VISIT(traverse_module_state->__pyx_n_s_start_callback);
  Py_VISIT(traverse_module_state->__pyx_n_s_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_stop);
  Py_VISIT(traverse_module_state->__pyx_n_s_str);
  Py_VISIT(traverse_module_state->__pyx_kp_s_stringsource);
  Py_VISIT(traverse_module_state->__pyx_n_s_strip);
  Py_VISIT(traverse_module_state->__pyx_n_s_super);
  Py_VISIT(traverse_module_state->__pyx_n_s_t);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_throw);
  Py_VISIT(traverse_module_state->__pyx_n_s_traverse_dom);
  Py_VISIT(traverse_module_state->__pyx_n_u_traverse_dom);
  Py_VISIT(traverse_module_state->__pyx_n_s_tree);
  Py_VISIT(traverse_module_state->__pyx_n_s_typing);
  Py_VISIT(traverse_module_state->__pyx_n_s_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_use_setstate);
  Py_VISIT(traverse_module_state->__pyx_kp_u_utf_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_v);
  Py_VISIT(traverse_module_state->__pyx_n_s_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_values);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_10);
  Py_VISIT(traverse_module_state->__pyx_int_222419149);
  Py_VISIT(traverse_module_state->__pyx_int_228825662);
  Py_VISIT(traverse_module_state->__pyx_int_238750788);
  Py_VISIT(traverse_module_state->__pyx_int_neg_1);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__9);
  Py_VISIT(traverse_module_state->__pyx_tuple__10);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__19);
  Py_VISIT(traverse_module_state->__pyx_tuple__24);
  Py_VISIT(traverse_module_state->__pyx_tuple__25);
  Py_VISIT(traverse_module_state->__pyx_tuple__26);
  Py_VISIT(traverse_module_state->__pyx_tuple__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__31);
  Py_VISIT(traverse_module_state->__pyx_tuple__32);
  Py_VISIT(traverse_module_state->__pyx_tuple__33);
  Py_VISIT(traverse_module_state->__pyx_tuple__34);
  Py_VISIT(traverse_module_state->__pyx_tuple__35);
  Py_VISIT(traverse_module_state->__pyx_tuple__37);
  Py_VISIT(traverse_module_state->__pyx_tuple__39);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__42);
  Py_VISIT(traverse_module_state->__pyx_tuple__48);
  Py_VISIT(traverse_module_state->__pyx_tuple__51);
  Py_VISIT(traverse_module_state->__pyx_tuple__56);
  Py_VISIT(traverse_module_state->__pyx_tuple__58);
  Py_VISIT(traverse_module_state->__pyx_tuple__60);
  Py_VISIT(traverse_module_state->__pyx_tuple__63);
  Py_VISIT(traverse_module_state->__pyx_tuple__67);
  Py_VISIT(traverse_module_state->__pyx_tuple__69);
  Py_VISIT(traverse_module_state->__pyx_tuple__70);
  Py_VISIT(traverse_module_state->__pyx_tuple__72);
  Py_VISIT(traverse_module_state->__pyx_tuple__73);
  Py_VISIT(traverse_module_state->__pyx_tuple__75);
  Py_VISIT(traverse_module_state->__pyx_tuple__76);
  Py_VISIT(traverse_module_state->__pyx_tuple__78);
  Py_VISIT(traverse_module_state->__pyx_tuple__80);
  Py_VISIT(traverse_module_state->__pyx_tuple__82);
  Py_VISIT(traverse_module_state->__pyx_tuple__89);
  Py_VISIT(traverse_module_state->__pyx_tuple__91);
  Py_VISIT(traverse_module_state->__pyx_tuple__93);
  Py_VISIT(traverse_module_state->__pyx_tuple__100);
  Py_VISIT(traverse_module_state->__pyx_tuple__102);
  Py_VISIT(traverse_module_state->__pyx_tuple__104);
  Py_VISIT(traverse_module_state->__pyx_tuple__106);
  Py_VISIT(traverse_module_state->__pyx_tuple__111);
  Py_VISIT(traverse_module_state->__pyx_codeobj__36);
  Py_VISIT(traverse_module_state->__pyx_codeobj__38);
  Py_VISIT(traverse_module_state->__pyx_codeobj__40);
  Py_VISIT(traverse_module_state->__pyx_codeobj__43);
  Py_VISIT(traverse_module_state->__pyx_codeobj__44);
  Py_VISIT(traverse_module_state->__pyx_codeobj__45);
  Py_VISIT(traverse_module_state->__pyx_codeobj__46);
  Py_VISIT(traverse_module_state->__pyx_codeobj__47);
  Py_VISIT(traverse_module_state->__pyx_codeobj__49);
  Py_VISIT(traverse_module_state->__pyx_codeobj__52);
  Py_VISIT(traverse_module_state->__pyx_codeobj__53);
  Py_VISIT(traverse_module_state->__pyx_codeobj__54);
  Py_VISIT(traverse_module_state->__pyx_codeobj__55);
  Py_VISIT(traverse_module_state->__pyx_codeobj__57);
  Py_VISIT(traverse_module_state->__pyx_codeobj__59);
  Py_VISIT(traverse_module_state->__pyx_codeobj__61);
  Py_VISIT(traverse_module_state->__pyx_codeobj__62);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__65);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__68);
  Py_VISIT(traverse_module_state->__pyx_codeobj__71);
  Py_VISIT(traverse_module_state->__pyx_codeobj__74);
  Py_VISIT(traverse_module_state->__pyx_codeobj__77);
  Py_VISIT(traverse_module_state->__pyx_codeobj__79);
  Py_VISIT(traverse_module_state->__pyx_codeobj__81);
  Py_VISIT(traverse_module_state->__pyx_codeobj__83);
  Py_VISIT(traverse_module_state->__pyx_codeobj__84);
  Py_VISIT(traverse_module_state->__pyx_codeobj__85);
  Py_VISIT(traverse_module_state->__pyx_codeobj__86);
  Py_VISIT(traverse_module_state->__pyx_codeobj__87);
  Py_VISIT(traverse_module_state->__pyx_codeobj__88);
  Py_VISIT(traverse_module_state->__pyx_codeobj__90);
  Py_VISIT(traverse_module_state->__pyx_codeobj__92);
  Py_VISIT(traverse_module_state->__pyx_codeobj__94);
  Py_VISIT(traverse_module_state->__pyx_codeobj__95);
  Py_VISIT(traverse_module_state->__pyx_codeobj__96);
  Py_VISIT(traverse_module_state->__pyx_codeobj__97);
  Py_VISIT(traverse_module_state->__pyx_codeobj__98);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__101);
  Py_VISIT(traverse_module_state->__pyx_codeobj__103);
  Py_VISIT(traverse_module_state->__pyx_codeobj__105);
  Py_VISIT(traverse_module_state->__pyx_codeobj__107);
  Py_VISIT(traverse_module_state->__pyx_codeobj__108);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  Py_VISIT(traverse_module_state->__pyx_codeobj__110);
  Py_VISIT(traverse_module_state->__pyx_codeobj__112);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4type_type __pyx_mstate_global->__pyx_ptype_7cpython_4type_type
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList
#define __pyx_type_15resiliparse_dom_5parse_4html_DOMNode __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html_DOMNode
#define __pyx_type_15resiliparse_dom_5parse_4html_DOMCollection __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection
#define __pyx_type_15resiliparse_dom_5parse_4html_HTMLTree __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree
#define __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__
#define __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__
#define __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr
#define __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__
#define __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr __pyx_mstate_global->__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr
#define __Pyx_EnumMeta __pyx_mstate_global->__Pyx_EnumMeta
#endif
#define __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList
#define __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode
#define __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection
#define __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree
#define __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__
#define __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__
#define __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr
#define __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__
#define __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr __pyx_mstate_global->__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr
#define __pyx_ptype___Pyx_EnumMeta __pyx_mstate_global->__pyx_ptype___Pyx_EnumMeta
#define __pyx_kp_b_ __pyx_mstate_global->__pyx_kp_b_
#define __pyx_kp_s_ __pyx_mstate_global->__pyx_kp_s_
#define __pyx_kp_u_ __pyx_mstate_global->__pyx_kp_u_
#define __pyx_n_s_ATTRIBUTE __pyx_mstate_global->__pyx_n_s_ATTRIBUTE
#define __pyx_n_u_ATTRIBUTE __pyx_mstate_global->__pyx_n_u_ATTRIBUTE
#define __pyx_kp_u_Append_operation_on_uninitialize __pyx_mstate_global->__pyx_kp_u_Append_operation_on_uninitialize
#define __pyx_n_s_CDATA_SECTION __pyx_mstate_global->__pyx_n_s_CDATA_SECTION
#define __pyx_n_u_CDATA_SECTION __pyx_mstate_global->__pyx_n_u_CDATA_SECTION
#define __pyx_n_s_COMMENT __pyx_mstate_global->__pyx_n_s_COMMENT
#define __pyx_n_u_COMMENT __pyx_mstate_global->__pyx_n_u_COMMENT
#define __pyx_kp_u_CSS_parser_error __pyx_mstate_global->__pyx_kp_u_CSS_parser_error
#define __pyx_kp_u_Cannot_create_instance_directly __pyx_mstate_global->__pyx_kp_u_Cannot_create_instance_directly
#define __pyx_kp_u_DOCTYPE_html __pyx_mstate_global->__pyx_kp_u_DOCTYPE_html
#define __pyx_n_s_DOCUMENT __pyx_mstate_global->__pyx_n_s_DOCUMENT
#define __pyx_n_u_DOCUMENT __pyx_mstate_global->__pyx_n_u_DOCUMENT
#define __pyx_n_s_DOCUMENT_FRAGMENT __pyx_mstate_global->__pyx_n_s_DOCUMENT_FRAGMENT
#define __pyx_n_u_DOCUMENT_FRAGMENT __pyx_mstate_global->__pyx_n_u_DOCUMENT_FRAGMENT
#define __pyx_n_s_DOCUMENT_TYPE __pyx_mstate_global->__pyx_n_s_DOCUMENT_TYPE
#define __pyx_n_u_DOCUMENT_TYPE __pyx_mstate_global->__pyx_n_u_DOCUMENT_TYPE
#define __pyx_n_s_DOMCollection __pyx_mstate_global->__pyx_n_s_DOMCollection
#define __pyx_n_u_DOMCollection __pyx_mstate_global->__pyx_n_u_DOMCollection
#define __pyx_n_s_DOMCollection___iter __pyx_mstate_global->__pyx_n_s_DOMCollection___iter
#define __pyx_n_s_DOMCollection___reduce_cython __pyx_mstate_global->__pyx_n_s_DOMCollection___reduce_cython
#define __pyx_n_s_DOMCollection___setstate_cython __pyx_mstate_global->__pyx_n_s_DOMCollection___setstate_cython
#define __pyx_n_s_DOMCollection_get_element_by_id __pyx_mstate_global->__pyx_n_s_DOMCollection_get_element_by_id
#define __pyx_n_s_DOMCollection_get_elements_by_at __pyx_mstate_global->__pyx_n_s_DOMCollection_get_elements_by_at
#define __pyx_n_s_DOMCollection_get_elements_by_cl __pyx_mstate_global->__pyx_n_s_DOMCollection_get_elements_by_cl
#define __pyx_n_s_DOMCollection_get_elements_by_ta __pyx_mstate_global->__pyx_n_s_DOMCollection_get_elements_by_ta
#define __pyx_n_s_DOMCollection_matches __pyx_mstate_global->__pyx_n_s_DOMCollection_matches
#define __pyx_n_s_DOMCollection_query_selector __pyx_mstate_global->__pyx_n_s_DOMCollection_query_selector
#define __pyx_n_s_DOMCollection_query_selector_all __pyx_mstate_global->__pyx_n_s_DOMCollection_query_selector_all
#define __pyx_n_s_DOMContext __pyx_mstate_global->__pyx_n_s_DOMContext
#define __pyx_n_u_DOMContext __pyx_mstate_global->__pyx_n_u_DOMContext
#define __pyx_n_s_DOMContext___init __pyx_mstate_global->__pyx_n_s_DOMContext___init
#define __pyx_n_s_DOMElementClassList __pyx_mstate_global->__pyx_n_s_DOMElementClassList
#define __pyx_n_u_DOMElementClassList __pyx_mstate_global->__pyx_n_u_DOMElementClassList
#define __pyx_n_s_DOMElementClassList___reduce_cyt __pyx_mstate_global->__pyx_n_s_DOMElementClassList___reduce_cyt
#define __pyx_n_s_DOMElementClassList___setstate_c __pyx_mstate_global->__pyx_n_s_DOMElementClassList___setstate_c
#define __pyx_n_s_DOMElementClassList_add __pyx_mstate_global->__pyx_n_s_DOMElementClassList_add
#define __pyx_n_s_DOMElementClassList_remove __pyx_mstate_global->__pyx_n_s_DOMElementClassList_remove
#define __pyx_n_s_DOMNode __pyx_mstate_global->__pyx_n_s_DOMNode
#define __pyx_n_u_DOMNode __pyx_mstate_global->__pyx_n_u_DOMNode
#define __pyx_n_s_DOMNode___iter __pyx_mstate_global->__pyx_n_s_DOMNode___iter
#define __pyx_n_s_DOMNode___reduce_cython __pyx_mstate_global->__pyx_n_s_DOMNode___reduce_cython
#define __pyx_n_s_DOMNode___setstate_cython __pyx_mstate_global->__pyx_n_s_DOMNode___setstate_cython
#define __pyx_n_s_DOMNode_append_child __pyx_mstate_global->__pyx_n_s_DOMNode_append_child
#define __pyx_n_s_DOMNode_decompose __pyx_mstate_global->__pyx_n_s_DOMNode_decompose
#define __pyx_n_s_DOMNode_delattr __pyx_mstate_global->__pyx_n_s_DOMNode_delattr
#define __pyx_n_s_DOMNode_get_element_by_id __pyx_mstate_global->__pyx_n_s_DOMNode_get_element_by_id
#define __pyx_n_s_DOMNode_get_elements_by_attr __pyx_mstate_global->__pyx_n_s_DOMNode_get_elements_by_attr
#define __pyx_n_s_DOMNode_get_elements_by_class_na __pyx_mstate_global->__pyx_n_s_DOMNode_get_elements_by_class_na
#define __pyx_n_s_DOMNode_get_elements_by_tag_name __pyx_mstate_global->__pyx_n_s_DOMNode_get_elements_by_tag_name
#define __pyx_n_s_DOMNode_getattr __pyx_mstate_global->__pyx_n_s_DOMNode_getattr
#define __pyx_n_s_DOMNode_hasattr __pyx_mstate_global->__pyx_n_s_DOMNode_hasattr
#define __pyx_n_s_DOMNode_insert_before __pyx_mstate_global->__pyx_n_s_DOMNode_insert_before
#define __pyx_n_s_DOMNode_matches __pyx_mstate_global->__pyx_n_s_DOMNode_matches
#define __pyx_n_s_DOMNode_query_selector __pyx_mstate_global->__pyx_n_s_DOMNode_query_selector
#define __pyx_n_s_DOMNode_query_selector_all __pyx_mstate_global->__pyx_n_s_DOMNode_query_selector_all
#define __pyx_n_s_DOMNode_remove_child __pyx_mstate_global->__pyx_n_s_DOMNode_remove_child
#define __pyx_n_s_DOMNode_replace_child __pyx_mstate_global->__pyx_n_s_DOMNode_replace_child
#define __pyx_n_s_DOMNode_setattr __pyx_mstate_global->__pyx_n_s_DOMNode_setattr
#define __pyx_kp_u_Decompose_operation_on_uninitial __pyx_mstate_global->__pyx_kp_u_Decompose_operation_on_uninitial
#define __pyx_n_s_ELEMENT __pyx_mstate_global->__pyx_n_s_ELEMENT
#define __pyx_n_u_ELEMENT __pyx_mstate_global->__pyx_n_u_ELEMENT
#define __pyx_n_s_ENTITY __pyx_mstate_global->__pyx_n_s_ENTITY
#define __pyx_n_u_ENTITY __pyx_mstate_global->__pyx_n_u_ENTITY
#define __pyx_n_s_ENTITY_REFERENCE __pyx_mstate_global->__pyx_n_s_ENTITY_REFERENCE
#define __pyx_n_u_ENTITY_REFERENCE __pyx_mstate_global->__pyx_n_u_ENTITY_REFERENCE
#define __pyx_kp_u_Element __pyx_mstate_global->__pyx_kp_u_Element
#define __pyx_n_s_EnumBase __pyx_mstate_global->__pyx_n_s_EnumBase
#define __pyx_n_s_EnumType __pyx_mstate_global->__pyx_n_s_EnumType
#define __pyx_kp_u_Failed_to_allocate_HTML_document __pyx_mstate_global->__pyx_kp_u_Failed_to_allocate_HTML_document
#define __pyx_kp_u_Failed_to_create_DOM_collection __pyx_mstate_global->__pyx_kp_u_Failed_to_create_DOM_collection
#define __pyx_kp_u_Failed_to_match_elements_by_CSS __pyx_mstate_global->__pyx_kp_u_Failed_to_match_elements_by_CSS
#define __pyx_kp_u_Failed_to_parse_HTML_document __pyx_mstate_global->__pyx_kp_u_Failed_to_parse_HTML_document
#define __pyx_n_s_HTMLTree __pyx_mstate_global->__pyx_n_s_HTMLTree
#define __pyx_n_u_HTMLTree __pyx_mstate_global->__pyx_n_u_HTMLTree
#define __pyx_n_s_HTMLTree___reduce_cython __pyx_mstate_global->__pyx_n_s_HTMLTree___reduce_cython
#define __pyx_n_s_HTMLTree___setstate_cython __pyx_mstate_global->__pyx_n_s_HTMLTree___setstate_cython
#define __pyx_n_s_HTMLTree_create_element __pyx_mstate_global->__pyx_n_s_HTMLTree_create_element
#define __pyx_n_s_HTMLTree_create_text_node __pyx_mstate_global->__pyx_n_s_HTMLTree_create_text_node
#define __pyx_n_s_HTMLTree_parse __pyx_mstate_global->__pyx_n_s_HTMLTree_parse
#define __pyx_n_s_HTMLTree_parse_from_bytes __pyx_mstate_global->__pyx_n_s_HTMLTree_parse_from_bytes
#define __pyx_kp_u_HTML_Document __pyx_mstate_global->__pyx_kp_u_HTML_Document
#define __pyx_kp_u_INVALID_ELEMENT __pyx_mstate_global->__pyx_kp_u_INVALID_ELEMENT
#define __pyx_kp_s_Incompatible_checksums_0x_x_vs_0 __pyx_mstate_global->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0
#define __pyx_n_s_IndexError __pyx_mstate_global->__pyx_n_s_IndexError
#define __pyx_kp_u_Index_out_of_range __pyx_mstate_global->__pyx_kp_u_Index_out_of_range
#define __pyx_kp_u_Insert_operation_on_uninitialize __pyx_mstate_global->__pyx_kp_u_Insert_operation_on_uninitialize
#define __pyx_n_s_IntEnum __pyx_mstate_global->__pyx_n_s_IntEnum
#define __pyx_n_s_IntFlag __pyx_mstate_global->__pyx_n_s_IntFlag
#define __pyx_kp_u_Invalid_key_type __pyx_mstate_global->__pyx_kp_u_Invalid_key_type
#define __pyx_n_s_KeyError __pyx_mstate_global->__pyx_n_s_KeyError
#define __pyx_n_s_LAST_ENTRY __pyx_mstate_global->__pyx_n_s_LAST_ENTRY
#define __pyx_n_u_LAST_ENTRY __pyx_mstate_global->__pyx_n_u_LAST_ENTRY
#define __pyx_n_s_NOTATION __pyx_mstate_global->__pyx_n_s_NOTATION
#define __pyx_n_u_NOTATION __pyx_mstate_global->__pyx_n_u_NOTATION
#define __pyx_kp_u_No_such_attribute __pyx_mstate_global->__pyx_kp_u_No_such_attribute
#define __pyx_n_s_NodeType __pyx_mstate_global->__pyx_n_s_NodeType
#define __pyx_n_u_NodeType __pyx_mstate_global->__pyx_n_u_NodeType
#define __pyx_kp_u_Node_is_not_a_child_of_the_curre __pyx_mstate_global->__pyx_kp_u_Node_is_not_a_child_of_the_curre
#define __pyx_kp_u_Node_ist_not_an_Element_node __pyx_mstate_global->__pyx_kp_u_Node_ist_not_an_Element_node
#define __pyx_kp_u_Node_ist_not_an_element_node __pyx_mstate_global->__pyx_kp_u_Node_ist_not_an_element_node
#define __pyx_kp_u_None __pyx_mstate_global->__pyx_kp_u_None
#define __pyx_n_s_OrderedDict __pyx_mstate_global->__pyx_n_s_OrderedDict
#define __pyx_n_s_PROCESSING_INSTRUCTION __pyx_mstate_global->__pyx_n_s_PROCESSING_INSTRUCTION
#define __pyx_n_u_PROCESSING_INSTRUCTION __pyx_mstate_global->__pyx_n_u_PROCESSING_INSTRUCTION
#define __pyx_n_s_PickleError __pyx_mstate_global->__pyx_n_s_PickleError
#define __pyx_n_s_Pyx_EnumBase __pyx_mstate_global->__pyx_n_s_Pyx_EnumBase
#define __pyx_n_s_Pyx_EnumBase___new __pyx_mstate_global->__pyx_n_s_Pyx_EnumBase___new
#define __pyx_n_s_Pyx_EnumBase___repr __pyx_mstate_global->__pyx_n_s_Pyx_EnumBase___repr
#define __pyx_n_s_Pyx_EnumBase___str __pyx_mstate_global->__pyx_n_s_Pyx_EnumBase___str
#define __pyx_n_s_Pyx_EnumMeta___reduce_cython __pyx_mstate_global->__pyx_n_s_Pyx_EnumMeta___reduce_cython
#define __pyx_n_s_Pyx_EnumMeta___setstate_cython __pyx_mstate_global->__pyx_n_s_Pyx_EnumMeta___setstate_cython
#define __pyx_n_s_Pyx_FlagBase __pyx_mstate_global->__pyx_n_s_Pyx_FlagBase
#define __pyx_n_s_Pyx_FlagBase___new __pyx_mstate_global->__pyx_n_s_Pyx_FlagBase___new
#define __pyx_n_s_Pyx_FlagBase___repr __pyx_mstate_global->__pyx_n_s_Pyx_FlagBase___repr
#define __pyx_n_s_Pyx_FlagBase___str __pyx_mstate_global->__pyx_n_s_Pyx_FlagBase___str
#define __pyx_kp_u_Reference_node_must_be_a_child_n __pyx_mstate_global->__pyx_kp_u_Reference_node_must_be_a_child_n
#define __pyx_kp_u_Remove_operation_on_uninitialize __pyx_mstate_global->__pyx_kp_u_Remove_operation_on_uninitialize
#define __pyx_kp_u_Replace_operation_on_uninitializ __pyx_mstate_global->__pyx_kp_u_Replace_operation_on_uninitializ
#define __pyx_n_s_RuntimeError __pyx_mstate_global->__pyx_n_s_RuntimeError
#define __pyx_n_s_SyntaxError __pyx_mstate_global->__pyx_n_s_SyntaxError
#define __pyx_n_s_TEXT __pyx_mstate_global->__pyx_n_s_TEXT
#define __pyx_n_u_TEXT __pyx_mstate_global->__pyx_n_u_TEXT
#define __pyx_kp_u_Trying_to_append_child_to_itself __pyx_mstate_global->__pyx_kp_u_Trying_to_append_child_to_itself
#define __pyx_kp_u_Trying_to_create_element_in_unin __pyx_mstate_global->__pyx_kp_u_Trying_to_create_element_in_unin
#define __pyx_kp_u_Trying_to_create_text_node_in_un __pyx_mstate_global->__pyx_kp_u_Trying_to_create_text_node_in_un
#define __pyx_kp_u_Trying_to_get_item_of_uninitiali __pyx_mstate_global->__pyx_kp_u_Trying_to_get_item_of_uninitiali
#define __pyx_kp_u_Trying_to_insert_node_as_its_own __pyx_mstate_global->__pyx_kp_u_Trying_to_insert_node_as_its_own
#define __pyx_kp_u_Trying_to_select_items_from_unin __pyx_mstate_global->__pyx_kp_u_Trying_to_select_items_from_unin
#define __pyx_kp_u_Trying_to_set_HTML_contents_of_u __pyx_mstate_global->__pyx_kp_u_Trying_to_set_HTML_contents_of_u
#define __pyx_kp_u_Trying_to_set_text_contents_of_u __pyx_mstate_global->__pyx_kp_u_Trying_to_set_text_contents_of_u
#define __pyx_n_s_TypeError __pyx_mstate_global->__pyx_n_s_TypeError
#define __pyx_kp_s_Unknown_enum_value_s __pyx_mstate_global->__pyx_kp_s_Unknown_enum_value_s
#define __pyx_n_s_ValueError __pyx_mstate_global->__pyx_n_s_ValueError
#define __pyx_n_s__113 __pyx_mstate_global->__pyx_n_s__113
#define __pyx_kp_u__20 __pyx_mstate_global->__pyx_kp_u__20
#define __pyx_kp_u__21 __pyx_mstate_global->__pyx_kp_u__21
#define __pyx_kp_u__22 __pyx_mstate_global->__pyx_kp_u__22
#define __pyx_kp_u__23 __pyx_mstate_global->__pyx_kp_u__23
#define __pyx_kp_u__27 __pyx_mstate_global->__pyx_kp_u__27
#define __pyx_kp_u__28 __pyx_mstate_global->__pyx_kp_u__28
#define __pyx_kp_u__29 __pyx_mstate_global->__pyx_kp_u__29
#define __pyx_kp_u__3 __pyx_mstate_global->__pyx_kp_u__3
#define __pyx_kp_b__5 __pyx_mstate_global->__pyx_kp_b__5
#define __pyx_kp_u__5 __pyx_mstate_global->__pyx_kp_u__5
#define __pyx_n_s__50 __pyx_mstate_global->__pyx_n_s__50
#define __pyx_n_s_add __pyx_mstate_global->__pyx_n_s_add
#define __pyx_n_s_all __pyx_mstate_global->__pyx_n_s_all
#define __pyx_n_s_append_child __pyx_mstate_global->__pyx_n_s_append_child
#define __pyx_n_s_args __pyx_mstate_global->__pyx_n_s_args
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_attr_name __pyx_mstate_global->__pyx_n_s_attr_name
#define __pyx_n_s_attr_value __pyx_mstate_global->__pyx_n_s_attr_value
#define __pyx_n_s_attrs __pyx_mstate_global->__pyx_n_s_attrs
#define __pyx_n_s_base_node __pyx_mstate_global->__pyx_n_s_base_node
#define __pyx_n_b_by_attr __pyx_mstate_global->__pyx_n_b_by_attr
#define __pyx_n_b_by_class __pyx_mstate_global->__pyx_n_b_by_class
#define __pyx_n_b_by_tag __pyx_mstate_global->__pyx_n_b_by_tag
#define __pyx_n_s_case_insensitive __pyx_mstate_global->__pyx_n_s_case_insensitive
#define __pyx_n_s_class __pyx_mstate_global->__pyx_n_s_class
#define __pyx_n_s_class_getitem __pyx_mstate_global->__pyx_n_s_class_getitem
#define __pyx_n_s_class_name __pyx_mstate_global->__pyx_n_s_class_name
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_close __pyx_mstate_global->__pyx_n_s_close
#define __pyx_n_s_cls __pyx_mstate_global->__pyx_n_s_cls
#define __pyx_n_s_collections __pyx_mstate_global->__pyx_n_s_collections
#define __pyx_n_s_context __pyx_mstate_global->__pyx_n_s_context
#define __pyx_n_s_create_element __pyx_mstate_global->__pyx_n_s_create_element
#define __pyx_n_s_create_text_node __pyx_mstate_global->__pyx_n_s_create_text_node
#define __pyx_n_s_dct __pyx_mstate_global->__pyx_n_s_dct
#define __pyx_n_s_decompose __pyx_mstate_global->__pyx_n_s_decompose
#define __pyx_n_s_default_value __pyx_mstate_global->__pyx_n_s_default_value
#define __pyx_n_s_delattr __pyx_mstate_global->__pyx_n_s_delattr
#define __pyx_n_s_depth __pyx_mstate_global->__pyx_n_s_depth
#define __pyx_n_s_dict __pyx_mstate_global->__pyx_n_s_dict
#define __pyx_n_s_dict_2 __pyx_mstate_global->__pyx_n_s_dict_2
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_doc __pyx_mstate_global->__pyx_n_s_doc
#define __pyx_n_s_document __pyx_mstate_global->__pyx_n_s_document
#define __pyx_n_s_element_id __pyx_mstate_global->__pyx_n_s_element_id
#define __pyx_n_s_elements_only __pyx_mstate_global->__pyx_n_s_elements_only
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_encode __pyx_mstate_global->__pyx_n_s_encode
#define __pyx_n_s_encoding __pyx_mstate_global->__pyx_n_s_encoding
#define __pyx_n_s_end_callback __pyx_mstate_global->__pyx_n_s_end_callback
#define __pyx_n_s_enum __pyx_mstate_global->__pyx_n_s_enum
#define __pyx_n_s_errors __pyx_mstate_global->__pyx_n_s_errors
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_genexpr __pyx_mstate_global->__pyx_n_s_genexpr
#define __pyx_n_s_get __pyx_mstate_global->__pyx_n_s_get
#define __pyx_n_s_get_element_by_id __pyx_mstate_global->__pyx_n_s_get_element_by_id
#define __pyx_n_s_get_elements_by_attr __pyx_mstate_global->__pyx_n_s_get_elements_by_attr
#define __pyx_n_s_get_elements_by_class_name __pyx_mstate_global->__pyx_n_s_get_elements_by_class_name
#define __pyx_n_s_get_elements_by_tag_name __pyx_mstate_global->__pyx_n_s_get_elements_by_tag_name
#define __pyx_n_s_getattr __pyx_mstate_global->__pyx_n_s_getattr
#define __pyx_n_s_getstate __pyx_mstate_global->__pyx_n_s_getstate
#define __pyx_n_s_hasattr __pyx_mstate_global->__pyx_n_s_hasattr
#define __pyx_n_s_head __pyx_mstate_global->__pyx_n_s_head
#define __pyx_n_s_html __pyx_mstate_global->__pyx_n_s_html
#define __pyx_n_u_ignore __pyx_mstate_global->__pyx_n_u_ignore
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_init __pyx_mstate_global->__pyx_n_s_init
#define __pyx_kp_s_init___DOM_node_traversal_con __pyx_mstate_global->__pyx_kp_s_init___DOM_node_traversal_con
#define __pyx_n_s_init_subclass __pyx_mstate_global->__pyx_n_s_init_subclass
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_s_insert_before __pyx_mstate_global->__pyx_n_s_insert_before
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_n_s_is_end_tag __pyx_mstate_global->__pyx_n_s_is_end_tag
#define __pyx_n_s_is_end_tag_ptr __pyx_mstate_global->__pyx_n_s_is_end_tag_ptr
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_iter __pyx_mstate_global->__pyx_n_s_iter
#define __pyx_n_s_join __pyx_mstate_global->__pyx_n_s_join
#define __pyx_n_s_lower __pyx_mstate_global->__pyx_n_s_lower
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_matches __pyx_mstate_global->__pyx_n_s_matches
#define __pyx_n_s_member_names __pyx_mstate_global->__pyx_n_s_member_names
#define __pyx_n_s_members __pyx_mstate_global->__pyx_n_s_members
#define __pyx_n_s_metaclass __pyx_mstate_global->__pyx_n_s_metaclass
#define __pyx_n_s_module __pyx_mstate_global->__pyx_n_s_module
#define __pyx_n_s_module_2 __pyx_mstate_global->__pyx_n_s_module_2
#define __pyx_n_s_mro_entries __pyx_mstate_global->__pyx_n_s_mro_entries
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_name_2 __pyx_mstate_global->__pyx_n_s_name_2
#define __pyx_n_s_new __pyx_mstate_global->__pyx_n_s_new
#define __pyx_n_s_new_child __pyx_mstate_global->__pyx_n_s_new_child
#define __pyx_kp_s_no_default___reduce___due_to_non __pyx_mstate_global->__pyx_kp_s_no_default___reduce___due_to_non
#define __pyx_n_s_node __pyx_mstate_global->__pyx_n_s_node
#define __pyx_n_s_old_child __pyx_mstate_global->__pyx_n_s_old_child
#define __pyx_n_s_parents __pyx_mstate_global->__pyx_n_s_parents
#define __pyx_n_s_parse __pyx_mstate_global->__pyx_n_s_parse
#define __pyx_n_s_parse_from_bytes __pyx_mstate_global->__pyx_n_s_parse_from_bytes
#define __pyx_n_s_pickle __pyx_mstate_global->__pyx_n_s_pickle
#define __pyx_n_s_prepare __pyx_mstate_global->__pyx_n_s_prepare
#define __pyx_n_s_pyx_PickleError __pyx_mstate_global->__pyx_n_s_pyx_PickleError
#define __pyx_n_s_pyx_checksum __pyx_mstate_global->__pyx_n_s_pyx_checksum
#define __pyx_n_s_pyx_result __pyx_mstate_global->__pyx_n_s_pyx_result
#define __pyx_n_s_pyx_state __pyx_mstate_global->__pyx_n_s_pyx_state
#define __pyx_n_s_pyx_type __pyx_mstate_global->__pyx_n_s_pyx_type
#define __pyx_n_s_pyx_unpickle___Pyx_EnumMeta __pyx_mstate_global->__pyx_n_s_pyx_unpickle___Pyx_EnumMeta
#define __pyx_n_s_pyx_vtable __pyx_mstate_global->__pyx_n_s_pyx_vtable
#define __pyx_n_s_qualname __pyx_mstate_global->__pyx_n_s_qualname
#define __pyx_n_s_query_selector __pyx_mstate_global->__pyx_n_s_query_selector
#define __pyx_n_s_query_selector_all __pyx_mstate_global->__pyx_n_s_query_selector_all
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_reduce __pyx_mstate_global->__pyx_n_s_reduce
#define __pyx_n_s_reduce_cython __pyx_mstate_global->__pyx_n_s_reduce_cython
#define __pyx_n_s_reduce_ex __pyx_mstate_global->__pyx_n_s_reduce_ex
#define __pyx_n_s_reference __pyx_mstate_global->__pyx_n_s_reference
#define __pyx_n_s_remove __pyx_mstate_global->__pyx_n_s_remove
#define __pyx_n_s_remove_child __pyx_mstate_global->__pyx_n_s_remove_child
#define __pyx_n_s_replace_child __pyx_mstate_global->__pyx_n_s_replace_child
#define __pyx_n_s_repr __pyx_mstate_global->__pyx_n_s_repr
#define __pyx_n_s_repr___locals_genexpr __pyx_mstate_global->__pyx_n_s_repr___locals_genexpr
#define __pyx_n_s_res __pyx_mstate_global->__pyx_n_s_res
#define __pyx_n_s_resiliparse_dom_parse_html __pyx_mstate_global->__pyx_n_s_resiliparse_dom_parse_html
#define __pyx_kp_s_resiliparse_dom_parse_html_pyx __pyx_mstate_global->__pyx_kp_s_resiliparse_dom_parse_html_pyx
#define __pyx_kp_s_s_s __pyx_mstate_global->__pyx_kp_s_s_s
#define __pyx_kp_s_s_s_d __pyx_mstate_global->__pyx_kp_s_s_s_d
#define __pyx_n_s_selector __pyx_mstate_global->__pyx_n_s_selector
#define __pyx_n_b_selector_all __pyx_mstate_global->__pyx_n_b_selector_all
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_n_s_send __pyx_mstate_global->__pyx_n_s_send
#define __pyx_n_s_set_name __pyx_mstate_global->__pyx_n_s_set_name
#define __pyx_n_s_setattr __pyx_mstate_global->__pyx_n_s_setattr
#define __pyx_n_s_setstate __pyx_mstate_global->__pyx_n_s_setstate
#define __pyx_n_s_setstate_cython __pyx_mstate_global->__pyx_n_s_setstate_cython
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_start __pyx_mstate_global->__pyx_n_s_start
#define __pyx_n_s_start_callback __pyx_mstate_global->__pyx_n_s_start_callback
#define __pyx_n_s_state __pyx_mstate_global->__pyx_n_s_state
#define __pyx_n_s_step __pyx_mstate_global->__pyx_n_s_step
#define __pyx_n_s_stop __pyx_mstate_global->__pyx_n_s_stop
#define __pyx_n_s_str __pyx_mstate_global->__pyx_n_s_str
#define __pyx_kp_s_stringsource __pyx_mstate_global->__pyx_kp_s_stringsource
#define __pyx_n_s_strip __pyx_mstate_global->__pyx_n_s_strip
#define __pyx_n_s_super __pyx_mstate_global->__pyx_n_s_super
#define __pyx_n_s_t __pyx_mstate_global->__pyx_n_s_t
#define __pyx_n_s_tag __pyx_mstate_global->__pyx_n_s_tag
#define __pyx_n_s_tag_name __pyx_mstate_global->__pyx_n_s_tag_name
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_text __pyx_mstate_global->__pyx_n_s_text
#define __pyx_n_s_throw __pyx_mstate_global->__pyx_n_s_throw
#define __pyx_n_s_traverse_dom __pyx_mstate_global->__pyx_n_s_traverse_dom
#define __pyx_n_u_traverse_dom __pyx_mstate_global->__pyx_n_u_traverse_dom
#define __pyx_n_s_tree __pyx_mstate_global->__pyx_n_s_tree
#define __pyx_n_s_typing __pyx_mstate_global->__pyx_n_s_typing
#define __pyx_n_s_update __pyx_mstate_global->__pyx_n_s_update
#define __pyx_n_s_use_setstate __pyx_mstate_global->__pyx_n_s_use_setstate
#define __pyx_kp_u_utf_8 __pyx_mstate_global->__pyx_kp_u_utf_8
#define __pyx_n_s_v __pyx_mstate_global->__pyx_n_s_v
#define __pyx_n_s_value __pyx_mstate_global->__pyx_n_s_value
#define __pyx_n_s_values __pyx_mstate_global->__pyx_n_s_values
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_10 __pyx_mstate_global->__pyx_int_10
#define __pyx_int_222419149 __pyx_mstate_global->__pyx_int_222419149
#define __pyx_int_228825662 __pyx_mstate_global->__pyx_int_228825662
#define __pyx_int_238750788 __pyx_mstate_global->__pyx_int_238750788
#define __pyx_int_neg_1 __pyx_mstate_global->__pyx_int_neg_1
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__8 __pyx_mstate_global->__pyx_tuple__8
#define __pyx_tuple__9 __pyx_mstate_global->__pyx_tuple__9
#define __pyx_tuple__10 __pyx_mstate_global->__pyx_tuple__10
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__18 __pyx_mstate_global->__pyx_tuple__18
#define __pyx_tuple__19 __pyx_mstate_global->__pyx_tuple__19
#define __pyx_tuple__24 __pyx_mstate_global->__pyx_tuple__24
#define __pyx_tuple__25 __pyx_mstate_global->__pyx_tuple__25
#define __pyx_tuple__26 __pyx_mstate_global->__pyx_tuple__26
#define __pyx_tuple__30 __pyx_mstate_global->__pyx_tuple__30
#define __pyx_tuple__31 __pyx_mstate_global->__pyx_tuple__31
#define __pyx_tuple__32 __pyx_mstate_global->__pyx_tuple__32
#define __pyx_tuple__33 __pyx_mstate_global->__pyx_tuple__33
#define __pyx_tuple__34 __pyx_mstate_global->__pyx_tuple__34
#define __pyx_tuple__35 __pyx_mstate_global->__pyx_tuple__35
#define __pyx_tuple__37 __pyx_mstate_global->__pyx_tuple__37
#define __pyx_tuple__39 __pyx_mstate_global->__pyx_tuple__39
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__42 __pyx_mstate_global->__pyx_tuple__42
#define __pyx_tuple__48 __pyx_mstate_global->__pyx_tuple__48
#define __pyx_tuple__51 __pyx_mstate_global->__pyx_tuple__51
#define __pyx_tuple__56 __pyx_mstate_global->__pyx_tuple__56
#define __pyx_tuple__58 __pyx_mstate_global->__pyx_tuple__58
#define __pyx_tuple__60 __pyx_mstate_global->__pyx_tuple__60
#define __pyx_tuple__63 __pyx_mstate_global->__pyx_tuple__63
#define __pyx_tuple__67 __pyx_mstate_global->__pyx_tuple__67
#define __pyx_tuple__69 __pyx_mstate_global->__pyx_tuple__69
#define __pyx_tuple__70 __pyx_mstate_global->__pyx_tuple__70
#define __pyx_tuple__72 __pyx_mstate_global->__pyx_tuple__72
#define __pyx_tuple__73 __pyx_mstate_global->__pyx_tuple__73
#define __pyx_tuple__75 __pyx_mstate_global->__pyx_tuple__75
#define __pyx_tuple__76 __pyx_mstate_global->__pyx_tuple__76
#define __pyx_tuple__78 __pyx_mstate_global->__pyx_tuple__78
#define __pyx_tuple__80 __pyx_mstate_global->__pyx_tuple__80
#define __pyx_tuple__82 __pyx_mstate_global->__pyx_tuple__82
#define __pyx_tuple__89 __pyx_mstate_global->__pyx_tuple__89
#define __pyx_tuple__91 __pyx_mstate_global->__pyx_tuple__91
#define __pyx_tuple__93 __pyx_mstate_global->__pyx_tuple__93
#define __pyx_tuple__100 __pyx_mstate_global->__pyx_tuple__100
#define __pyx_tuple__102 __pyx_mstate_global->__pyx_tuple__102
#define __pyx_tuple__104 __pyx_mstate_global->__pyx_tuple__104
#define __pyx_tuple__106 __pyx_mstate_global->__pyx_tuple__106
#define __pyx_tuple__111 __pyx_mstate_global->__pyx_tuple__111
#define __pyx_codeobj__36 __pyx_mstate_global->__pyx_codeobj__36
#define __pyx_codeobj__38 __pyx_mstate_global->__pyx_codeobj__38
#define __pyx_codeobj__40 __pyx_mstate_global->__pyx_codeobj__40
#define __pyx_codeobj__43 __pyx_mstate_global->__pyx_codeobj__43
#define __pyx_codeobj__44 __pyx_mstate_global->__pyx_codeobj__44
#define __pyx_codeobj__45 __pyx_mstate_global->__pyx_codeobj__45
#define __pyx_codeobj__46 __pyx_mstate_global->__pyx_codeobj__46
#define __pyx_codeobj__47 __pyx_mstate_global->__pyx_codeobj__47
#define __pyx_codeobj__49 __pyx_mstate_global->__pyx_codeobj__49
#define __pyx_codeobj__52 __pyx_mstate_global->__pyx_codeobj__52
#define __pyx_codeobj__53 __pyx_mstate_global->__pyx_codeobj__53
#define __pyx_codeobj__54 __pyx_mstate_global->__pyx_codeobj__54
#define __pyx_codeobj__55 __pyx_mstate_global->__pyx_codeobj__55
#define __pyx_codeobj__57 __pyx_mstate_global->__pyx_codeobj__57
#define __pyx_codeobj__59 __pyx_mstate_global->__pyx_codeobj__59
#define __pyx_codeobj__61 __pyx_mstate_global->__pyx_codeobj__61
#define __pyx_codeobj__62 __pyx_mstate_global->__pyx_codeobj__62
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__65 __pyx_mstate_global->__pyx_codeobj__65
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__68 __pyx_mstate_global->__pyx_codeobj__68
#define __pyx_codeobj__71 __pyx_mstate_global->__pyx_codeobj__71
#define __pyx_codeobj__74 __pyx_mstate_global->__pyx_codeobj__74
#define __pyx_codeobj__77 __pyx_mstate_global->__pyx_codeobj__77
#define __pyx_codeobj__79 __pyx_mstate_global->__pyx_codeobj__79
#define __pyx_codeobj__81 __pyx_mstate_global->__pyx_codeobj__81
#define __pyx_codeobj__83 __pyx_mstate_global->__pyx_codeobj__83
#define __pyx_codeobj__84 __pyx_mstate_global->__pyx_codeobj__84
#define __pyx_codeobj__85 __pyx_mstate_global->__pyx_codeobj__85
#define __pyx_codeobj__86 __pyx_mstate_global->__pyx_codeobj__86
#define __pyx_codeobj__87 __pyx_mstate_global->__pyx_codeobj__87
#define __pyx_codeobj__88 __pyx_mstate_global->__pyx_codeobj__88
#define __pyx_codeobj__90 __pyx_mstate_global->__pyx_codeobj__90
#define __pyx_codeobj__92 __pyx_mstate_global->__pyx_codeobj__92
#define __pyx_codeobj__94 __pyx_mstate_global->__pyx_codeobj__94
#define __pyx_codeobj__95 __pyx_mstate_global->__pyx_codeobj__95
#define __pyx_codeobj__96 __pyx_mstate_global->__pyx_codeobj__96
#define __pyx_codeobj__97 __pyx_mstate_global->__pyx_codeobj__97
#define __pyx_codeobj__98 __pyx_mstate_global->__pyx_codeobj__98
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__101 __pyx_mstate_global->__pyx_codeobj__101
#define __pyx_codeobj__103 __pyx_mstate_global->__pyx_codeobj__103
#define __pyx_codeobj__105 __pyx_mstate_global->__pyx_codeobj__105
#define __pyx_codeobj__107 __pyx_mstate_global->__pyx_codeobj__107
#define __pyx_codeobj__108 __pyx_mstate_global->__pyx_codeobj__108
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
#define __pyx_codeobj__110 __pyx_mstate_global->__pyx_codeobj__110
#define __pyx_codeobj__112 __pyx_mstate_global->__pyx_codeobj__112
/* #### Code section: module_code ### */

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string", 1);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_6libcpp_6string_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string", 1);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_6libcpp_6string_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string", 1);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_6libcpp_6string_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string", 1);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_6libcpp_6string_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string", 1);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_6libcpp_6string_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumTypeToPy":3
 * 
 * @cname("__Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py")
 * cdef __Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py(NodeType c_val):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_enum
 *     __pyx_enum = NodeType
 */

static PyObject *__Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType __pyx_v_c_val) {
  PyObject *__pyx_v___pyx_enum = 0;
  int __pyx_v_underlying_c_val;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py", 1);

  /* "EnumTypeToPy":5
 * cdef __Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py(NodeType c_val):
 *     cdef object __pyx_enum
 *     __pyx_enum = NodeType             # <<<<<<<<<<<<<<
 * 
 *     if 0:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v___pyx_enum = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "EnumTypeToPy":7
 *     __pyx_enum = NodeType
 * 
 *     if 0:             # <<<<<<<<<<<<<<
 *         pass
 *     elif c_val == NodeType.ELEMENT:
 */
  switch (__pyx_v_c_val) {
    case __pyx_e_15resiliparse_dom_5parse_4html_ELEMENT:

    /* "EnumTypeToPy":10
 *         pass
 *     elif c_val == NodeType.ELEMENT:
 *         return __pyx_enum.ELEMENT             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.ATTRIBUTE:
 *         return __pyx_enum.ATTRIBUTE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_ELEMENT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 10, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":9
 *     if 0:
 *         pass
 *     elif c_val == NodeType.ELEMENT:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.ELEMENT
 *     elif c_val == NodeType.ATTRIBUTE:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_ATTRIBUTE:

    /* "EnumTypeToPy":12
 *         return __pyx_enum.ELEMENT
 *     elif c_val == NodeType.ATTRIBUTE:
 *         return __pyx_enum.ATTRIBUTE             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.TEXT:
 *         return __pyx_enum.TEXT
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_ATTRIBUTE); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":11
 *     elif c_val == NodeType.ELEMENT:
 *         return __pyx_enum.ELEMENT
 *     elif c_val == NodeType.ATTRIBUTE:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.ATTRIBUTE
 *     elif c_val == NodeType.TEXT:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_TEXT:

    /* "EnumTypeToPy":14
 *         return __pyx_enum.ATTRIBUTE
 *     elif c_val == NodeType.TEXT:
 *         return __pyx_enum.TEXT             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.CDATA_SECTION:
 *         return __pyx_enum.CDATA_SECTION
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_TEXT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":13
 *     elif c_val == NodeType.ATTRIBUTE:
 *         return __pyx_enum.ATTRIBUTE
 *     elif c_val == NodeType.TEXT:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.TEXT
 *     elif c_val == NodeType.CDATA_SECTION:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_CDATA_SECTION:

    /* "EnumTypeToPy":16
 *         return __pyx_enum.TEXT
 *     elif c_val == NodeType.CDATA_SECTION:
 *         return __pyx_enum.CDATA_SECTION             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.ENTITY_REFERENCE:
 *         return __pyx_enum.ENTITY_REFERENCE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_CDATA_SECTION); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":15
 *     elif c_val == NodeType.TEXT:
 *         return __pyx_enum.TEXT
 *     elif c_val == NodeType.CDATA_SECTION:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.CDATA_SECTION
 *     elif c_val == NodeType.ENTITY_REFERENCE:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_ENTITY_REFERENCE:

    /* "EnumTypeToPy":18
 *         return __pyx_enum.CDATA_SECTION
 *     elif c_val == NodeType.ENTITY_REFERENCE:
 *         return __pyx_enum.ENTITY_REFERENCE             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.ENTITY:
 *         return __pyx_enum.ENTITY
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_ENTITY_REFERENCE); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 18, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":17
 *     elif c_val == NodeType.CDATA_SECTION:
 *         return __pyx_enum.CDATA_SECTION
 *     elif c_val == NodeType.ENTITY_REFERENCE:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.ENTITY_REFERENCE
 *     elif c_val == NodeType.ENTITY:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_ENTITY:

    /* "EnumTypeToPy":20
 *         return __pyx_enum.ENTITY_REFERENCE
 *     elif c_val == NodeType.ENTITY:
 *         return __pyx_enum.ENTITY             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.PROCESSING_INSTRUCTION:
 *         return __pyx_enum.PROCESSING_INSTRUCTION
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_ENTITY); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 20, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":19
 *     elif c_val == NodeType.ENTITY_REFERENCE:
 *         return __pyx_enum.ENTITY_REFERENCE
 *     elif c_val == NodeType.ENTITY:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.ENTITY
 *     elif c_val == NodeType.PROCESSING_INSTRUCTION:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_PROCESSING_INSTRUCTION:

    /* "EnumTypeToPy":22
 *         return __pyx_enum.ENTITY
 *     elif c_val == NodeType.PROCESSING_INSTRUCTION:
 *         return __pyx_enum.PROCESSING_INSTRUCTION             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.COMMENT:
 *         return __pyx_enum.COMMENT
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_PROCESSING_INSTRUCTION); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":21
 *     elif c_val == NodeType.ENTITY:
 *         return __pyx_enum.ENTITY
 *     elif c_val == NodeType.PROCESSING_INSTRUCTION:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.PROCESSING_INSTRUCTION
 *     elif c_val == NodeType.COMMENT:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_COMMENT:

    /* "EnumTypeToPy":24
 *         return __pyx_enum.PROCESSING_INSTRUCTION
 *     elif c_val == NodeType.COMMENT:
 *         return __pyx_enum.COMMENT             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.DOCUMENT:
 *         return __pyx_enum.DOCUMENT
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_COMMENT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 24, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":23
 *     elif c_val == NodeType.PROCESSING_INSTRUCTION:
 *         return __pyx_enum.PROCESSING_INSTRUCTION
 *     elif c_val == NodeType.COMMENT:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.COMMENT
 *     elif c_val == NodeType.DOCUMENT:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT:

    /* "EnumTypeToPy":26
 *         return __pyx_enum.COMMENT
 *     elif c_val == NodeType.DOCUMENT:
 *         return __pyx_enum.DOCUMENT             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.DOCUMENT_TYPE:
 *         return __pyx_enum.DOCUMENT_TYPE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_DOCUMENT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 26, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":25
 *     elif c_val == NodeType.COMMENT:
 *         return __pyx_enum.COMMENT
 *     elif c_val == NodeType.DOCUMENT:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.DOCUMENT
 *     elif c_val == NodeType.DOCUMENT_TYPE:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_TYPE:

    /* "EnumTypeToPy":28
 *         return __pyx_enum.DOCUMENT
 *     elif c_val == NodeType.DOCUMENT_TYPE:
 *         return __pyx_enum.DOCUMENT_TYPE             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.DOCUMENT_FRAGMENT:
 *         return __pyx_enum.DOCUMENT_FRAGMENT
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_DOCUMENT_TYPE); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":27
 *     elif c_val == NodeType.DOCUMENT:
 *         return __pyx_enum.DOCUMENT
 *     elif c_val == NodeType.DOCUMENT_TYPE:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.DOCUMENT_TYPE
 *     elif c_val == NodeType.DOCUMENT_FRAGMENT:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_FRAGMENT:

    /* "EnumTypeToPy":30
 *         return __pyx_enum.DOCUMENT_TYPE
 *     elif c_val == NodeType.DOCUMENT_FRAGMENT:
 *         return __pyx_enum.DOCUMENT_FRAGMENT             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.NOTATION:
 *         return __pyx_enum.NOTATION
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_DOCUMENT_FRAGMENT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":29
 *     elif c_val == NodeType.DOCUMENT_TYPE:
 *         return __pyx_enum.DOCUMENT_TYPE
 *     elif c_val == NodeType.DOCUMENT_FRAGMENT:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.DOCUMENT_FRAGMENT
 *     elif c_val == NodeType.NOTATION:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_NOTATION:

    /* "EnumTypeToPy":32
 *         return __pyx_enum.DOCUMENT_FRAGMENT
 *     elif c_val == NodeType.NOTATION:
 *         return __pyx_enum.NOTATION             # <<<<<<<<<<<<<<
 *     elif c_val == NodeType.LAST_ENTRY:
 *         return __pyx_enum.LAST_ENTRY
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_NOTATION); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":31
 *     elif c_val == NodeType.DOCUMENT_FRAGMENT:
 *         return __pyx_enum.DOCUMENT_FRAGMENT
 *     elif c_val == NodeType.NOTATION:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.NOTATION
 *     elif c_val == NodeType.LAST_ENTRY:
 */
    break;
    case __pyx_e_15resiliparse_dom_5parse_4html_LAST_ENTRY:

    /* "EnumTypeToPy":34
 *         return __pyx_enum.NOTATION
 *     elif c_val == NodeType.LAST_ENTRY:
 *         return __pyx_enum.LAST_ENTRY             # <<<<<<<<<<<<<<
 *     else:
 *         underlying_c_val = <int>c_val
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v___pyx_enum, __pyx_n_s_LAST_ENTRY); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "EnumTypeToPy":33
 *     elif c_val == NodeType.NOTATION:
 *         return __pyx_enum.NOTATION
 *     elif c_val == NodeType.LAST_ENTRY:             # <<<<<<<<<<<<<<
 *         return __pyx_enum.LAST_ENTRY
 *     else:
 */
    break;
    default:

    /* "EnumTypeToPy":36
 *         return __pyx_enum.LAST_ENTRY
 *     else:
 *         underlying_c_val = <int>c_val             # <<<<<<<<<<<<<<
 *         return __pyx_enum(underlying_c_val)
 * 
 */
    __pyx_v_underlying_c_val = ((int)__pyx_v_c_val);

    /* "EnumTypeToPy":37
 *     else:
 *         underlying_c_val = <int>c_val
 *         return __pyx_enum(underlying_c_val)             # <<<<<<<<<<<<<<
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_underlying_c_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v___pyx_enum);
    __pyx_t_3 = __pyx_v___pyx_enum; __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 37, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
  }

  /* "EnumTypeToPy":3
 * 
 * @cname("__Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py")
 * cdef __Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py(NodeType c_val):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_enum
 *     __pyx_enum = NodeType
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("EnumTypeToPy.__Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_enum);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":17
 * @cython.internal
 * cdef class __Pyx_EnumMeta(type):
 *     def __init__(cls, name, parents, dct):             # <<<<<<<<<<<<<<
 *         type.__init__(cls, name, parents, dct)
 *         cls.__members__ = __Pyx_OrderedDict()
 */

/* Python wrapper */
static int __pyx_pw_8EnumBase_14__Pyx_EnumMeta_1__init__(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8EnumBase_14__Pyx_EnumMeta_1__init__(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_parents = 0;
  PyObject *__pyx_v_dct = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_parents,&__pyx_n_s_dct,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 17, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parents)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 17, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(1, 17, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dct)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 17, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(1, 17, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(1, 17, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
    }
    __pyx_v_name = values[0];
    __pyx_v_parents = values[1];
    __pyx_v_dct = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 17, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumMeta___init__(((struct __pyx_obj___Pyx_EnumMeta *)__pyx_v_cls), __pyx_v_name, __pyx_v_parents, __pyx_v_dct);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8EnumBase_14__Pyx_EnumMeta___init__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_cls, PyObject *__pyx_v_name, PyObject *__pyx_v_parents, PyObject *__pyx_v_dct) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "EnumBase":18
 * cdef class __Pyx_EnumMeta(type):
 *     def __init__(cls, name, parents, dct):
 *         type.__init__(cls, name, parents, dct)             # <<<<<<<<<<<<<<
 *         cls.__members__ = __Pyx_OrderedDict()
 *     def __iter__(cls):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)(&PyType_Type)), __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_3, ((PyObject *)__pyx_v_cls), __pyx_v_name, __pyx_v_parents, __pyx_v_dct};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 4+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 18, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EnumBase":19
 *     def __init__(cls, name, parents, dct):
 *         type.__init__(cls, name, parents, dct)
 *         cls.__members__ = __Pyx_OrderedDict()             # <<<<<<<<<<<<<<
 *     def __iter__(cls):
 *         return iter(cls.__members__.values())
 */
  __Pyx_INCREF(__Pyx_OrderedDict);
  __pyx_t_2 = __Pyx_OrderedDict; __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_members, __pyx_t_1) < 0) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EnumBase":17
 * @cython.internal
 * cdef class __Pyx_EnumMeta(type):
 *     def __init__(cls, name, parents, dct):             # <<<<<<<<<<<<<<
 *         type.__init__(cls, name, parents, dct)
 *         cls.__members__ = __Pyx_OrderedDict()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":20
 *         type.__init__(cls, name, parents, dct)
 *         cls.__members__ = __Pyx_OrderedDict()
 *     def __iter__(cls):             # <<<<<<<<<<<<<<
 *         return iter(cls.__members__.values())
 *     def __getitem__(cls, name):
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_3__iter__(PyObject *__pyx_v_cls); /*proto*/
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_3__iter__(PyObject *__pyx_v_cls) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumMeta_2__iter__(((struct __pyx_obj___Pyx_EnumMeta *)__pyx_v_cls));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_2__iter__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_cls) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 1);

  /* "EnumBase":21
 *         cls.__members__ = __Pyx_OrderedDict()
 *     def __iter__(cls):
 *         return iter(cls.__members__.values())             # <<<<<<<<<<<<<<
 *     def __getitem__(cls, name):
 *         return cls.__members__[name]
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_members); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_values); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 21, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "EnumBase":20
 *         type.__init__(cls, name, parents, dct)
 *         cls.__members__ = __Pyx_OrderedDict()
 *     def __iter__(cls):             # <<<<<<<<<<<<<<
 *         return iter(cls.__members__.values())
 *     def __getitem__(cls, name):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":22
 *     def __iter__(cls):
 *         return iter(cls.__members__.values())
 *     def __getitem__(cls, name):             # <<<<<<<<<<<<<<
 *         return cls.__members__[name]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_5__getitem__(PyObject *__pyx_v_cls, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_5__getitem__(PyObject *__pyx_v_cls, PyObject *__pyx_v_name) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumMeta_4__getitem__(((struct __pyx_obj___Pyx_EnumMeta *)__pyx_v_cls), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_4__getitem__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_cls, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 1);

  /* "EnumBase":23
 *         return iter(cls.__members__.values())
 *     def __getitem__(cls, name):
 *         return cls.__members__[name]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_members); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "EnumBase":22
 *     def __iter__(cls):
 *         return iter(cls.__members__.values())
 *     def __getitem__(cls, name):             # <<<<<<<<<<<<<<
 *         return cls.__members__[name]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_EnumMeta_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumMeta_6__reduce_cython__(((struct __pyx_obj___Pyx_EnumMeta *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_6__reduce_cython__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle___Pyx_EnumMeta); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle___Pyx_EnumMeta__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle___Pyx_EnumMeta); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle___Pyx_EnumMeta__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_EnumMeta_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumMeta_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumMeta_8__setstate_cython__(((struct __pyx_obj___Pyx_EnumMeta *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumMeta_8__setstate_cython__(struct __pyx_obj___Pyx_EnumMeta *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle___Pyx_EnumMeta__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_unpickle___Pyx_EnumMeta__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle___Pyx_EnumMeta__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumMeta.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":28
 * cdef object __Pyx_EnumBase
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumBase_1__new__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_EnumBase_1__new__ = {"__new__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumBase_1__new__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumBase_1__new__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_cls = 0;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_v_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__new__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cls,&__pyx_n_s_value,&__pyx_n_s_name,0};
    values[2] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cls)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 28, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_value)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 28, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__new__", 0, 2, 3, 1); __PYX_ERR(1, 28, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 28, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__new__") < 0)) __PYX_ERR(1, 28, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cls = values[0];
    __pyx_v_value = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__new__", 0, 2, 3, __pyx_nargs); __PYX_ERR(1, 28, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumBase.__new__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumBase___new__(__pyx_self, __pyx_v_cls, __pyx_v_value, __pyx_v_name);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumBase___new__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cls, PyObject *__pyx_v_value, PyObject *__pyx_v_name) {
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__new__", 1);

  /* "EnumBase":29
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):
 *         for v in cls:             # <<<<<<<<<<<<<<
 *             if v == value:
 *                 return v
 */
  if (likely(PyList_CheckExact(__pyx_v_cls)) || PyTuple_CheckExact(__pyx_v_cls)) {
    __pyx_t_1 = __pyx_v_cls; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_cls); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 29, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 29, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 29, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 29, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 29, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 29, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 29, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 29, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 29, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "EnumBase":30
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 *             if v == value:             # <<<<<<<<<<<<<<
 *                 return v
 *         if name is None:
 */
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_v, __pyx_v_value, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 30, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(1, 30, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_5) {

      /* "EnumBase":31
 *         for v in cls:
 *             if v == value:
 *                 return v             # <<<<<<<<<<<<<<
 *         if name is None:
 *             raise ValueError("Unknown enum value: '%s'" % value)
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_v);
      __pyx_r = __pyx_v_v;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;

      /* "EnumBase":30
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 *             if v == value:             # <<<<<<<<<<<<<<
 *                 return v
 *         if name is None:
 */
    }

    /* "EnumBase":29
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):
 *         for v in cls:             # <<<<<<<<<<<<<<
 *             if v == value:
 *                 return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EnumBase":32
 *             if v == value:
 *                 return v
 *         if name is None:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unknown enum value: '%s'" % value)
 *         res = int.__new__(cls, value)
 */
  __pyx_t_5 = (__pyx_v_name == Py_None);
  if (unlikely(__pyx_t_5)) {

    /* "EnumBase":33
 *                 return v
 *         if name is None:
 *             raise ValueError("Unknown enum value: '%s'" % value)             # <<<<<<<<<<<<<<
 *         res = int.__new__(cls, value)
 *         res.name = name
 */
    __pyx_t_1 = __Pyx_PyString_FormatSafe(__pyx_kp_s_Unknown_enum_value_s, __pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 33, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 33, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 33, __pyx_L1_error)

    /* "EnumBase":32
 *             if v == value:
 *                 return v
 *         if name is None:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unknown enum value: '%s'" % value)
 *         res = int.__new__(cls, value)
 */
  }

  /* "EnumBase":34
 *         if name is None:
 *             raise ValueError("Unknown enum value: '%s'" % value)
 *         res = int.__new__(cls, value)             # <<<<<<<<<<<<<<
 *         res.name = name
 *         setattr(cls, name, res)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)(&PyInt_Type)), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_v_cls, __pyx_v_value};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_res = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "EnumBase":35
 *             raise ValueError("Unknown enum value: '%s'" % value)
 *         res = int.__new__(cls, value)
 *         res.name = name             # <<<<<<<<<<<<<<
 *         setattr(cls, name, res)
 *         cls.__members__[name] = res
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_res, __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(1, 35, __pyx_L1_error)

  /* "EnumBase":36
 *         res = int.__new__(cls, value)
 *         res.name = name
 *         setattr(cls, name, res)             # <<<<<<<<<<<<<<
 *         cls.__members__[name] = res
 *         return res
 */
  __pyx_t_8 = PyObject_SetAttr(__pyx_v_cls, __pyx_v_name, __pyx_v_res); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(1, 36, __pyx_L1_error)

  /* "EnumBase":37
 *         res.name = name
 *         setattr(cls, name, res)
 *         cls.__members__[name] = res             # <<<<<<<<<<<<<<
 *         return res
 *     def __repr__(self):
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_cls, __pyx_n_s_members); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely((PyObject_SetItem(__pyx_t_4, __pyx_v_name, __pyx_v_res) < 0))) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "EnumBase":38
 *         setattr(cls, name, res)
 *         cls.__members__[name] = res
 *         return res             # <<<<<<<<<<<<<<
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "EnumBase":28
 * cdef object __Pyx_EnumBase
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumBase.__new__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":39
 *         cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumBase_3__repr__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_EnumBase_3__repr__ = {"__repr__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumBase_3__repr__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumBase_3__repr__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 39, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__repr__") < 0)) __PYX_ERR(1, 39, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__repr__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 39, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumBase.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumBase_2__repr__(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumBase_2__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 1);

  /* "EnumBase":40
 *         return res
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)             # <<<<<<<<<<<<<<
 *     def __str__(self):
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2)) __PYX_ERR(1, 40, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 40, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_self)) __PYX_ERR(1, 40, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EnumBase":39
 *         cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumBase.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":41
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumBase_5__str__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_EnumBase_5__str__ = {"__str__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumBase_5__str__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_EnumBase_5__str__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 41, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__str__") < 0)) __PYX_ERR(1, 41, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__str__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 41, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumBase.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_EnumBase_4__str__(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_EnumBase_4__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 1);

  /* "EnumBase":42
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 *         return "%s.%s" % (self.__class__.__name__, self.name)             # <<<<<<<<<<<<<<
 * 
 * if PY_VERSION_HEX >= 0x03040000:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2)) __PYX_ERR(1, 42, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 42, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EnumBase":41
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EnumBase.__Pyx_EnumBase.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":49
 * cdef object __Pyx_FlagBase
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_FlagBase_1__new__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_FlagBase_1__new__ = {"__new__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_FlagBase_1__new__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_FlagBase_1__new__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_cls = 0;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_v_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__new__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cls,&__pyx_n_s_value,&__pyx_n_s_name,0};
    values[2] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cls)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 49, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_value)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 49, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__new__", 0, 2, 3, 1); __PYX_ERR(1, 49, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 49, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__new__") < 0)) __PYX_ERR(1, 49, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cls = values[0];
    __pyx_v_value = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__new__", 0, 2, 3, __pyx_nargs); __PYX_ERR(1, 49, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_FlagBase.__new__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_FlagBase___new__(__pyx_self, __pyx_v_cls, __pyx_v_value, __pyx_v_name);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_FlagBase___new__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cls, PyObject *__pyx_v_value, PyObject *__pyx_v_name) {
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__new__", 1);

  /* "EnumBase":50
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):
 *         for v in cls:             # <<<<<<<<<<<<<<
 *             if v == value:
 *                 return v
 */
  if (likely(PyList_CheckExact(__pyx_v_cls)) || PyTuple_CheckExact(__pyx_v_cls)) {
    __pyx_t_1 = __pyx_v_cls; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_cls); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 50, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 50, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 50, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 50, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 50, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 50, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 50, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 50, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "EnumBase":51
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 *             if v == value:             # <<<<<<<<<<<<<<
 *                 return v
 *         res = int.__new__(cls, value)
 */
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_v, __pyx_v_value, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(1, 51, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_5) {

      /* "EnumBase":52
 *         for v in cls:
 *             if v == value:
 *                 return v             # <<<<<<<<<<<<<<
 *         res = int.__new__(cls, value)
 *         if name is None:
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_v);
      __pyx_r = __pyx_v_v;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;

      /* "EnumBase":51
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 *             if v == value:             # <<<<<<<<<<<<<<
 *                 return v
 *         res = int.__new__(cls, value)
 */
    }

    /* "EnumBase":50
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):
 *         for v in cls:             # <<<<<<<<<<<<<<
 *             if v == value:
 *                 return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EnumBase":53
 *             if v == value:
 *                 return v
 *         res = int.__new__(cls, value)             # <<<<<<<<<<<<<<
 *         if name is None:
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)(&PyInt_Type)), __pyx_n_s_new); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_v_cls, __pyx_v_value};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_res = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "EnumBase":54
 *                 return v
 *         res = int.__new__(cls, value)
 *         if name is None:             # <<<<<<<<<<<<<<
 * 
 *             res.name = ""
 */
  __pyx_t_5 = (__pyx_v_name == Py_None);
  if (__pyx_t_5) {

    /* "EnumBase":56
 *         if name is None:
 * 
 *             res.name = ""             # <<<<<<<<<<<<<<
 *         else:
 *             res.name = name
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_res, __pyx_n_s_name, __pyx_kp_s_) < 0) __PYX_ERR(1, 56, __pyx_L1_error)

    /* "EnumBase":54
 *                 return v
 *         res = int.__new__(cls, value)
 *         if name is None:             # <<<<<<<<<<<<<<
 * 
 *             res.name = ""
 */
    goto __pyx_L7;
  }

  /* "EnumBase":58
 *             res.name = ""
 *         else:
 *             res.name = name             # <<<<<<<<<<<<<<
 *             setattr(cls, name, res)
 *             cls.__members__[name] = res
 */
  /*else*/ {
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_res, __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(1, 58, __pyx_L1_error)

    /* "EnumBase":59
 *         else:
 *             res.name = name
 *             setattr(cls, name, res)             # <<<<<<<<<<<<<<
 *             cls.__members__[name] = res
 *         return res
 */
    __pyx_t_8 = PyObject_SetAttr(__pyx_v_cls, __pyx_v_name, __pyx_v_res); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(1, 59, __pyx_L1_error)

    /* "EnumBase":60
 *             res.name = name
 *             setattr(cls, name, res)
 *             cls.__members__[name] = res             # <<<<<<<<<<<<<<
 *         return res
 *     def __repr__(self):
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_cls, __pyx_n_s_members); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 60, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely((PyObject_SetItem(__pyx_t_1, __pyx_v_name, __pyx_v_res) < 0))) __PYX_ERR(1, 60, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L7:;

  /* "EnumBase":61
 *             setattr(cls, name, res)
 *             cls.__members__[name] = res
 *         return res             # <<<<<<<<<<<<<<
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "EnumBase":49
 * cdef object __Pyx_FlagBase
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("EnumBase.__Pyx_FlagBase.__new__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":62
 *             cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_FlagBase_3__repr__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_FlagBase_3__repr__ = {"__repr__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_FlagBase_3__repr__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_FlagBase_3__repr__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 62, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__repr__") < 0)) __PYX_ERR(1, 62, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__repr__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 62, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_FlagBase.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_FlagBase_2__repr__(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_FlagBase_2__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 1);

  /* "EnumBase":63
 *         return res
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)             # <<<<<<<<<<<<<<
 *     def __str__(self):
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2)) __PYX_ERR(1, 63, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 63, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_self)) __PYX_ERR(1, 63, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EnumBase":62
 *             cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EnumBase.__Pyx_FlagBase.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EnumBase":64
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_14__Pyx_FlagBase_5__str__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_14__Pyx_FlagBase_5__str__ = {"__str__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_FlagBase_5__str__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_14__Pyx_FlagBase_5__str__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 64, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__str__") < 0)) __PYX_ERR(1, 64, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__str__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 64, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__Pyx_FlagBase.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase_14__Pyx_FlagBase_4__str__(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase_14__Pyx_FlagBase_4__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 1);

  /* "EnumBase":65
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 *         return "%s.%s" % (self.__class__.__name__, self.name)             # <<<<<<<<<<<<<<
 * 
 * if PY_VERSION_HEX >= 0x03060000:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2)) __PYX_ERR(1, 65, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 65, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EnumBase":64
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EnumBase.__Pyx_FlagBase.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle___Pyx_EnumMeta(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_8EnumBase_1__pyx_unpickle___Pyx_EnumMeta(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_8EnumBase_1__pyx_unpickle___Pyx_EnumMeta = {"__pyx_unpickle___Pyx_EnumMeta", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_1__pyx_unpickle___Pyx_EnumMeta, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8EnumBase_1__pyx_unpickle___Pyx_EnumMeta(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle___Pyx_EnumMeta (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle___Pyx_EnumMeta", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle___Pyx_EnumMeta", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle___Pyx_EnumMeta") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle___Pyx_EnumMeta", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("EnumBase.__pyx_unpickle___Pyx_EnumMeta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8EnumBase___pyx_unpickle___Pyx_EnumMeta(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8EnumBase___pyx_unpickle___Pyx_EnumMeta(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle___Pyx_EnumMeta", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__2, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = __Pyx_EnumMeta.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = __Pyx_EnumMeta.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = __Pyx_EnumMeta.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype___Pyx_EnumMeta), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = __Pyx_EnumMeta.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = __Pyx_EnumMeta.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_unpickle___Pyx_EnumMeta__set_state(((struct __pyx_obj___Pyx_EnumMeta *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = __Pyx_EnumMeta.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle___Pyx_EnumMeta(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("EnumBase.__pyx_unpickle___Pyx_EnumMeta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_unpickle___Pyx_EnumMeta__set_state(struct __pyx_obj___Pyx_EnumMeta *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle___Pyx_EnumMeta__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle___Pyx_EnumMeta__set_state(<__Pyx_EnumMeta> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle___Pyx_EnumMeta__set_state(__Pyx_EnumMeta __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("EnumBase.__pyx_unpickle___Pyx_EnumMeta__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pxd":20
 * 
 * 
 * cdef inline bint check_node(DOMNode node) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """Check whether node is initialized and valid."""
 *     return node is not None and node.tree is not None and node.node != NULL
 */

static CYTHON_INLINE int __pyx_f_15resiliparse_dom_5parse_4html_check_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;

  /* "resiliparse_dom/parse/html.pxd":22
 * cdef inline bint check_node(DOMNode node) noexcept nogil:
 *     """Check whether node is initialized and valid."""
 *     return node is not None and node.tree is not None and node.node != NULL             # <<<<<<<<<<<<<<
 * 
 * cdef void create_css_parser(lxb_css_memory_t** memory, lxb_css_parser_t** parser) noexcept nogil
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_node) != Py_None);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = (((PyObject *)__pyx_v_node->tree) != Py_None);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_node->node != NULL);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pxd":20
 * 
 * 
 * cdef inline bint check_node(DOMNode node) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """Check whether node is initialized and valid."""
 *     return node is not None and node.tree is not None and node.node != NULL
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pxd":34
 *                                size_t* depth=*, bint* end_tag=*) noexcept nogil
 * 
 * cdef inline lxb_dom_node_t* next_element_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                               size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     node = next_node(root_node, node, depth, end_tag)
 */

static CYTHON_INLINE lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_next_element_node(lxb_dom_node_t const *__pyx_v_root_node, lxb_dom_node_t *__pyx_v_node, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_element_node *__pyx_optional_args) {

  /* "resiliparse_dom/parse/html.pxd":35
 * 
 * cdef inline lxb_dom_node_t* next_element_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,
 *                                               size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:             # <<<<<<<<<<<<<<
 *     node = next_node(root_node, node, depth, end_tag)
 *     while node and node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 */
  size_t *__pyx_v_depth = ((size_t *)NULL);
  int *__pyx_v_end_tag = ((int *)NULL);
  lxb_dom_node_t *__pyx_r;
  lxb_dom_node_t *__pyx_t_1;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_depth = __pyx_optional_args->depth;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_end_tag = __pyx_optional_args->end_tag;
      }
    }
  }

  /* "resiliparse_dom/parse/html.pxd":36
 * cdef inline lxb_dom_node_t* next_element_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,
 *                                               size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     node = next_node(root_node, node, depth, end_tag)             # <<<<<<<<<<<<<<
 *     while node and node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         node = next_node(root_node, node, depth, end_tag)
 */
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.depth = __pyx_v_depth;
  __pyx_t_2.end_tag = __pyx_v_end_tag;
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_next_node(__pyx_v_root_node, __pyx_v_node, &__pyx_t_2); 
  __pyx_v_node = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pxd":37
 *                                               size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     node = next_node(root_node, node, depth, end_tag)
 *     while node and node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *         node = next_node(root_node, node, depth, end_tag)
 *     return node
 */
  while (1) {
    __pyx_t_4 = (__pyx_v_node != 0);
    if (__pyx_t_4) {
    } else {
      __pyx_t_3 = __pyx_t_4;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_node->type != LXB_DOM_NODE_TYPE_ELEMENT);
    __pyx_t_3 = __pyx_t_4;
    __pyx_L5_bool_binop_done:;
    if (!__pyx_t_3) break;

    /* "resiliparse_dom/parse/html.pxd":38
 *     node = next_node(root_node, node, depth, end_tag)
 *     while node and node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         node = next_node(root_node, node, depth, end_tag)             # <<<<<<<<<<<<<<
 *     return node
 * 
 */
    __pyx_t_2.__pyx_n = 2;
    __pyx_t_2.depth = __pyx_v_depth;
    __pyx_t_2.end_tag = __pyx_v_end_tag;
    __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_next_node(__pyx_v_root_node, __pyx_v_node, &__pyx_t_2); 
    __pyx_v_node = __pyx_t_1;
  }

  /* "resiliparse_dom/parse/html.pxd":39
 *     while node and node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         node = next_node(root_node, node, depth, end_tag)
 *     return node             # <<<<<<<<<<<<<<
 * 
 * cdef inline string_view get_node_attr_sv(lxb_dom_node_t* node, const string& attr) noexcept nogil:
 */
  __pyx_r = __pyx_v_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pxd":34
 *                                size_t* depth=*, bint* end_tag=*) noexcept nogil
 * 
 * cdef inline lxb_dom_node_t* next_element_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                               size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     node = next_node(root_node, node, depth, end_tag)
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pxd":41
 *     return node
 * 
 * cdef inline string_view get_node_attr_sv(lxb_dom_node_t* node, const string& attr) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """Get node attribute value as string_view."""
 *     cdef size_t node_attr_len
 */

static CYTHON_INLINE std::string_view __pyx_f_15resiliparse_dom_5parse_4html_get_node_attr_sv(lxb_dom_node_t *__pyx_v_node, std::string const &__pyx_v_attr) {
  size_t __pyx_v_node_attr_len;
  lxb_char_t const *__pyx_v_node_attr_data;
  std::string_view __pyx_r;

  /* "resiliparse_dom/parse/html.pxd":44
 *     """Get node attribute value as string_view."""
 *     cdef size_t node_attr_len
 *     cdef const lxb_char_t* node_attr_data = lxb_dom_element_get_attribute(             # <<<<<<<<<<<<<<
 *         <lxb_dom_element_t*>node, <lxb_char_t*>attr.data(), attr.size(), &node_attr_len)
 *     return string_view(<const char*>node_attr_data, node_attr_len)
 */
  __pyx_v_node_attr_data = lxb_dom_element_get_attribute(((lxb_dom_element_t *)__pyx_v_node), ((lxb_char_t *)__pyx_v_attr.data()), __pyx_v_attr.size(), (&__pyx_v_node_attr_len));

  /* "resiliparse_dom/parse/html.pxd":46
 *     cdef const lxb_char_t* node_attr_data = lxb_dom_element_get_attribute(
 *         <lxb_dom_element_t*>node, <lxb_char_t*>attr.data(), attr.size(), &node_attr_len)
 *     return string_view(<const char*>node_attr_data, node_attr_len)             # <<<<<<<<<<<<<<
 * 
 * cdef string get_node_text(lxb_dom_node_t* node) noexcept nogil
 */
  __pyx_r = std::string_view(((char const *)__pyx_v_node_attr_data), __pyx_v_node_attr_len);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pxd":41
 *     return node
 * 
 * cdef inline string_view get_node_attr_sv(lxb_dom_node_t* node, const string& attr) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """Get node attribute value as string_view."""
 *     cdef size_t node_attr_len
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":52
 * 
 * 
 * cdef inline DOMNode _create_dom_node(HTMLTree tree, lxb_dom_node_t* dom_node):             # <<<<<<<<<<<<<<
 *     if not dom_node:
 *         return None
 */

static CYTHON_INLINE struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree, lxb_dom_node_t *__pyx_v_dom_node) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_create_dom_node", 1);

  /* "resiliparse_dom/parse/html.pyx":53
 * 
 * cdef inline DOMNode _create_dom_node(HTMLTree tree, lxb_dom_node_t* dom_node):
 *     if not dom_node:             # <<<<<<<<<<<<<<
 *         return None
 *     if dom_node.user:
 */
  __pyx_t_1 = (!(__pyx_v_dom_node != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":54
 * cdef inline DOMNode _create_dom_node(HTMLTree tree, lxb_dom_node_t* dom_node):
 *     if not dom_node:
 *         return None             # <<<<<<<<<<<<<<
 *     if dom_node.user:
 *         return <DOMNode>dom_node.user
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":53
 * 
 * cdef inline DOMNode _create_dom_node(HTMLTree tree, lxb_dom_node_t* dom_node):
 *     if not dom_node:             # <<<<<<<<<<<<<<
 *         return None
 *     if dom_node.user:
 */
  }

  /* "resiliparse_dom/parse/html.pyx":55
 *     if not dom_node:
 *         return None
 *     if dom_node.user:             # <<<<<<<<<<<<<<
 *         return <DOMNode>dom_node.user
 *     cdef DOMNode node = DOMNode.__new__(DOMNode, tree)
 */
  __pyx_t_1 = (__pyx_v_dom_node->user != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":56
 *         return None
 *     if dom_node.user:
 *         return <DOMNode>dom_node.user             # <<<<<<<<<<<<<<
 *     cdef DOMNode node = DOMNode.__new__(DOMNode, tree)
 *     node.node = dom_node
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __Pyx_INCREF((PyObject *)((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_dom_node->user));
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_dom_node->user);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":55
 *     if not dom_node:
 *         return None
 *     if dom_node.user:             # <<<<<<<<<<<<<<
 *         return <DOMNode>dom_node.user
 *     cdef DOMNode node = DOMNode.__new__(DOMNode, tree)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":57
 *     if dom_node.user:
 *         return <DOMNode>dom_node.user
 *     cdef DOMNode node = DOMNode.__new__(DOMNode, tree)             # <<<<<<<<<<<<<<
 *     node.node = dom_node
 *     node.node.user = <PyObject*>node
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF((PyObject *)__pyx_v_tree);
  __Pyx_GIVEREF((PyObject *)__pyx_v_tree);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_tree))) __PYX_ERR(0, 57, __pyx_L1_error);
  __pyx_t_3 = ((PyObject *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMNode(((PyTypeObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode), __pyx_t_2, NULL)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF((PyObject *)__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "resiliparse_dom/parse/html.pyx":58
 *         return <DOMNode>dom_node.user
 *     cdef DOMNode node = DOMNode.__new__(DOMNode, tree)
 *     node.node = dom_node             # <<<<<<<<<<<<<<
 *     node.node.user = <PyObject*>node
 *     return node
 */
  __pyx_v_node->node = __pyx_v_dom_node;

  /* "resiliparse_dom/parse/html.pyx":59
 *     cdef DOMNode node = DOMNode.__new__(DOMNode, tree)
 *     node.node = dom_node
 *     node.node.user = <PyObject*>node             # <<<<<<<<<<<<<<
 *     return node
 * 
 */
  __pyx_v_node->node->user = ((PyObject *)__pyx_v_node);

  /* "resiliparse_dom/parse/html.pyx":60
 *     node.node = dom_node
 *     node.node.user = <PyObject*>node
 *     return node             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_node);
  __pyx_r = __pyx_v_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":52
 * 
 * 
 * cdef inline DOMNode _create_dom_node(HTMLTree tree, lxb_dom_node_t* dom_node):             # <<<<<<<<<<<<<<
 *     if not dom_node:
 *         return None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html._create_dom_node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_node);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":63
 * 
 * 
 * cdef inline DOMCollection _create_dom_collection(HTMLTree tree, lxb_dom_collection_t* coll):             # <<<<<<<<<<<<<<
 *     cdef DOMCollection return_coll = DOMCollection.__new__(DOMCollection, tree)
 *     return_coll.coll = coll
 */

static CYTHON_INLINE struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree, lxb_dom_collection_t *__pyx_v_coll) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_return_coll = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_create_dom_collection", 1);

  /* "resiliparse_dom/parse/html.pyx":64
 * 
 * cdef inline DOMCollection _create_dom_collection(HTMLTree tree, lxb_dom_collection_t* coll):
 *     cdef DOMCollection return_coll = DOMCollection.__new__(DOMCollection, tree)             # <<<<<<<<<<<<<<
 *     return_coll.coll = coll
 *     return return_coll
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF((PyObject *)__pyx_v_tree);
  __Pyx_GIVEREF((PyObject *)__pyx_v_tree);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_tree))) __PYX_ERR(0, 64, __pyx_L1_error);
  __pyx_t_2 = ((PyObject *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMCollection(((PyTypeObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection), __pyx_t_1, NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF((PyObject *)__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_return_coll = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "resiliparse_dom/parse/html.pyx":65
 * cdef inline DOMCollection _create_dom_collection(HTMLTree tree, lxb_dom_collection_t* coll):
 *     cdef DOMCollection return_coll = DOMCollection.__new__(DOMCollection, tree)
 *     return_coll.coll = coll             # <<<<<<<<<<<<<<
 *     return return_coll
 * 
 */
  __pyx_v_return_coll->coll = __pyx_v_coll;

  /* "resiliparse_dom/parse/html.pyx":66
 *     cdef DOMCollection return_coll = DOMCollection.__new__(DOMCollection, tree)
 *     return_coll.coll = coll
 *     return return_coll             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_return_coll);
  __pyx_r = __pyx_v_return_coll;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":63
 * 
 * 
 * cdef inline DOMCollection _create_dom_collection(HTMLTree tree, lxb_dom_collection_t* coll):             # <<<<<<<<<<<<<<
 *     cdef DOMCollection return_coll = DOMCollection.__new__(DOMCollection, tree)
 *     return_coll.coll = coll
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html._create_dom_collection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_return_coll);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":69
 * 
 * 
 * cdef void create_css_parser(lxb_css_memory_t** memory, lxb_css_parser_t** parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     memory[0] = lxb_css_memory_create()
 *     lxb_css_memory_init(memory[0], 128)
 */

static void __pyx_f_15resiliparse_dom_5parse_4html_create_css_parser(lxb_css_memory_t **__pyx_v_memory, lxb_css_parser_t **__pyx_v_parser) {

  /* "resiliparse_dom/parse/html.pyx":70
 * 
 * cdef void create_css_parser(lxb_css_memory_t** memory, lxb_css_parser_t** parser) noexcept nogil:
 *     memory[0] = lxb_css_memory_create()             # <<<<<<<<<<<<<<
 *     lxb_css_memory_init(memory[0], 128)
 *     parser[0] = lxb_css_parser_create()
 */
  (__pyx_v_memory[0]) = lxb_css_memory_create();

  /* "resiliparse_dom/parse/html.pyx":71
 * cdef void create_css_parser(lxb_css_memory_t** memory, lxb_css_parser_t** parser) noexcept nogil:
 *     memory[0] = lxb_css_memory_create()
 *     lxb_css_memory_init(memory[0], 128)             # <<<<<<<<<<<<<<
 *     parser[0] = lxb_css_parser_create()
 *     lxb_css_parser_init(parser[0], NULL)
 */
  (void)(lxb_css_memory_init((__pyx_v_memory[0]), 0x80));

  /* "resiliparse_dom/parse/html.pyx":72
 *     memory[0] = lxb_css_memory_create()
 *     lxb_css_memory_init(memory[0], 128)
 *     parser[0] = lxb_css_parser_create()             # <<<<<<<<<<<<<<
 *     lxb_css_parser_init(parser[0], NULL)
 *     lxb_css_parser_memory_set(parser[0], memory[0])
 */
  (__pyx_v_parser[0]) = lxb_css_parser_create();

  /* "resiliparse_dom/parse/html.pyx":73
 *     lxb_css_memory_init(memory[0], 128)
 *     parser[0] = lxb_css_parser_create()
 *     lxb_css_parser_init(parser[0], NULL)             # <<<<<<<<<<<<<<
 *     lxb_css_parser_memory_set(parser[0], memory[0])
 *     lxb_css_parser_selectors_set(parser[0], NULL)
 */
  (void)(lxb_css_parser_init((__pyx_v_parser[0]), NULL));

  /* "resiliparse_dom/parse/html.pyx":74
 *     parser[0] = lxb_css_parser_create()
 *     lxb_css_parser_init(parser[0], NULL)
 *     lxb_css_parser_memory_set(parser[0], memory[0])             # <<<<<<<<<<<<<<
 *     lxb_css_parser_selectors_set(parser[0], NULL)
 * 
 */
  lxb_css_parser_memory_set((__pyx_v_parser[0]), (__pyx_v_memory[0]));

  /* "resiliparse_dom/parse/html.pyx":75
 *     lxb_css_parser_init(parser[0], NULL)
 *     lxb_css_parser_memory_set(parser[0], memory[0])
 *     lxb_css_parser_selectors_set(parser[0], NULL)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  lxb_css_parser_selectors_set((__pyx_v_parser[0]), NULL);

  /* "resiliparse_dom/parse/html.pyx":69
 * 
 * 
 * cdef void create_css_parser(lxb_css_memory_t** memory, lxb_css_parser_t** parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     memory[0] = lxb_css_memory_create()
 *     lxb_css_memory_init(memory[0], 128)
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":78
 * 
 * 
 * cdef void destroy_css_parser(lxb_css_memory_t* memory, lxb_css_parser_t* parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     if parser:
 *         destroy_css_selectors(parser)
 */

static void __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_parser(lxb_css_memory_t *__pyx_v_memory, lxb_css_parser_t *__pyx_v_parser) {
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":79
 * 
 * cdef void destroy_css_parser(lxb_css_memory_t* memory, lxb_css_parser_t* parser) noexcept nogil:
 *     if parser:             # <<<<<<<<<<<<<<
 *         destroy_css_selectors(parser)
 *         lxb_css_parser_destroy(parser, True)
 */
  __pyx_t_1 = (__pyx_v_parser != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":80
 * cdef void destroy_css_parser(lxb_css_memory_t* memory, lxb_css_parser_t* parser) noexcept nogil:
 *     if parser:
 *         destroy_css_selectors(parser)             # <<<<<<<<<<<<<<
 *         lxb_css_parser_destroy(parser, True)
 *     if memory:
 */
    __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(__pyx_v_parser);

    /* "resiliparse_dom/parse/html.pyx":81
 *     if parser:
 *         destroy_css_selectors(parser)
 *         lxb_css_parser_destroy(parser, True)             # <<<<<<<<<<<<<<
 *     if memory:
 *         lxb_css_memory_destroy(memory, True)
 */
    (void)(lxb_css_parser_destroy(__pyx_v_parser, 1));

    /* "resiliparse_dom/parse/html.pyx":79
 * 
 * cdef void destroy_css_parser(lxb_css_memory_t* memory, lxb_css_parser_t* parser) noexcept nogil:
 *     if parser:             # <<<<<<<<<<<<<<
 *         destroy_css_selectors(parser)
 *         lxb_css_parser_destroy(parser, True)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":82
 *         destroy_css_selectors(parser)
 *         lxb_css_parser_destroy(parser, True)
 *     if memory:             # <<<<<<<<<<<<<<
 *         lxb_css_memory_destroy(memory, True)
 * 
 */
  __pyx_t_1 = (__pyx_v_memory != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":83
 *         lxb_css_parser_destroy(parser, True)
 *     if memory:
 *         lxb_css_memory_destroy(memory, True)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (void)(lxb_css_memory_destroy(__pyx_v_memory, 1));

    /* "resiliparse_dom/parse/html.pyx":82
 *         destroy_css_selectors(parser)
 *         lxb_css_parser_destroy(parser, True)
 *     if memory:             # <<<<<<<<<<<<<<
 *         lxb_css_memory_destroy(memory, True)
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":78
 * 
 * 
 * cdef void destroy_css_parser(lxb_css_memory_t* memory, lxb_css_parser_t* parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     if parser:
 *         destroy_css_selectors(parser)
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":86
 * 
 * 
 * cdef void create_css_selectors(lxb_css_parser_t* parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     destroy_css_selectors(parser)
 *     cdef lxb_css_selectors_t* selectors = lxb_css_selectors_create()
 */

static void __pyx_f_15resiliparse_dom_5parse_4html_create_css_selectors(lxb_css_parser_t *__pyx_v_parser) {
  lxb_css_selectors_t *__pyx_v_selectors;

  /* "resiliparse_dom/parse/html.pyx":87
 * 
 * cdef void create_css_selectors(lxb_css_parser_t* parser) noexcept nogil:
 *     destroy_css_selectors(parser)             # <<<<<<<<<<<<<<
 *     cdef lxb_css_selectors_t* selectors = lxb_css_selectors_create()
 *     lxb_css_selectors_init(selectors)
 */
  __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(__pyx_v_parser);

  /* "resiliparse_dom/parse/html.pyx":88
 * cdef void create_css_selectors(lxb_css_parser_t* parser) noexcept nogil:
 *     destroy_css_selectors(parser)
 *     cdef lxb_css_selectors_t* selectors = lxb_css_selectors_create()             # <<<<<<<<<<<<<<
 *     lxb_css_selectors_init(selectors)
 *     lxb_css_parser_selectors_set(parser, selectors)
 */
  __pyx_v_selectors = lxb_css_selectors_create();

  /* "resiliparse_dom/parse/html.pyx":89
 *     destroy_css_selectors(parser)
 *     cdef lxb_css_selectors_t* selectors = lxb_css_selectors_create()
 *     lxb_css_selectors_init(selectors)             # <<<<<<<<<<<<<<
 *     lxb_css_parser_selectors_set(parser, selectors)
 * 
 */
  (void)(lxb_css_selectors_init(__pyx_v_selectors));

  /* "resiliparse_dom/parse/html.pyx":90
 *     cdef lxb_css_selectors_t* selectors = lxb_css_selectors_create()
 *     lxb_css_selectors_init(selectors)
 *     lxb_css_parser_selectors_set(parser, selectors)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  lxb_css_parser_selectors_set(__pyx_v_parser, __pyx_v_selectors);

  /* "resiliparse_dom/parse/html.pyx":86
 * 
 * 
 * cdef void create_css_selectors(lxb_css_parser_t* parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     destroy_css_selectors(parser)
 *     cdef lxb_css_selectors_t* selectors = lxb_css_selectors_create()
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":93
 * 
 * 
 * cdef void destroy_css_selectors(lxb_css_parser_t* parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     cdef lxb_css_selectors_t* selectors = lxb_css_parser_selectors(parser)
 *     if selectors:
 */

static void __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(lxb_css_parser_t *__pyx_v_parser) {
  lxb_css_selectors_t *__pyx_v_selectors;
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":94
 * 
 * cdef void destroy_css_selectors(lxb_css_parser_t* parser) noexcept nogil:
 *     cdef lxb_css_selectors_t* selectors = lxb_css_parser_selectors(parser)             # <<<<<<<<<<<<<<
 *     if selectors:
 *         lxb_css_selectors_destroy(selectors, True)
 */
  __pyx_v_selectors = lxb_css_parser_selectors(__pyx_v_parser);

  /* "resiliparse_dom/parse/html.pyx":95
 * cdef void destroy_css_selectors(lxb_css_parser_t* parser) noexcept nogil:
 *     cdef lxb_css_selectors_t* selectors = lxb_css_parser_selectors(parser)
 *     if selectors:             # <<<<<<<<<<<<<<
 *         lxb_css_selectors_destroy(selectors, True)
 *     lxb_css_parser_selectors_set(parser, NULL)
 */
  __pyx_t_1 = (__pyx_v_selectors != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":96
 *     cdef lxb_css_selectors_t* selectors = lxb_css_parser_selectors(parser)
 *     if selectors:
 *         lxb_css_selectors_destroy(selectors, True)             # <<<<<<<<<<<<<<
 *     lxb_css_parser_selectors_set(parser, NULL)
 * 
 */
    (void)(lxb_css_selectors_destroy(__pyx_v_selectors, 1));

    /* "resiliparse_dom/parse/html.pyx":95
 * cdef void destroy_css_selectors(lxb_css_parser_t* parser) noexcept nogil:
 *     cdef lxb_css_selectors_t* selectors = lxb_css_parser_selectors(parser)
 *     if selectors:             # <<<<<<<<<<<<<<
 *         lxb_css_selectors_destroy(selectors, True)
 *     lxb_css_parser_selectors_set(parser, NULL)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":97
 *     if selectors:
 *         lxb_css_selectors_destroy(selectors, True)
 *     lxb_css_parser_selectors_set(parser, NULL)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  lxb_css_parser_selectors_set(__pyx_v_parser, NULL);

  /* "resiliparse_dom/parse/html.pyx":93
 * 
 * 
 * cdef void destroy_css_selectors(lxb_css_parser_t* parser) noexcept nogil:             # <<<<<<<<<<<<<<
 *     cdef lxb_css_selectors_t* selectors = lxb_css_parser_selectors(parser)
 *     if selectors:
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":100
 * 
 * 
 * cdef inline void _log_serialize_cb(const lxb_char_t *data, size_t len, void *ctx) noexcept nogil:             # <<<<<<<<<<<<<<
 *     (<string*>ctx).append(<const char*>data, len)
 * 
 */

static CYTHON_INLINE void __pyx_f_15resiliparse_dom_5parse_4html__log_serialize_cb(lxb_char_t const *__pyx_v_data, size_t __pyx_v_len, void *__pyx_v_ctx) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif

  /* "resiliparse_dom/parse/html.pyx":101
 * 
 * cdef inline void _log_serialize_cb(const lxb_char_t *data, size_t len, void *ctx) noexcept nogil:
 *     (<string*>ctx).append(<const char*>data, len)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    ((std::string *)__pyx_v_ctx)->append(((char const *)__pyx_v_data), __pyx_v_len);
  } catch(...) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_CppExn2PyErr();
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
    __PYX_ERR(0, 101, __pyx_L1_error)
  }

  /* "resiliparse_dom/parse/html.pyx":100
 * 
 * 
 * cdef inline void _log_serialize_cb(const lxb_char_t *data, size_t len, void *ctx) noexcept nogil:             # <<<<<<<<<<<<<<
 *     (<string*>ctx).append(<const char*>data, len)
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_WriteUnraisable("resiliparse_dom.parse.html._log_serialize_cb", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
}

/* "resiliparse_dom/parse/html.pyx":104
 * 
 * 
 * cdef lxb_css_selector_list_t* parse_css_selectors(lxb_css_parser_t* parser, const lxb_char_t* selector,             # <<<<<<<<<<<<<<
 *                                                   size_t selector_len) except NULL nogil:
 *     cdef lxb_css_selector_list_t* sel_list = lxb_css_selectors_parse(parser, selector, selector_len)
 */

static lxb_css_selector_list_t *__pyx_f_15resiliparse_dom_5parse_4html_parse_css_selectors(lxb_css_parser_t *__pyx_v_parser, lxb_char_t const *__pyx_v_selector, size_t __pyx_v_selector_len) {
  lxb_css_selector_list_t *__pyx_v_sel_list;
  std::string __pyx_v_err;
  lxb_css_selector_list_t *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif
  __Pyx_RefNannySetupContext("parse_css_selectors", 1);

  /* "resiliparse_dom/parse/html.pyx":106
 * cdef lxb_css_selector_list_t* parse_css_selectors(lxb_css_parser_t* parser, const lxb_char_t* selector,
 *                                                   size_t selector_len) except NULL nogil:
 *     cdef lxb_css_selector_list_t* sel_list = lxb_css_selectors_parse(parser, selector, selector_len)             # <<<<<<<<<<<<<<
 *     cdef string err
 *     if parser.status != LXB_STATUS_OK:
 */
  __pyx_v_sel_list = lxb_css_selectors_parse(__pyx_v_parser, __pyx_v_selector, __pyx_v_selector_len);

  /* "resiliparse_dom/parse/html.pyx":108
 *     cdef lxb_css_selector_list_t* sel_list = lxb_css_selectors_parse(parser, selector, selector_len)
 *     cdef string err
 *     if parser.status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         lxb_css_log_serialize(parser.log, <lexbor_serialize_cb_f>_log_serialize_cb, &err, <const lxb_char_t*>b'', 0)
 *         with gil:
 */
  __pyx_t_1 = (__pyx_v_parser->status != LXB_STATUS_OK);
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":109
 *     cdef string err
 *     if parser.status != LXB_STATUS_OK:
 *         lxb_css_log_serialize(parser.log, <lexbor_serialize_cb_f>_log_serialize_cb, &err, <const lxb_char_t*>b'', 0)             # <<<<<<<<<<<<<<
 *         with gil:
 *             raise ValueError(f'CSS parser error: {err.decode().strip()}')
 */
    (void)(lxb_css_log_serialize(__pyx_v_parser->log, ((lexbor_serialize_cb_f)__pyx_f_15resiliparse_dom_5parse_4html__log_serialize_cb), (&__pyx_v_err), ((lxb_char_t const *)((lxb_char_t const *)((char const *)""))), 0));

    /* "resiliparse_dom/parse/html.pyx":110
 *     if parser.status != LXB_STATUS_OK:
 *         lxb_css_log_serialize(parser.log, <lexbor_serialize_cb_f>_log_serialize_cb, &err, <const lxb_char_t*>b'', 0)
 *         with gil:             # <<<<<<<<<<<<<<
 *             raise ValueError(f'CSS parser error: {err.decode().strip()}')
 *     return sel_list
 */
    {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
        #endif
        /*try:*/ {

          /* "resiliparse_dom/parse/html.pyx":111
 *         lxb_css_log_serialize(parser.log, <lexbor_serialize_cb_f>_log_serialize_cb, &err, <const lxb_char_t*>b'', 0)
 *         with gil:
 *             raise ValueError(f'CSS parser error: {err.decode().strip()}')             # <<<<<<<<<<<<<<
 *     return sel_list
 * 
 */
          __pyx_t_3 = __Pyx_decode_cpp_string(__pyx_v_err, 0, PY_SSIZE_T_MAX, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 111, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_strip); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 111, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_5 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_5 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L5_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 111, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyUnicode_Concat(__pyx_kp_u_CSS_parser_error, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 111, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_Raise(__pyx_t_4, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __PYX_ERR(0, 111, __pyx_L5_error)
        }

        /* "resiliparse_dom/parse/html.pyx":110
 *     if parser.status != LXB_STATUS_OK:
 *         lxb_css_log_serialize(parser.log, <lexbor_serialize_cb_f>_log_serialize_cb, &err, <const lxb_char_t*>b'', 0)
 *         with gil:             # <<<<<<<<<<<<<<
 *             raise ValueError(f'CSS parser error: {err.decode().strip()}')
 *     return sel_list
 */
        /*finally:*/ {
          __pyx_L5_error: {
            #ifdef WITH_THREAD
            __Pyx_PyGILState_Release(__pyx_gilstate_save);
            #endif
            goto __pyx_L1_error;
          }
        }
    }

    /* "resiliparse_dom/parse/html.pyx":108
 *     cdef lxb_css_selector_list_t* sel_list = lxb_css_selectors_parse(parser, selector, selector_len)
 *     cdef string err
 *     if parser.status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         lxb_css_log_serialize(parser.log, <lexbor_serialize_cb_f>_log_serialize_cb, &err, <const lxb_char_t*>b'', 0)
 *         with gil:
 */
  }

  /* "resiliparse_dom/parse/html.pyx":112
 *         with gil:
 *             raise ValueError(f'CSS parser error: {err.decode().strip()}')
 *     return sel_list             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_sel_list;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":104
 * 
 * 
 * cdef lxb_css_selector_list_t* parse_css_selectors(lxb_css_parser_t* parser, const lxb_char_t* selector,             # <<<<<<<<<<<<<<
 *                                                   size_t selector_len) except NULL nogil:
 *     cdef lxb_css_selector_list_t* sel_list = lxb_css_selectors_parse(parser, selector, selector_len)
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.parse_css_selectors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  __Pyx_RefNannyFinishContextNogil()
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":115
 * 
 * 
 * cdef inline lxb_dom_node_t* next_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                       size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     """
 */

static CYTHON_INLINE lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_next_node(lxb_dom_node_t const *__pyx_v_root_node, lxb_dom_node_t *__pyx_v_node, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node *__pyx_optional_args) {

  /* "resiliparse_dom/parse/html.pyx":116
 * 
 * cdef inline lxb_dom_node_t* next_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,
 *                                       size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """
 *     DOM tree pre-order traversal primitive.
 */
  size_t *__pyx_v_depth = ((size_t *)NULL);
  int *__pyx_v_end_tag = ((int *)NULL);
  int __pyx_v_is_end;
  lxb_dom_node_t *__pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  lxb_dom_node_t *__pyx_t_3;
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_depth = __pyx_optional_args->depth;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_end_tag = __pyx_optional_args->end_tag;
      }
    }
  }

  /* "resiliparse_dom/parse/html.pyx":130
 *     :returns: next node or ``NULL`` if done
 *     """
 *     cdef bint is_end = end_tag and end_tag[0]             # <<<<<<<<<<<<<<
 * 
 *     if not is_end and node.first_child:
 */
  __pyx_t_2 = (__pyx_v_end_tag != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_1 = (__pyx_v_end_tag[0]);
  __pyx_L3_bool_binop_done:;
  __pyx_v_is_end = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":132
 *     cdef bint is_end = end_tag and end_tag[0]
 * 
 *     if not is_end and node.first_child:             # <<<<<<<<<<<<<<
 *         if depth:
 *             preinc(depth[0])
 */
  __pyx_t_2 = (!__pyx_v_is_end);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_node->first_child != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":133
 * 
 *     if not is_end and node.first_child:
 *         if depth:             # <<<<<<<<<<<<<<
 *             preinc(depth[0])
 *         return node.first_child
 */
    __pyx_t_1 = (__pyx_v_depth != 0);
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":134
 *     if not is_end and node.first_child:
 *         if depth:
 *             preinc(depth[0])             # <<<<<<<<<<<<<<
 *         return node.first_child
 *     else:
 */
      (void)((++(__pyx_v_depth[0])));

      /* "resiliparse_dom/parse/html.pyx":133
 * 
 *     if not is_end and node.first_child:
 *         if depth:             # <<<<<<<<<<<<<<
 *             preinc(depth[0])
 *         return node.first_child
 */
    }

    /* "resiliparse_dom/parse/html.pyx":135
 *         if depth:
 *             preinc(depth[0])
 *         return node.first_child             # <<<<<<<<<<<<<<
 *     else:
 *         while not node.next and node != root_node:
 */
    __pyx_r = __pyx_v_node->first_child;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":132
 *     cdef bint is_end = end_tag and end_tag[0]
 * 
 *     if not is_end and node.first_child:             # <<<<<<<<<<<<<<
 *         if depth:
 *             preinc(depth[0])
 */
  }

  /* "resiliparse_dom/parse/html.pyx":137
 *         return node.first_child
 *     else:
 *         while not node.next and node != root_node:             # <<<<<<<<<<<<<<
 *             node = node.parent
 *             if depth:
 */
  /*else*/ {
    while (1) {
      __pyx_t_2 = (!(__pyx_v_node->next != 0));
      if (__pyx_t_2) {
      } else {
        __pyx_t_1 = __pyx_t_2;
        goto __pyx_L11_bool_binop_done;
      }
      __pyx_t_2 = (__pyx_v_node != __pyx_v_root_node);
      __pyx_t_1 = __pyx_t_2;
      __pyx_L11_bool_binop_done:;
      if (!__pyx_t_1) break;

      /* "resiliparse_dom/parse/html.pyx":138
 *     else:
 *         while not node.next and node != root_node:
 *             node = node.parent             # <<<<<<<<<<<<<<
 *             if depth:
 *                 predec(depth[0])
 */
      __pyx_t_3 = __pyx_v_node->parent;
      __pyx_v_node = __pyx_t_3;

      /* "resiliparse_dom/parse/html.pyx":139
 *         while not node.next and node != root_node:
 *             node = node.parent
 *             if depth:             # <<<<<<<<<<<<<<
 *                 predec(depth[0])
 *             if end_tag:
 */
      __pyx_t_1 = (__pyx_v_depth != 0);
      if (__pyx_t_1) {

        /* "resiliparse_dom/parse/html.pyx":140
 *             node = node.parent
 *             if depth:
 *                 predec(depth[0])             # <<<<<<<<<<<<<<
 *             if end_tag:
 *                 end_tag[0] = True
 */
        (void)((--(__pyx_v_depth[0])));

        /* "resiliparse_dom/parse/html.pyx":139
 *         while not node.next and node != root_node:
 *             node = node.parent
 *             if depth:             # <<<<<<<<<<<<<<
 *                 predec(depth[0])
 *             if end_tag:
 */
      }

      /* "resiliparse_dom/parse/html.pyx":141
 *             if depth:
 *                 predec(depth[0])
 *             if end_tag:             # <<<<<<<<<<<<<<
 *                 end_tag[0] = True
 *                 return node
 */
      __pyx_t_1 = (__pyx_v_end_tag != 0);
      if (__pyx_t_1) {

        /* "resiliparse_dom/parse/html.pyx":142
 *                 predec(depth[0])
 *             if end_tag:
 *                 end_tag[0] = True             # <<<<<<<<<<<<<<
 *                 return node
 * 
 */
        (__pyx_v_end_tag[0]) = 1;

        /* "resiliparse_dom/parse/html.pyx":143
 *             if end_tag:
 *                 end_tag[0] = True
 *                 return node             # <<<<<<<<<<<<<<
 * 
 *         if end_tag:
 */
        __pyx_r = __pyx_v_node;
        goto __pyx_L0;

        /* "resiliparse_dom/parse/html.pyx":141
 *             if depth:
 *                 predec(depth[0])
 *             if end_tag:             # <<<<<<<<<<<<<<
 *                 end_tag[0] = True
 *                 return node
 */
      }
    }

    /* "resiliparse_dom/parse/html.pyx":145
 *                 return node
 * 
 *         if end_tag:             # <<<<<<<<<<<<<<
 *             end_tag[0] = False
 *         if node == root_node:
 */
    __pyx_t_1 = (__pyx_v_end_tag != 0);
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":146
 * 
 *         if end_tag:
 *             end_tag[0] = False             # <<<<<<<<<<<<<<
 *         if node == root_node:
 *             return NULL
 */
      (__pyx_v_end_tag[0]) = 0;

      /* "resiliparse_dom/parse/html.pyx":145
 *                 return node
 * 
 *         if end_tag:             # <<<<<<<<<<<<<<
 *             end_tag[0] = False
 *         if node == root_node:
 */
    }

    /* "resiliparse_dom/parse/html.pyx":147
 *         if end_tag:
 *             end_tag[0] = False
 *         if node == root_node:             # <<<<<<<<<<<<<<
 *             return NULL
 *         return node.next
 */
    __pyx_t_1 = (__pyx_v_node == __pyx_v_root_node);
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":148
 *             end_tag[0] = False
 *         if node == root_node:
 *             return NULL             # <<<<<<<<<<<<<<
 *         return node.next
 * 
 */
      __pyx_r = NULL;
      goto __pyx_L0;

      /* "resiliparse_dom/parse/html.pyx":147
 *         if end_tag:
 *             end_tag[0] = False
 *         if node == root_node:             # <<<<<<<<<<<<<<
 *             return NULL
 *         return node.next
 */
    }

    /* "resiliparse_dom/parse/html.pyx":149
 *         if node == root_node:
 *             return NULL
 *         return node.next             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_r = __pyx_v_node->next;
    goto __pyx_L0;
  }

  /* "resiliparse_dom/parse/html.pyx":115
 * 
 * 
 * cdef inline lxb_dom_node_t* next_node(const lxb_dom_node_t* root_node, lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                       size_t* depth=NULL, bint* end_tag=NULL) noexcept nogil:
 *     """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":152
 * 
 * 
 * cdef inline string get_node_text(lxb_dom_node_t* node) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """Get node inner text."""
 *     cdef lxb_dom_character_data_t* char_data
 */

static CYTHON_INLINE std::string __pyx_f_15resiliparse_dom_5parse_4html_get_node_text(lxb_dom_node_t *__pyx_v_node) {
  lxb_dom_character_data_t *__pyx_v_char_data;
  size_t __pyx_v_text_len;
  lxb_char_t *__pyx_v_text;
  std::string __pyx_v_text_str;
  std::string __pyx_r;
  int __pyx_t_1;
  std::string __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif

  /* "resiliparse_dom/parse/html.pyx":155
 *     """Get node inner text."""
 *     cdef lxb_dom_character_data_t* char_data
 *     if node.type == LXB_DOM_NODE_TYPE_TEXT:             # <<<<<<<<<<<<<<
 *         char_data = <lxb_dom_character_data_t*>node
 *         return string(<const char*>char_data.data.data, char_data.data.length)
 */
  __pyx_t_1 = (__pyx_v_node->type == LXB_DOM_NODE_TYPE_TEXT);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":156
 *     cdef lxb_dom_character_data_t* char_data
 *     if node.type == LXB_DOM_NODE_TYPE_TEXT:
 *         char_data = <lxb_dom_character_data_t*>node             # <<<<<<<<<<<<<<
 *         return string(<const char*>char_data.data.data, char_data.data.length)
 * 
 */
    __pyx_v_char_data = ((lxb_dom_character_data_t *)__pyx_v_node);

    /* "resiliparse_dom/parse/html.pyx":157
 *     if node.type == LXB_DOM_NODE_TYPE_TEXT:
 *         char_data = <lxb_dom_character_data_t*>node
 *         return string(<const char*>char_data.data.data, char_data.data.length)             # <<<<<<<<<<<<<<
 * 
 *     cdef size_t text_len = 0
 */
    try {
      __pyx_t_2 = std::string(((char const *)__pyx_v_char_data->data.data), __pyx_v_char_data->data.length);
    } catch(...) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
      #endif
      __Pyx_CppExn2PyErr();
      #ifdef WITH_THREAD
      __Pyx_PyGILState_Release(__pyx_gilstate_save);
      #endif
      __PYX_ERR(0, 157, __pyx_L1_error)
    }
    __pyx_r = __pyx_t_2;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":155
 *     """Get node inner text."""
 *     cdef lxb_dom_character_data_t* char_data
 *     if node.type == LXB_DOM_NODE_TYPE_TEXT:             # <<<<<<<<<<<<<<
 *         char_data = <lxb_dom_character_data_t*>node
 *         return string(<const char*>char_data.data.data, char_data.data.length)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":159
 *         return string(<const char*>char_data.data.data, char_data.data.length)
 * 
 *     cdef size_t text_len = 0             # <<<<<<<<<<<<<<
 *     cdef lxb_char_t* text = lxb_dom_node_text_content(node, &text_len)
 *     if not text or not text_len:
 */
  __pyx_v_text_len = 0;

  /* "resiliparse_dom/parse/html.pyx":160
 * 
 *     cdef size_t text_len = 0
 *     cdef lxb_char_t* text = lxb_dom_node_text_content(node, &text_len)             # <<<<<<<<<<<<<<
 *     if not text or not text_len:
 *         return string()
 */
  __pyx_v_text = lxb_dom_node_text_content(__pyx_v_node, (&__pyx_v_text_len));

  /* "resiliparse_dom/parse/html.pyx":161
 *     cdef size_t text_len = 0
 *     cdef lxb_char_t* text = lxb_dom_node_text_content(node, &text_len)
 *     if not text or not text_len:             # <<<<<<<<<<<<<<
 *         return string()
 *     cdef string text_str = string(<const char*>text, text_len)
 */
  __pyx_t_3 = (!(__pyx_v_text != 0));
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_3 = (!(__pyx_v_text_len != 0));
  __pyx_t_1 = __pyx_t_3;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":162
 *     cdef lxb_char_t* text = lxb_dom_node_text_content(node, &text_len)
 *     if not text or not text_len:
 *         return string()             # <<<<<<<<<<<<<<
 *     cdef string text_str = string(<const char*>text, text_len)
 *     lxb_dom_document_destroy_text(node.owner_document, text)
 */
    try {
      __pyx_t_2 = std::string();
    } catch(...) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
      #endif
      __Pyx_CppExn2PyErr();
      #ifdef WITH_THREAD
      __Pyx_PyGILState_Release(__pyx_gilstate_save);
      #endif
      __PYX_ERR(0, 162, __pyx_L1_error)
    }
    __pyx_r = __pyx_t_2;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":161
 *     cdef size_t text_len = 0
 *     cdef lxb_char_t* text = lxb_dom_node_text_content(node, &text_len)
 *     if not text or not text_len:             # <<<<<<<<<<<<<<
 *         return string()
 *     cdef string text_str = string(<const char*>text, text_len)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":163
 *     if not text or not text_len:
 *         return string()
 *     cdef string text_str = string(<const char*>text, text_len)             # <<<<<<<<<<<<<<
 *     lxb_dom_document_destroy_text(node.owner_document, text)
 *     return text_str
 */
  try {
    __pyx_t_2 = std::string(((char const *)__pyx_v_text), __pyx_v_text_len);
  } catch(...) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_CppExn2PyErr();
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
    __PYX_ERR(0, 163, __pyx_L1_error)
  }
  __pyx_v_text_str = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_2);

  /* "resiliparse_dom/parse/html.pyx":164
 *         return string()
 *     cdef string text_str = string(<const char*>text, text_len)
 *     lxb_dom_document_destroy_text(node.owner_document, text)             # <<<<<<<<<<<<<<
 *     return text_str
 * 
 */
  (void)(lxb_dom_document_destroy_text(__pyx_v_node->owner_document, __pyx_v_text));

  /* "resiliparse_dom/parse/html.pyx":165
 *     cdef string text_str = string(<const char*>text, text_len)
 *     lxb_dom_document_destroy_text(node.owner_document, text)
 *     return text_str             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_text_str;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":152
 * 
 * 
 * cdef inline string get_node_text(lxb_dom_node_t* node) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """Get node inner text."""
 *     cdef lxb_dom_character_data_t* char_data
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_WriteUnraisable("resiliparse_dom.parse.html.get_node_text", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":168
 * 
 * 
 * cdef lxb_dom_collection_t* get_elements_by_class_name_impl(lxb_dom_node_t* node, const char* class_name,             # <<<<<<<<<<<<<<
 *                                                            size_t class_name_len, size_t init_size=5) noexcept nogil:
 *     """
 */

static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl(lxb_dom_node_t *__pyx_v_node, char const *__pyx_v_class_name, size_t __pyx_v_class_name_len, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl *__pyx_optional_args) {
  size_t __pyx_v_init_size = ((size_t)5);
  lxb_dom_collection_t *__pyx_v_coll;
  lxb_status_t __pyx_v_status;
  lxb_dom_collection_t *__pyx_r;
  int __pyx_t_1;
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_init_size = __pyx_optional_args->init_size;
    }
  }

  /* "resiliparse_dom/parse/html.pyx":181
 *     :return: pointer to created DOM collection or ``NULL`` if error occurred
 *     """
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)             # <<<<<<<<<<<<<<
 *     if not coll:
 *         return NULL
 */
  __pyx_v_coll = lxb_dom_collection_make(__pyx_v_node->owner_document, __pyx_v_init_size);

  /* "resiliparse_dom/parse/html.pyx":182
 *     """
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     if not coll:             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */
  __pyx_t_1 = (!(__pyx_v_coll != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":183
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     if not coll:
 *         return NULL             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_class_name(<lxb_dom_element_t*>node, coll,
 */
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":182
 *     """
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     if not coll:             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":185
 *         return NULL
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_class_name(<lxb_dom_element_t*>node, coll,             # <<<<<<<<<<<<<<
 *                                                               <const lxb_char_t*>class_name, class_name_len)
 * 
 */
  __pyx_v_status = lxb_dom_elements_by_class_name(((lxb_dom_element_t *)__pyx_v_node), __pyx_v_coll, ((lxb_char_t const *)__pyx_v_class_name), __pyx_v_class_name_len);

  /* "resiliparse_dom/parse/html.pyx":188
 *                                                               <const lxb_char_t*>class_name, class_name_len)
 * 
 *     if status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         lxb_dom_collection_destroy(coll, True)
 *         return NULL
 */
  __pyx_t_1 = (__pyx_v_status != LXB_STATUS_OK);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":189
 * 
 *     if status != LXB_STATUS_OK:
 *         lxb_dom_collection_destroy(coll, True)             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */
    (void)(lxb_dom_collection_destroy(__pyx_v_coll, 1));

    /* "resiliparse_dom/parse/html.pyx":190
 *     if status != LXB_STATUS_OK:
 *         lxb_dom_collection_destroy(coll, True)
 *         return NULL             # <<<<<<<<<<<<<<
 * 
 *     return coll
 */
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":188
 *                                                               <const lxb_char_t*>class_name, class_name_len)
 * 
 *     if status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         lxb_dom_collection_destroy(coll, True)
 *         return NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":192
 *         return NULL
 * 
 *     return coll             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_coll;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":168
 * 
 * 
 * cdef lxb_dom_collection_t* get_elements_by_class_name_impl(lxb_dom_node_t* node, const char* class_name,             # <<<<<<<<<<<<<<
 *                                                            size_t class_name_len, size_t init_size=5) noexcept nogil:
 *     """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":203
 * 
 * 
 * cdef inline lexbor_action_t element_by_id_callback(lxb_dom_node_t* node, void* ctx) noexcept nogil:             # <<<<<<<<<<<<<<
 *     if node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         return LEXBOR_ACTION_OK
 */

static CYTHON_INLINE lexbor_action_t __pyx_f_15resiliparse_dom_5parse_4html_element_by_id_callback(lxb_dom_node_t *__pyx_v_node, void *__pyx_v_ctx) {
  __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx_t *__pyx_v_match_ctx;
  lxb_char_t const *__pyx_v_id_val;
  size_t __pyx_v_id_val_len;
  lexbor_action_t __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":204
 * 
 * cdef inline lexbor_action_t element_by_id_callback(lxb_dom_node_t* node, void* ctx) noexcept nogil:
 *     if node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *         return LEXBOR_ACTION_OK
 * 
 */
  __pyx_t_1 = (__pyx_v_node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":205
 * cdef inline lexbor_action_t element_by_id_callback(lxb_dom_node_t* node, void* ctx) noexcept nogil:
 *     if node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         return LEXBOR_ACTION_OK             # <<<<<<<<<<<<<<
 * 
 *     cdef element_by_id_match_ctx_t* match_ctx = <element_by_id_match_ctx_t*>ctx
 */
    __pyx_r = LEXBOR_ACTION_OK;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":204
 * 
 * cdef inline lexbor_action_t element_by_id_callback(lxb_dom_node_t* node, void* ctx) noexcept nogil:
 *     if node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *         return LEXBOR_ACTION_OK
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":207
 *         return LEXBOR_ACTION_OK
 * 
 *     cdef element_by_id_match_ctx_t* match_ctx = <element_by_id_match_ctx_t*>ctx             # <<<<<<<<<<<<<<
 *     cdef const lxb_char_t* id_val
 *     cdef size_t id_val_len = 0
 */
  __pyx_v_match_ctx = ((__pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx_t *)__pyx_v_ctx);

  /* "resiliparse_dom/parse/html.pyx":209
 *     cdef element_by_id_match_ctx_t* match_ctx = <element_by_id_match_ctx_t*>ctx
 *     cdef const lxb_char_t* id_val
 *     cdef size_t id_val_len = 0             # <<<<<<<<<<<<<<
 * 
 *     id_val = lxb_dom_element_id(<lxb_dom_element_t*>node, &id_val_len)
 */
  __pyx_v_id_val_len = 0;

  /* "resiliparse_dom/parse/html.pyx":211
 *     cdef size_t id_val_len = 0
 * 
 *     id_val = lxb_dom_element_id(<lxb_dom_element_t*>node, &id_val_len)             # <<<<<<<<<<<<<<
 *     if not id_val or id_val_len != match_ctx.id_val_len:
 *         return LEXBOR_ACTION_OK
 */
  __pyx_v_id_val = lxb_dom_element_id(((lxb_dom_element_t *)__pyx_v_node), (&__pyx_v_id_val_len));

  /* "resiliparse_dom/parse/html.pyx":212
 * 
 *     id_val = lxb_dom_element_id(<lxb_dom_element_t*>node, &id_val_len)
 *     if not id_val or id_val_len != match_ctx.id_val_len:             # <<<<<<<<<<<<<<
 *         return LEXBOR_ACTION_OK
 * 
 */
  __pyx_t_2 = (!(__pyx_v_id_val != 0));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_id_val_len != __pyx_v_match_ctx->id_val_len);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":213
 *     id_val = lxb_dom_element_id(<lxb_dom_element_t*>node, &id_val_len)
 *     if not id_val or id_val_len != match_ctx.id_val_len:
 *         return LEXBOR_ACTION_OK             # <<<<<<<<<<<<<<
 * 
 *     if lexbor_str_data_ncmp(id_val, match_ctx.id_val, id_val_len):
 */
    __pyx_r = LEXBOR_ACTION_OK;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":212
 * 
 *     id_val = lxb_dom_element_id(<lxb_dom_element_t*>node, &id_val_len)
 *     if not id_val or id_val_len != match_ctx.id_val_len:             # <<<<<<<<<<<<<<
 *         return LEXBOR_ACTION_OK
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":215
 *         return LEXBOR_ACTION_OK
 * 
 *     if lexbor_str_data_ncmp(id_val, match_ctx.id_val, id_val_len):             # <<<<<<<<<<<<<<
 *         match_ctx.result_node = node
 *         return LEXBOR_ACTION_STOP
 */
  __pyx_t_1 = lexbor_str_data_ncmp(__pyx_v_id_val, __pyx_v_match_ctx->id_val, __pyx_v_id_val_len);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":216
 * 
 *     if lexbor_str_data_ncmp(id_val, match_ctx.id_val, id_val_len):
 *         match_ctx.result_node = node             # <<<<<<<<<<<<<<
 *         return LEXBOR_ACTION_STOP
 * 
 */
    __pyx_v_match_ctx->result_node = __pyx_v_node;

    /* "resiliparse_dom/parse/html.pyx":217
 *     if lexbor_str_data_ncmp(id_val, match_ctx.id_val, id_val_len):
 *         match_ctx.result_node = node
 *         return LEXBOR_ACTION_STOP             # <<<<<<<<<<<<<<
 * 
 *     return LEXBOR_ACTION_OK
 */
    __pyx_r = LEXBOR_ACTION_STOP;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":215
 *         return LEXBOR_ACTION_OK
 * 
 *     if lexbor_str_data_ncmp(id_val, match_ctx.id_val, id_val_len):             # <<<<<<<<<<<<<<
 *         match_ctx.result_node = node
 *         return LEXBOR_ACTION_STOP
 */
  }

  /* "resiliparse_dom/parse/html.pyx":219
 *         return LEXBOR_ACTION_STOP
 * 
 *     return LEXBOR_ACTION_OK             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = LEXBOR_ACTION_OK;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":203
 * 
 * 
 * cdef inline lexbor_action_t element_by_id_callback(lxb_dom_node_t* node, void* ctx) noexcept nogil:             # <<<<<<<<<<<<<<
 *     if node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         return LEXBOR_ACTION_OK
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":222
 * 
 * 
 * cdef lxb_dom_node_t* get_element_by_id_impl(lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                             const char* id_value, size_t id_value_len,
 *                                             bint case_insensitive=False) noexcept nogil:
 */

static lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_get_element_by_id_impl(lxb_dom_node_t *__pyx_v_node, char const *__pyx_v_id_value, size_t __pyx_v_id_value_len, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl *__pyx_optional_args) {
  struct __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx __pyx_v_ctx;
  lxb_dom_node_t *__pyx_r;
  struct __pyx_t_15resiliparse_dom_5parse_4html_element_by_id_match_ctx __pyx_t_1;
  if (__pyx_optional_args) {
  }

  /* "resiliparse_dom/parse/html.pyx":235
 *     """
 * 
 *     cdef element_by_id_match_ctx ctx = [<const lxb_char_t*>id_value, id_value_len, NULL]             # <<<<<<<<<<<<<<
 *     lxb_dom_node_simple_walk(node, <lxb_dom_node_simple_walker_f>element_by_id_callback, &ctx)
 *     return ctx.result_node
 */
  __pyx_t_1.id_val = ((lxb_char_t const *)__pyx_v_id_value);
  __pyx_t_1.id_val_len = __pyx_v_id_value_len;
  __pyx_t_1.result_node = NULL;
  __pyx_v_ctx = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":236
 * 
 *     cdef element_by_id_match_ctx ctx = [<const lxb_char_t*>id_value, id_value_len, NULL]
 *     lxb_dom_node_simple_walk(node, <lxb_dom_node_simple_walker_f>element_by_id_callback, &ctx)             # <<<<<<<<<<<<<<
 *     return ctx.result_node
 * 
 */
  lxb_dom_node_simple_walk(__pyx_v_node, ((lxb_dom_node_simple_walker_f)__pyx_f_15resiliparse_dom_5parse_4html_element_by_id_callback), (&__pyx_v_ctx));

  /* "resiliparse_dom/parse/html.pyx":237
 *     cdef element_by_id_match_ctx ctx = [<const lxb_char_t*>id_value, id_value_len, NULL]
 *     lxb_dom_node_simple_walk(node, <lxb_dom_node_simple_walker_f>element_by_id_callback, &ctx)
 *     return ctx.result_node             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_ctx.result_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":222
 * 
 * 
 * cdef lxb_dom_node_t* get_element_by_id_impl(lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                             const char* id_value, size_t id_value_len,
 *                                             bint case_insensitive=False) noexcept nogil:
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":240
 * 
 * 
 * cdef lxb_dom_collection_t* get_elements_by_attr_impl(lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                                      const char* attr_name, size_t attr_name_len,
 *                                                      const char* attr_value, size_t attr_value_len,
 */

static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl(lxb_dom_node_t *__pyx_v_node, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len, char const *__pyx_v_attr_value, size_t __pyx_v_attr_value_len, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl *__pyx_optional_args) {
  size_t __pyx_v_init_size = ((size_t)5);

  /* "resiliparse_dom/parse/html.pyx":243
 *                                                      const char* attr_name, size_t attr_name_len,
 *                                                      const char* attr_value, size_t attr_value_len,
 *                                                      size_t init_size=5, bint case_insensitive=False) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Return a collection of elements matching the given attribute name and value.
 */
  int __pyx_v_case_insensitive = ((int)0);
  lxb_dom_collection_t *__pyx_v_coll;
  lxb_status_t __pyx_v_status;
  lxb_dom_collection_t *__pyx_r;
  int __pyx_t_1;
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_init_size = __pyx_optional_args->init_size;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
      }
    }
  }

  /* "resiliparse_dom/parse/html.pyx":258
 *     :return: pointer to created DOM collection or ``NULL`` if error occurred
 *     """
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)             # <<<<<<<<<<<<<<
 *     if not coll:
 *         return NULL
 */
  __pyx_v_coll = lxb_dom_collection_make(__pyx_v_node->owner_document, __pyx_v_init_size);

  /* "resiliparse_dom/parse/html.pyx":259
 *     """
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     if not coll:             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */
  __pyx_t_1 = (!(__pyx_v_coll != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":260
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     if not coll:
 *         return NULL             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_attr(<lxb_dom_element_t*>node, coll,
 */
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":259
 *     """
 *     cdef lxb_dom_collection_t * coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     if not coll:             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":262
 *         return NULL
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_attr(<lxb_dom_element_t*>node, coll,             # <<<<<<<<<<<<<<
 *                                                         <const lxb_char_t*>attr_name, attr_name_len,
 *                                                         <const lxb_char_t*>attr_value, attr_value_len,
 */
  __pyx_v_status = lxb_dom_elements_by_attr(((lxb_dom_element_t *)__pyx_v_node), __pyx_v_coll, ((lxb_char_t const *)__pyx_v_attr_name), __pyx_v_attr_name_len, ((lxb_char_t const *)__pyx_v_attr_value), __pyx_v_attr_value_len, __pyx_v_case_insensitive);

  /* "resiliparse_dom/parse/html.pyx":267
 *                                                         case_insensitive)
 * 
 *     if status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         lxb_dom_collection_destroy(coll, True)
 *         return NULL
 */
  __pyx_t_1 = (__pyx_v_status != LXB_STATUS_OK);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":268
 * 
 *     if status != LXB_STATUS_OK:
 *         lxb_dom_collection_destroy(coll, True)             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */
    (void)(lxb_dom_collection_destroy(__pyx_v_coll, 1));

    /* "resiliparse_dom/parse/html.pyx":269
 *     if status != LXB_STATUS_OK:
 *         lxb_dom_collection_destroy(coll, True)
 *         return NULL             # <<<<<<<<<<<<<<
 * 
 *     return coll
 */
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":267
 *                                                         case_insensitive)
 * 
 *     if status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         lxb_dom_collection_destroy(coll, True)
 *         return NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":271
 *         return NULL
 * 
 *     return coll             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_coll;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":240
 * 
 * 
 * cdef lxb_dom_collection_t* get_elements_by_attr_impl(lxb_dom_node_t* node,             # <<<<<<<<<<<<<<
 *                                                      const char* attr_name, size_t attr_name_len,
 *                                                      const char* attr_value, size_t attr_value_len,
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":274
 * 
 * 
 * cdef lxb_dom_collection_t* get_elements_by_tag_name_impl(lxb_dom_node_t* node, const char* tag_name,             # <<<<<<<<<<<<<<
 *                                                          size_t tag_name_len) noexcept nogil:
 *     """
 */

static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_tag_name_impl(lxb_dom_node_t *__pyx_v_node, char const *__pyx_v_tag_name, size_t __pyx_v_tag_name_len) {
  lxb_dom_collection_t *__pyx_v_coll;
  CYTHON_UNUSED lxb_status_t __pyx_v_status;
  lxb_dom_collection_t *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif
  __Pyx_RefNannySetupContext("get_elements_by_tag_name_impl", 1);

  /* "resiliparse_dom/parse/html.pyx":285
 *     :param tag_name_len: tag name length in bytes
 *     """
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, 20)             # <<<<<<<<<<<<<<
 *     if not coll:
 *         with gil:
 */
  __pyx_v_coll = lxb_dom_collection_make(__pyx_v_node->owner_document, 20);

  /* "resiliparse_dom/parse/html.pyx":286
 *     """
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, 20)
 *     if not coll:             # <<<<<<<<<<<<<<
 *         with gil:
 *             raise RuntimeError('Failed to create DOM collection')
 */
  __pyx_t_1 = (!(__pyx_v_coll != 0));
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":287
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, 20)
 *     if not coll:
 *         with gil:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Failed to create DOM collection')
 * 
 */
    {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
        #endif
        /*try:*/ {

          /* "resiliparse_dom/parse/html.pyx":288
 *     if not coll:
 *         with gil:
 *             raise RuntimeError('Failed to create DOM collection')             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_tag_name(<lxb_dom_element_t*>node,
 */
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 288, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_Raise(__pyx_t_2, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __PYX_ERR(0, 288, __pyx_L5_error)
        }

        /* "resiliparse_dom/parse/html.pyx":287
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, 20)
 *     if not coll:
 *         with gil:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Failed to create DOM collection')
 * 
 */
        /*finally:*/ {
          __pyx_L5_error: {
            #ifdef WITH_THREAD
            __Pyx_PyGILState_Release(__pyx_gilstate_save);
            #endif
            goto __pyx_L1_error;
          }
        }
    }

    /* "resiliparse_dom/parse/html.pyx":286
 *     """
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, 20)
 *     if not coll:             # <<<<<<<<<<<<<<
 *         with gil:
 *             raise RuntimeError('Failed to create DOM collection')
 */
  }

  /* "resiliparse_dom/parse/html.pyx":290
 *             raise RuntimeError('Failed to create DOM collection')
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_tag_name(<lxb_dom_element_t*>node,             # <<<<<<<<<<<<<<
 *                                                             coll, <const lxb_char_t*>tag_name, tag_name_len)
 *     return coll
 */
  __pyx_v_status = lxb_dom_elements_by_tag_name(((lxb_dom_element_t *)__pyx_v_node), __pyx_v_coll, ((lxb_char_t const *)__pyx_v_tag_name), __pyx_v_tag_name_len);

  /* "resiliparse_dom/parse/html.pyx":292
 *     cdef lxb_status_t status = lxb_dom_elements_by_tag_name(<lxb_dom_element_t*>node,
 *                                                             coll, <const lxb_char_t*>tag_name, tag_name_len)
 *     return coll             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_coll;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":274
 * 
 * 
 * cdef lxb_dom_collection_t* get_elements_by_tag_name_impl(lxb_dom_node_t* node, const char* tag_name,             # <<<<<<<<<<<<<<
 *                                                          size_t tag_name_len) noexcept nogil:
 *     """
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("resiliparse_dom.parse.html.get_elements_by_tag_name_impl", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  __Pyx_RefNannyFinishContextNogil()
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":295
 * 
 * 
 * cdef inline lxb_status_t css_select_callback(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,             # <<<<<<<<<<<<<<
 *                                              void* ctx) noexcept nogil:
 *     lxb_dom_collection_append(<lxb_dom_collection_t*>ctx, node)
 */

static CYTHON_INLINE lxb_status_t __pyx_f_15resiliparse_dom_5parse_4html_css_select_callback(lxb_dom_node_t *__pyx_v_node, CYTHON_UNUSED lxb_css_selector_specificity_t *__pyx_v_spec, void *__pyx_v_ctx) {
  lxb_status_t __pyx_r;

  /* "resiliparse_dom/parse/html.pyx":297
 * cdef inline lxb_status_t css_select_callback(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,
 *                                              void* ctx) noexcept nogil:
 *     lxb_dom_collection_append(<lxb_dom_collection_t*>ctx, node)             # <<<<<<<<<<<<<<
 *     return LXB_STATUS_OK
 * 
 */
  (void)(lxb_dom_collection_append(((lxb_dom_collection_t *)__pyx_v_ctx), __pyx_v_node));

  /* "resiliparse_dom/parse/html.pyx":298
 *                                              void* ctx) noexcept nogil:
 *     lxb_dom_collection_append(<lxb_dom_collection_t*>ctx, node)
 *     return LXB_STATUS_OK             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = LXB_STATUS_OK;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":295
 * 
 * 
 * cdef inline lxb_status_t css_select_callback(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,             # <<<<<<<<<<<<<<
 *                                              void* ctx) noexcept nogil:
 *     lxb_dom_collection_append(<lxb_dom_collection_t*>ctx, node)
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":301
 * 
 * 
 * cdef inline lxb_status_t css_select_callback_single(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,             # <<<<<<<<<<<<<<
 *                                                     void* ctx) noexcept nogil:
 *     (<lxb_dom_node_t**>ctx)[0] = node
 */

static CYTHON_INLINE lxb_status_t __pyx_f_15resiliparse_dom_5parse_4html_css_select_callback_single(lxb_dom_node_t *__pyx_v_node, CYTHON_UNUSED lxb_css_selector_specificity_t *__pyx_v_spec, void *__pyx_v_ctx) {
  lxb_status_t __pyx_r;

  /* "resiliparse_dom/parse/html.pyx":303
 * cdef inline lxb_status_t css_select_callback_single(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,
 *                                                     void* ctx) noexcept nogil:
 *     (<lxb_dom_node_t**>ctx)[0] = node             # <<<<<<<<<<<<<<
 *     return LXB_STATUS_STOP
 * 
 */
  (((lxb_dom_node_t **)__pyx_v_ctx)[0]) = __pyx_v_node;

  /* "resiliparse_dom/parse/html.pyx":304
 *                                                     void* ctx) noexcept nogil:
 *     (<lxb_dom_node_t**>ctx)[0] = node
 *     return LXB_STATUS_STOP             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = LXB_STATUS_STOP;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":301
 * 
 * 
 * cdef inline lxb_status_t css_select_callback_single(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,             # <<<<<<<<<<<<<<
 *                                                     void* ctx) noexcept nogil:
 *     (<lxb_dom_node_t**>ctx)[0] = node
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":307
 * 
 * 
 * cdef lxb_dom_node_t* query_selector_impl(lxb_dom_node_t* node, HTMLTree tree,             # <<<<<<<<<<<<<<
 *                                          const char* selector, size_t selector_len) except <lxb_dom_node_t*>-1 nogil:
 *     """
 */

static lxb_dom_node_t *__pyx_f_15resiliparse_dom_5parse_4html_query_selector_impl(lxb_dom_node_t *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree, char const *__pyx_v_selector, size_t __pyx_v_selector_len) {
  lxb_selectors_t *__pyx_v_selectors;
  lxb_css_selector_list_t *__pyx_v_sel_list;
  lxb_dom_node_t *__pyx_v_result_node;
  lxb_dom_node_t *__pyx_r;
  lxb_css_selector_list_t *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif

  /* "resiliparse_dom/parse/html.pyx":318
 *     :return: pointer to created DOM collection or ``NULL`` if error occurred
 *     """
 *     tree.init_css_parser()             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 */
  __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(__pyx_v_tree);

  /* "resiliparse_dom/parse/html.pyx":320
 *     tree.init_css_parser()
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()             # <<<<<<<<<<<<<<
 *     lxb_selectors_init(selectors)
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 */
  __pyx_v_selectors = lxb_selectors_create();

  /* "resiliparse_dom/parse/html.pyx":321
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 *     lxb_selectors_init(selectors)             # <<<<<<<<<<<<<<
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 *                                                                  <const lxb_char_t*>selector, selector_len)
 */
  (void)(lxb_selectors_init(__pyx_v_selectors));

  /* "resiliparse_dom/parse/html.pyx":322
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 *     lxb_selectors_init(selectors)
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,             # <<<<<<<<<<<<<<
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef lxb_dom_node_t* result_node = NULL
 */
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_parse_css_selectors(__pyx_v_tree->css_parser, ((lxb_char_t const *)__pyx_v_selector), __pyx_v_selector_len); if (unlikely(__pyx_t_1 == ((lxb_css_selector_list_t *)NULL))) __PYX_ERR(0, 322, __pyx_L1_error)
  __pyx_v_sel_list = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":324
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef lxb_dom_node_t* result_node = NULL             # <<<<<<<<<<<<<<
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_select_callback_single, &result_node)
 * 
 */
  __pyx_v_result_node = NULL;

  /* "resiliparse_dom/parse/html.pyx":325
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef lxb_dom_node_t* result_node = NULL
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_select_callback_single, &result_node)             # <<<<<<<<<<<<<<
 * 
 *     destroy_css_selectors(tree.css_parser)
 */
  (void)(lxb_selectors_find(__pyx_v_selectors, __pyx_v_node, __pyx_v_sel_list, ((lxb_selectors_cb_f)__pyx_f_15resiliparse_dom_5parse_4html_css_select_callback_single), (&__pyx_v_result_node)));

  /* "resiliparse_dom/parse/html.pyx":327
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_select_callback_single, &result_node)
 * 
 *     destroy_css_selectors(tree.css_parser)             # <<<<<<<<<<<<<<
 *     lxb_selectors_destroy(selectors, True)
 * 
 */
  __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(__pyx_v_tree->css_parser);

  /* "resiliparse_dom/parse/html.pyx":328
 * 
 *     destroy_css_selectors(tree.css_parser)
 *     lxb_selectors_destroy(selectors, True)             # <<<<<<<<<<<<<<
 * 
 *     return result_node
 */
  (void)(lxb_selectors_destroy(__pyx_v_selectors, 1));

  /* "resiliparse_dom/parse/html.pyx":330
 *     lxb_selectors_destroy(selectors, True)
 * 
 *     return result_node             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":307
 * 
 * 
 * cdef lxb_dom_node_t* query_selector_impl(lxb_dom_node_t* node, HTMLTree tree,             # <<<<<<<<<<<<<<
 *                                          const char* selector, size_t selector_len) except <lxb_dom_node_t*>-1 nogil:
 *     """
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_AddTraceback("resiliparse_dom.parse.html.query_selector_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = ((lxb_dom_node_t *)-1L);
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":333
 * 
 * 
 * cdef lxb_dom_collection_t* query_selector_all_impl(lxb_dom_node_t* node, HTMLTree tree,             # <<<<<<<<<<<<<<
 *                                                    const char* selector, size_t selector_len,
 *                                                    size_t init_size=32) except <lxb_dom_collection_t*>-1 nogil:
 */

static lxb_dom_collection_t *__pyx_f_15resiliparse_dom_5parse_4html_query_selector_all_impl(lxb_dom_node_t *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree, char const *__pyx_v_selector, size_t __pyx_v_selector_len, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_query_selector_all_impl *__pyx_optional_args) {
  size_t __pyx_v_init_size = ((size_t)32);
  lxb_selectors_t *__pyx_v_selectors;
  lxb_css_selector_list_t *__pyx_v_sel_list;
  lxb_dom_collection_t *__pyx_v_coll;
  lxb_dom_collection_t *__pyx_r;
  lxb_css_selector_list_t *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_init_size = __pyx_optional_args->init_size;
    }
  }

  /* "resiliparse_dom/parse/html.pyx":348
 *     :return: pointer to created DOM collection or ``NULL`` if error occurred
 *     """
 *     tree.init_css_parser()             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 */
  __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(__pyx_v_tree);

  /* "resiliparse_dom/parse/html.pyx":350
 *     tree.init_css_parser()
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()             # <<<<<<<<<<<<<<
 *     lxb_selectors_init(selectors)
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 */
  __pyx_v_selectors = lxb_selectors_create();

  /* "resiliparse_dom/parse/html.pyx":351
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 *     lxb_selectors_init(selectors)             # <<<<<<<<<<<<<<
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 *                                                                  <const lxb_char_t*>selector, selector_len)
 */
  (void)(lxb_selectors_init(__pyx_v_selectors));

  /* "resiliparse_dom/parse/html.pyx":352
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 *     lxb_selectors_init(selectors)
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,             # <<<<<<<<<<<<<<
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, init_size)
 */
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_parse_css_selectors(__pyx_v_tree->css_parser, ((lxb_char_t const *)__pyx_v_selector), __pyx_v_selector_len); if (unlikely(__pyx_t_1 == ((lxb_css_selector_list_t *)NULL))) __PYX_ERR(0, 352, __pyx_L1_error)
  __pyx_v_sel_list = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":354
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, init_size)             # <<<<<<<<<<<<<<
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_select_callback, coll)
 * 
 */
  __pyx_v_coll = lxb_dom_collection_make(__pyx_v_node->owner_document, __pyx_v_init_size);

  /* "resiliparse_dom/parse/html.pyx":355
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef lxb_dom_collection_t* coll = lxb_dom_collection_make(node.owner_document, init_size)
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_select_callback, coll)             # <<<<<<<<<<<<<<
 * 
 *     destroy_css_selectors(tree.css_parser)
 */
  (void)(lxb_selectors_find(__pyx_v_selectors, __pyx_v_node, __pyx_v_sel_list, ((lxb_selectors_cb_f)__pyx_f_15resiliparse_dom_5parse_4html_css_select_callback), __pyx_v_coll));

  /* "resiliparse_dom/parse/html.pyx":357
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_select_callback, coll)
 * 
 *     destroy_css_selectors(tree.css_parser)             # <<<<<<<<<<<<<<
 *     lxb_selectors_destroy(selectors, True)
 * 
 */
  __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(__pyx_v_tree->css_parser);

  /* "resiliparse_dom/parse/html.pyx":358
 * 
 *     destroy_css_selectors(tree.css_parser)
 *     lxb_selectors_destroy(selectors, True)             # <<<<<<<<<<<<<<
 * 
 *     return coll
 */
  (void)(lxb_selectors_destroy(__pyx_v_selectors, 1));

  /* "resiliparse_dom/parse/html.pyx":360
 *     lxb_selectors_destroy(selectors, True)
 * 
 *     return coll             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_coll;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":333
 * 
 * 
 * cdef lxb_dom_collection_t* query_selector_all_impl(lxb_dom_node_t* node, HTMLTree tree,             # <<<<<<<<<<<<<<
 *                                                    const char* selector, size_t selector_len,
 *                                                    size_t init_size=32) except <lxb_dom_collection_t*>-1 nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_AddTraceback("resiliparse_dom.parse.html.query_selector_all_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = ((lxb_dom_collection_t *)-1L);
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":363
 * 
 * 
 * cdef inline lxb_status_t css_match_callback(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,             # <<<<<<<<<<<<<<
 *                                             void* ctx) noexcept nogil:
 *     (<bint*>ctx)[0] = True
 */

static CYTHON_INLINE lxb_status_t __pyx_f_15resiliparse_dom_5parse_4html_css_match_callback(CYTHON_UNUSED lxb_dom_node_t *__pyx_v_node, CYTHON_UNUSED lxb_css_selector_specificity_t *__pyx_v_spec, void *__pyx_v_ctx) {
  lxb_status_t __pyx_r;

  /* "resiliparse_dom/parse/html.pyx":365
 * cdef inline lxb_status_t css_match_callback(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,
 *                                             void* ctx) noexcept nogil:
 *     (<bint*>ctx)[0] = True             # <<<<<<<<<<<<<<
 *     return LXB_STATUS_STOP
 * 
 */
  (((int *)__pyx_v_ctx)[0]) = 1;

  /* "resiliparse_dom/parse/html.pyx":366
 *                                             void* ctx) noexcept nogil:
 *     (<bint*>ctx)[0] = True
 *     return LXB_STATUS_STOP             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = LXB_STATUS_STOP;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":363
 * 
 * 
 * cdef inline lxb_status_t css_match_callback(lxb_dom_node_t* node, lxb_css_selector_specificity_t* spec,             # <<<<<<<<<<<<<<
 *                                             void* ctx) noexcept nogil:
 *     (<bint*>ctx)[0] = True
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":369
 * 
 * 
 * cdef bint matches_impl(lxb_dom_node_t* node, HTMLTree tree, const char* selector, size_t selector_len) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Check whether any element in the DOM subtree matches the given CSS selector.
 */

static int __pyx_f_15resiliparse_dom_5parse_4html_matches_impl(lxb_dom_node_t *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree, char const *__pyx_v_selector, size_t __pyx_v_selector_len) {
  lxb_selectors_t *__pyx_v_selectors;
  lxb_css_selector_list_t *__pyx_v_sel_list;
  int __pyx_v_matches;
  int __pyx_r;
  lxb_css_selector_list_t *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif

  /* "resiliparse_dom/parse/html.pyx":379
 *     :return: boolean value indicating whether a matching element exists
 *     """
 *     tree.init_css_parser()             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 */
  __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(__pyx_v_tree);

  /* "resiliparse_dom/parse/html.pyx":381
 *     tree.init_css_parser()
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()             # <<<<<<<<<<<<<<
 *     lxb_selectors_init(selectors)
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 */
  __pyx_v_selectors = lxb_selectors_create();

  /* "resiliparse_dom/parse/html.pyx":382
 * 
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 *     lxb_selectors_init(selectors)             # <<<<<<<<<<<<<<
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 *                                                                  <const lxb_char_t*>selector, selector_len)
 */
  (void)(lxb_selectors_init(__pyx_v_selectors));

  /* "resiliparse_dom/parse/html.pyx":383
 *     cdef lxb_selectors_t* selectors = lxb_selectors_create()
 *     lxb_selectors_init(selectors)
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,             # <<<<<<<<<<<<<<
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef bint matches = False
 */
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_parse_css_selectors(__pyx_v_tree->css_parser, ((lxb_char_t const *)__pyx_v_selector), __pyx_v_selector_len); if (unlikely(__pyx_t_1 == ((lxb_css_selector_list_t *)NULL))) __PYX_ERR(0, 383, __pyx_L1_error)
  __pyx_v_sel_list = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":385
 *     cdef lxb_css_selector_list_t* sel_list = parse_css_selectors(tree.css_parser,
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef bint matches = False             # <<<<<<<<<<<<<<
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_match_callback, <void*>&matches)
 * 
 */
  __pyx_v_matches = 0;

  /* "resiliparse_dom/parse/html.pyx":386
 *                                                                  <const lxb_char_t*>selector, selector_len)
 *     cdef bint matches = False
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_match_callback, <void*>&matches)             # <<<<<<<<<<<<<<
 * 
 *     destroy_css_selectors(tree.css_parser)
 */
  (void)(lxb_selectors_find(__pyx_v_selectors, __pyx_v_node, __pyx_v_sel_list, ((lxb_selectors_cb_f)__pyx_f_15resiliparse_dom_5parse_4html_css_match_callback), ((void *)(&__pyx_v_matches))));

  /* "resiliparse_dom/parse/html.pyx":388
 *     lxb_selectors_find(selectors, node, sel_list, <lxb_selectors_cb_f>css_match_callback, <void*>&matches)
 * 
 *     destroy_css_selectors(tree.css_parser)             # <<<<<<<<<<<<<<
 *     lxb_selectors_destroy(selectors, True)
 * 
 */
  __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors(__pyx_v_tree->css_parser);

  /* "resiliparse_dom/parse/html.pyx":389
 * 
 *     destroy_css_selectors(tree.css_parser)
 *     lxb_selectors_destroy(selectors, True)             # <<<<<<<<<<<<<<
 * 
 *     return matches
 */
  (void)(lxb_selectors_destroy(__pyx_v_selectors, 1));

  /* "resiliparse_dom/parse/html.pyx":391
 *     lxb_selectors_destroy(selectors, True)
 * 
 *     return matches             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_matches;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":369
 * 
 * 
 * cdef bint matches_impl(lxb_dom_node_t* node, HTMLTree tree, const char* selector, size_t selector_len) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Check whether any element in the DOM subtree matches the given CSS selector.
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_WriteUnraisable("resiliparse_dom.parse.html.matches_impl", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":394
 * 
 * 
 * cdef inline bint is_whitespace(const char c):             # <<<<<<<<<<<<<<
 *     return c == b' ' or c == b'\t' or c == b'\n' or c == b'\f' or c == b'\r'
 * 
 */

static CYTHON_INLINE int __pyx_f_15resiliparse_dom_5parse_4html_is_whitespace(char const __pyx_v_c) {
  int __pyx_r;
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":395
 * 
 * cdef inline bint is_whitespace(const char c):
 *     return c == b' ' or c == b'\t' or c == b'\n' or c == b'\f' or c == b'\r'             # <<<<<<<<<<<<<<
 * 
 * 
 */
  switch (__pyx_v_c) {
    case ' ':
    case '\t':
    case '\n':
    case '\x0C':
    case '\r':
    __pyx_t_1 = 1;
    break;
    default:
    __pyx_t_1 = 0;
    break;
  }
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":394
 * 
 * 
 * cdef inline bint is_whitespace(const char c):             # <<<<<<<<<<<<<<
 *     return c == b' ' or c == b'\t' or c == b'\n' or c == b'\f' or c == b'\r'
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":401
 *     """Class name list of an Element DOM node."""
 * 
 *     def __cinit__(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         self.node = node
 * 
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_node)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 401, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 401, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 401, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "node", 0))) __PYX_ERR(0, 401, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList___cinit__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), __pyx_v_node);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList___cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "resiliparse_dom/parse/html.pyx":402
 * 
 *     def __cinit__(self, DOMNode node):
 *         self.node = node             # <<<<<<<<<<<<<<
 * 
 *     cdef list _create_list(self):
 */
  __Pyx_INCREF((PyObject *)__pyx_v_node);
  __Pyx_GIVEREF((PyObject *)__pyx_v_node);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->node);
  __Pyx_DECREF((PyObject *)__pyx_v_self->node);
  __pyx_v_self->node = __pyx_v_node;

  /* "resiliparse_dom/parse/html.pyx":401
 *     """Class name list of an Element DOM node."""
 * 
 *     def __cinit__(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         self.node = node
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":404
 *         self.node = node
 * 
 *     cdef list _create_list(self):             # <<<<<<<<<<<<<<
 *         if self.node is None or not self.node.node:
 *             return []
 */

static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__create_list(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  size_t __pyx_v_class_name_len;
  lxb_char_t const *__pyx_v_class_name;
  PyObject *__pyx_v_class_list = 0;
  PyObject *__pyx_v_start = 0;
  PyObject *__pyx_v_end = 0;
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  size_t __pyx_t_5;
  size_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_create_list", 1);

  /* "resiliparse_dom/parse/html.pyx":405
 * 
 *     cdef list _create_list(self):
 *         if self.node is None or not self.node.node:             # <<<<<<<<<<<<<<
 *             return []
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_self->node) == Py_None);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (!(__pyx_v_self->node->node != 0));
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":406
 *     cdef list _create_list(self):
 *         if self.node is None or not self.node.node:
 *             return []             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t class_name_len = 0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":405
 * 
 *     cdef list _create_list(self):
 *         if self.node is None or not self.node.node:             # <<<<<<<<<<<<<<
 *             return []
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":408
 *             return []
 * 
 *         cdef size_t class_name_len = 0             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:
 */
  __pyx_v_class_name_len = 0;

  /* "resiliparse_dom/parse/html.pyx":409
 * 
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)             # <<<<<<<<<<<<<<
 *         if not class_name:
 *             return []
 */
  __pyx_v_class_name = lxb_dom_element_class(((lxb_dom_element_t *)__pyx_v_self->node->node), (&__pyx_v_class_name_len));

  /* "resiliparse_dom/parse/html.pyx":410
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:             # <<<<<<<<<<<<<<
 *             return []
 * 
 */
  __pyx_t_1 = (!(__pyx_v_class_name != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":411
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:
 *             return []             # <<<<<<<<<<<<<<
 * 
 *         cdef list class_list = []
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 411, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":410
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:             # <<<<<<<<<<<<<<
 *             return []
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":413
 *             return []
 * 
 *         cdef list class_list = []             # <<<<<<<<<<<<<<
 *         cdef start = 0, end = 0
 *         cdef size_t i
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_class_list = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "resiliparse_dom/parse/html.pyx":414
 * 
 *         cdef list class_list = []
 *         cdef start = 0, end = 0             # <<<<<<<<<<<<<<
 *         cdef size_t i
 *         for i in range(class_name_len):
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_start = __pyx_int_0;
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_end = __pyx_int_0;

  /* "resiliparse_dom/parse/html.pyx":416
 *         cdef start = 0, end = 0
 *         cdef size_t i
 *         for i in range(class_name_len):             # <<<<<<<<<<<<<<
 * 
 *             if is_whitespace(class_name[start]):
 */
  __pyx_t_4 = __pyx_v_class_name_len;
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "resiliparse_dom/parse/html.pyx":418
 *         for i in range(class_name_len):
 * 
 *             if is_whitespace(class_name[start]):             # <<<<<<<<<<<<<<
 *                 start = i + 1
 *                 continue
 */
    __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_start); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 418, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_is_whitespace((__pyx_v_class_name[__pyx_t_7])); if (unlikely(__pyx_t_1 == ((int)-1) && PyErr_Occurred())) __PYX_ERR(0, 418, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":419
 * 
 *             if is_whitespace(class_name[start]):
 *                 start = i + 1             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
      __pyx_t_3 = __Pyx_PyInt_FromSize_t((__pyx_v_i + 1)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 419, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_start, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "resiliparse_dom/parse/html.pyx":420
 *             if is_whitespace(class_name[start]):
 *                 start = i + 1
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             if is_whitespace(class_name[i]) or i == class_name_len - 1:
 */
      goto __pyx_L7_continue;

      /* "resiliparse_dom/parse/html.pyx":418
 *         for i in range(class_name_len):
 * 
 *             if is_whitespace(class_name[start]):             # <<<<<<<<<<<<<<
 *                 start = i + 1
 *                 continue
 */
    }

    /* "resiliparse_dom/parse/html.pyx":422
 *                 continue
 * 
 *             if is_whitespace(class_name[i]) or i == class_name_len - 1:             # <<<<<<<<<<<<<<
 *                 end = i if i < class_name_len - 1 else i + 1
 *                 if start < end:
 */
    __pyx_t_2 = __pyx_f_15resiliparse_dom_5parse_4html_is_whitespace((__pyx_v_class_name[__pyx_v_i])); if (unlikely(__pyx_t_2 == ((int)-1) && PyErr_Occurred())) __PYX_ERR(0, 422, __pyx_L1_error)
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L11_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_i == (__pyx_v_class_name_len - 1));
    __pyx_t_1 = __pyx_t_2;
    __pyx_L11_bool_binop_done:;
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":423
 * 
 *             if is_whitespace(class_name[i]) or i == class_name_len - 1:
 *                 end = i if i < class_name_len - 1 else i + 1             # <<<<<<<<<<<<<<
 *                 if start < end:
 *                     class_list.append(class_name[start:end].decode())
 */
      __pyx_t_1 = (__pyx_v_i < (__pyx_v_class_name_len - 1));
      if (__pyx_t_1) {
        __pyx_t_8 = __Pyx_PyInt_FromSize_t(__pyx_v_i); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_3 = __pyx_t_8;
        __pyx_t_8 = 0;
      } else {
        __pyx_t_8 = __Pyx_PyInt_FromSize_t((__pyx_v_i + 1)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_3 = __pyx_t_8;
        __pyx_t_8 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_end, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "resiliparse_dom/parse/html.pyx":424
 *             if is_whitespace(class_name[i]) or i == class_name_len - 1:
 *                 end = i if i < class_name_len - 1 else i + 1
 *                 if start < end:             # <<<<<<<<<<<<<<
 *                     class_list.append(class_name[start:end].decode())
 *                     start = i + 1
 */
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_start, __pyx_v_end, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 424, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_1) {

        /* "resiliparse_dom/parse/html.pyx":425
 *                 end = i if i < class_name_len - 1 else i + 1
 *                 if start < end:
 *                     class_list.append(class_name[start:end].decode())             # <<<<<<<<<<<<<<
 *                     start = i + 1
 * 
 */
        __Pyx_INCREF(__pyx_v_start);
        __pyx_t_3 = __pyx_v_start;
        __pyx_t_1 = (__pyx_t_3 == Py_None);
        if (__pyx_t_1) {
          __pyx_t_7 = 0;
        } else {
          __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 425, __pyx_L1_error)
          __pyx_t_7 = __pyx_t_9;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_INCREF(__pyx_v_end);
        __pyx_t_3 = __pyx_v_end;
        __pyx_t_1 = (__pyx_t_3 == Py_None);
        if (__pyx_t_1) {
          __pyx_t_9 = PY_SSIZE_T_MAX;
        } else {
          __pyx_t_10 = __Pyx_PyIndex_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_10 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 425, __pyx_L1_error)
          __pyx_t_9 = __pyx_t_10;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_class_name), __pyx_t_7, __pyx_t_9, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_class_list, __pyx_t_3); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 425, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "resiliparse_dom/parse/html.pyx":426
 *                 if start < end:
 *                     class_list.append(class_name[start:end].decode())
 *                     start = i + 1             # <<<<<<<<<<<<<<
 * 
 *         return class_list
 */
        __pyx_t_3 = __Pyx_PyInt_FromSize_t((__pyx_v_i + 1)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 426, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_start, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "resiliparse_dom/parse/html.pyx":424
 *             if is_whitespace(class_name[i]) or i == class_name_len - 1:
 *                 end = i if i < class_name_len - 1 else i + 1
 *                 if start < end:             # <<<<<<<<<<<<<<
 *                     class_list.append(class_name[start:end].decode())
 *                     start = i + 1
 */
      }

      /* "resiliparse_dom/parse/html.pyx":422
 *                 continue
 * 
 *             if is_whitespace(class_name[i]) or i == class_name_len - 1:             # <<<<<<<<<<<<<<
 *                 end = i if i < class_name_len - 1 else i + 1
 *                 if start < end:
 */
    }
    __pyx_L7_continue:;
  }

  /* "resiliparse_dom/parse/html.pyx":428
 *                     start = i + 1
 * 
 *         return class_list             # <<<<<<<<<<<<<<
 * 
 *     cdef inline bytes _class_name_bytes(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_class_list);
  __pyx_r = __pyx_v_class_list;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":404
 *         self.node = node
 * 
 *     cdef list _create_list(self):             # <<<<<<<<<<<<<<
 *         if self.node is None or not self.node.node:
 *             return []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList._create_list", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_class_list);
  __Pyx_XDECREF(__pyx_v_start);
  __Pyx_XDECREF(__pyx_v_end);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":430
 *         return class_list
 * 
 *     cdef inline bytes _class_name_bytes(self):             # <<<<<<<<<<<<<<
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 */

static CYTHON_INLINE PyObject *__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__class_name_bytes(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  size_t __pyx_v_class_name_len;
  lxb_char_t const *__pyx_v_class_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_class_name_bytes", 1);

  /* "resiliparse_dom/parse/html.pyx":431
 * 
 *     cdef inline bytes _class_name_bytes(self):
 *         cdef size_t class_name_len = 0             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:
 */
  __pyx_v_class_name_len = 0;

  /* "resiliparse_dom/parse/html.pyx":432
 *     cdef inline bytes _class_name_bytes(self):
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)             # <<<<<<<<<<<<<<
 *         if not class_name:
 *             return b''
 */
  __pyx_v_class_name = lxb_dom_element_class(((lxb_dom_element_t *)__pyx_v_self->node->node), (&__pyx_v_class_name_len));

  /* "resiliparse_dom/parse/html.pyx":433
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:             # <<<<<<<<<<<<<<
 *             return b''
 *         return class_name[:class_name_len]
 */
  __pyx_t_1 = (!(__pyx_v_class_name != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":434
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:
 *             return b''             # <<<<<<<<<<<<<<
 *         return class_name[:class_name_len]
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_b_);
    __pyx_r = __pyx_kp_b_;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":433
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 *         if not class_name:             # <<<<<<<<<<<<<<
 *             return b''
 *         return class_name[:class_name_len]
 */
  }

  /* "resiliparse_dom/parse/html.pyx":435
 *         if not class_name:
 *             return b''
 *         return class_name[:class_name_len]             # <<<<<<<<<<<<<<
 * 
 *     cpdef void add(self, str class_name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBytes_FromStringAndSize(((const char*)__pyx_v_class_name) + 0, __pyx_v_class_name_len - 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":430
 *         return class_list
 * 
 *     cdef inline bytes _class_name_bytes(self):             # <<<<<<<<<<<<<<
 *         cdef size_t class_name_len = 0
 *         cdef const lxb_char_t* class_name = lxb_dom_element_class(<lxb_dom_element_t*>self.node.node, &class_name_len)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList._class_name_bytes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":437
 *         return class_name[:class_name_len]
 * 
 *     cpdef void add(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         add(self, class_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_add(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_l = 0;
  PyObject *__pyx_v_new_class_name = 0;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  char __pyx_t_8;
  char const *__pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add", 0);
  __Pyx_INCREF(__pyx_v_class_name);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_add); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 437, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_class_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":446
 *         :type class_name: str
 *         """
 *         if self.node is None or not self.node.node:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_7 = (((PyObject *)__pyx_v_self->node) == Py_None);
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!(__pyx_v_self->node->node != 0));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":447
 *         """
 *         if self.node is None or not self.node.node:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef list l = self._create_list()
 */
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":446
 *         :type class_name: str
 *         """
 *         if self.node is None or not self.node.node:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":449
 *             return
 * 
 *         cdef list l = self._create_list()             # <<<<<<<<<<<<<<
 *         if class_name in l:
 *             return
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":450
 * 
 *         cdef list l = self._create_list()
 *         if class_name in l:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_v_class_name, __pyx_v_l, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 450, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":451
 *         cdef list l = self._create_list()
 *         if class_name in l:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes new_class_name = self._class_name_bytes()
 */
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":450
 * 
 *         cdef list l = self._create_list()
 *         if class_name in l:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":453
 *             return
 * 
 *         cdef bytes new_class_name = self._class_name_bytes()             # <<<<<<<<<<<<<<
 *         if not is_whitespace(new_class_name[-1]):
 *             class_name = ' ' + class_name
 */
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__class_name_bytes(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_new_class_name = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":454
 * 
 *         cdef bytes new_class_name = self._class_name_bytes()
 *         if not is_whitespace(new_class_name[-1]):             # <<<<<<<<<<<<<<
 *             class_name = ' ' + class_name
 *         new_class_name = new_class_name + class_name.encode()
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_new_class_name, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyInt_As_char(__pyx_t_1); if (unlikely((__pyx_t_8 == (char)-1) && PyErr_Occurred())) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __pyx_f_15resiliparse_dom_5parse_4html_is_whitespace(__pyx_t_8); if (unlikely(__pyx_t_6 == ((int)-1) && PyErr_Occurred())) __PYX_ERR(0, 454, __pyx_L1_error)
  __pyx_t_7 = (!__pyx_t_6);
  if (__pyx_t_7) {

    /* "resiliparse_dom/parse/html.pyx":455
 *         cdef bytes new_class_name = self._class_name_bytes()
 *         if not is_whitespace(new_class_name[-1]):
 *             class_name = ' ' + class_name             # <<<<<<<<<<<<<<
 *         new_class_name = new_class_name + class_name.encode()
 *         # noinspection PyProtectedMember
 */
    __pyx_t_1 = __Pyx_PyUnicode_ConcatSafe(__pyx_kp_u__5, __pyx_v_class_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_class_name, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "resiliparse_dom/parse/html.pyx":454
 * 
 *         cdef bytes new_class_name = self._class_name_bytes()
 *         if not is_whitespace(new_class_name[-1]):             # <<<<<<<<<<<<<<
 *             class_name = ' ' + class_name
 *         new_class_name = new_class_name + class_name.encode()
 */
  }

  /* "resiliparse_dom/parse/html.pyx":456
 *         if not is_whitespace(new_class_name[-1]):
 *             class_name = ' ' + class_name
 *         new_class_name = new_class_name + class_name.encode()             # <<<<<<<<<<<<<<
 *         # noinspection PyProtectedMember
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>new_class_name, len(new_class_name))
 */
  if (unlikely(__pyx_v_class_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 456, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_class_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Add(__pyx_v_new_class_name, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyBytes_CheckExact(__pyx_t_2)) || __Pyx_RaiseUnexpectedTypeError("bytes", __pyx_t_2))) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_DECREF_SET(__pyx_v_new_class_name, ((PyObject*)__pyx_t_2));
  __pyx_t_2 = 0;

  /* "resiliparse_dom/parse/html.pyx":458
 *         new_class_name = new_class_name + class_name.encode()
 *         # noinspection PyProtectedMember
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>new_class_name, len(new_class_name))             # <<<<<<<<<<<<<<
 * 
 *     cpdef void remove(self, str class_name):
 */
  __pyx_t_9 = __Pyx_PyBytes_AsString(__pyx_v_new_class_name); if (unlikely((!__pyx_t_9) && PyErr_Occurred())) __PYX_ERR(0, 458, __pyx_L1_error)
  __pyx_t_10 = __Pyx_PyBytes_GET_SIZE(__pyx_v_new_class_name); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 458, __pyx_L1_error)
  __pyx_t_7 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->node->__pyx_vtab)->_setattr_impl(__pyx_v_self->node, ((char const *)((char const *)"class")), 5, ((char const *)__pyx_t_9), __pyx_t_10); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 458, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":437
 *         return class_name[:class_name_len]
 * 
 *     cpdef void add(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         add(self, class_name)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_new_class_name);
  __Pyx_XDECREF(__pyx_v_class_name);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_2add, "\n        add(self, class_name)\n        \n        Add new class name to Element node if not already present.\n        \n        :param class_name: new class name\n        :type class_name: str\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add = {"add", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_2add};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_class_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_class_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_class_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 437, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "add") < 0)) __PYX_ERR(0, 437, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_class_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 437, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_class_name), (&PyUnicode_Type), 1, "class_name", 1))) __PYX_ERR(0, 437, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_2add(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), __pyx_v_class_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_2add(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_add(__pyx_v_self, __pyx_v_class_name, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 437, __pyx_L1_error)
  __pyx_t_1 = __Pyx_void_to_None(NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":460
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>new_class_name, len(new_class_name))
 * 
 *     cpdef void remove(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         remove(self, class_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static void __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_remove(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_l = 0;
  PyObject *__pyx_v_val = 0;
  PyObject *__pyx_7genexpr__pyx_v_c = NULL;
  PyObject *__pyx_8genexpr1__pyx_v_c = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  char const *__pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_class_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":469
 *         :type class_name: str
 *         """
 *         if self.node is None or not self.node.node:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_7 = (((PyObject *)__pyx_v_self->node) == Py_None);
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!(__pyx_v_self->node->node != 0));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":470
 *         """
 *         if self.node is None or not self.node.node:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef list l = [c for c in self._create_list() if c != class_name]
 */
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":469
 *         :type class_name: str
 *         """
 *         if self.node is None or not self.node.node:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":472
 *             return
 * 
 *         cdef list l = [c for c in self._create_list() if c != class_name]             # <<<<<<<<<<<<<<
 *         # noinspection PyProtectedMember
 *         cdef bytes val = b' '.join([c.encode() for c in l])
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 472, __pyx_L8_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 472, __pyx_L8_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__pyx_t_2 == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 472, __pyx_L8_error)
    }
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3);
    __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      {
        Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_3);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 472, __pyx_L8_error)
        #endif
        if (__pyx_t_8 >= __pyx_temp) break;
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 472, __pyx_L8_error)
      #else
      __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 472, __pyx_L8_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_c, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_7genexpr__pyx_v_c, __pyx_v_class_name, Py_NE)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 472, __pyx_L8_error)
      if (__pyx_t_6) {
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_7genexpr__pyx_v_c))) __PYX_ERR(0, 472, __pyx_L8_error)
      }
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_c); __pyx_7genexpr__pyx_v_c = 0;
    goto __pyx_L13_exit_scope;
    __pyx_L8_error:;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_c); __pyx_7genexpr__pyx_v_c = 0;
    goto __pyx_L1_error;
    __pyx_L13_exit_scope:;
  } /* exit inner scope */
  __pyx_v_l = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":474
 *         cdef list l = [c for c in self._create_list() if c != class_name]
 *         # noinspection PyProtectedMember
 *         cdef bytes val = b' '.join([c.encode() for c in l])             # <<<<<<<<<<<<<<
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>val, len(val))
 * 
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L16_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __pyx_v_l; __Pyx_INCREF(__pyx_t_3);
    __pyx_t_8 = 0;
    for (;;) {
      {
        Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_3);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 474, __pyx_L16_error)
        #endif
        if (__pyx_t_8 >= __pyx_temp) break;
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 474, __pyx_L16_error)
      #else
      __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 474, __pyx_L16_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_c, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_8genexpr1__pyx_v_c, __pyx_n_s_encode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 474, __pyx_L16_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = NULL;
      __pyx_t_5 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_5 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_9, NULL};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 474, __pyx_L16_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 474, __pyx_L16_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_c); __pyx_8genexpr1__pyx_v_c = 0;
    goto __pyx_L20_exit_scope;
    __pyx_L16_error:;
    __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_c); __pyx_8genexpr1__pyx_v_c = 0;
    goto __pyx_L1_error;
    __pyx_L20_exit_scope:;
  } /* exit inner scope */
  __pyx_t_3 = __Pyx_PyBytes_Join(__pyx_kp_b__5, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyBytes_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None) || __Pyx_RaiseUnexpectedTypeError("bytes", __pyx_t_3))) __PYX_ERR(0, 474, __pyx_L1_error)
  __pyx_v_val = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "resiliparse_dom/parse/html.pyx":475
 *         # noinspection PyProtectedMember
 *         cdef bytes val = b' '.join([c.encode() for c in l])
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>val, len(val))             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, item):
 */
  if (unlikely(__pyx_v_val == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 475, __pyx_L1_error)
  }
  __pyx_t_10 = __Pyx_PyBytes_AsString(__pyx_v_val); if (unlikely((!__pyx_t_10) && PyErr_Occurred())) __PYX_ERR(0, 475, __pyx_L1_error)
  if (unlikely(__pyx_v_val == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 475, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_GET_SIZE(__pyx_v_val); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 475, __pyx_L1_error)
  __pyx_t_6 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->node->__pyx_vtab)->_setattr_impl(__pyx_v_self->node, ((char const *)((char const *)"class")), 5, ((char const *)__pyx_t_10), __pyx_t_8); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 475, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":460
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>new_class_name, len(new_class_name))
 * 
 *     cpdef void remove(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         remove(self, class_name)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.remove", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_val);
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_c);
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_c);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_4remove, "\n        remove(self, class_name)\n        \n        Remove a class name from this Element node.\n        \n        :param class_name: new class name\n        :type class_name: str\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove = {"remove", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_4remove};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_class_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_class_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_class_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "remove") < 0)) __PYX_ERR(0, 460, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_class_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("remove", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 460, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.remove", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_class_name), (&PyUnicode_Type), 1, "class_name", 1))) __PYX_ERR(0, 460, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_4remove(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), __pyx_v_class_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_4remove(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_class_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_remove(__pyx_v_self, __pyx_v_class_name, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L1_error)
  __pyx_t_1 = __Pyx_void_to_None(NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.remove", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":477
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>val, len(val))
 * 
 *     def __contains__(self, item):             # <<<<<<<<<<<<<<
 *         """
 *         __contains__(self, item):
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_7__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__, "\n        __contains__(self, item):\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__;
#endif
static int __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_7__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_item) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 1);

  /* "resiliparse_dom/parse/html.pyx":481
 *         __contains__(self, item):
 *         """
 *         return item in self._create_list()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, item):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_v_item, __pyx_t_1, Py_EQ)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":477
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>val, len(val))
 * 
 *     def __contains__(self, item):             # <<<<<<<<<<<<<<
 *         """
 *         __contains__(self, item):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":483
 *         return item in self._create_list()
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         """
 *         __contains__(self, item)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_9__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__, "\n        __contains__(self, item)\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_9__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 1);

  /* "resiliparse_dom/parse/html.pyx":487
 *         __contains__(self, item)
 *         """
 *         return self._create_list()[item]             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 487, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_item); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":483
 *         return item in self._create_list()
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         """
 *         __contains__(self, item)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":489
 *         return self._create_list()[item]
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         """
 *         __eq__(self, other)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_11__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__, "\n        __eq__(self, other)\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_11__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 1);

  /* "resiliparse_dom/parse/html.pyx":493
 *         __eq__(self, other)
 *         """
 *         return other == self._create_list()             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_other, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":489
 *         return self._create_list()[item]
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         """
 *         __eq__(self, other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":495
 *         return other == self._create_list()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __len__(self)
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_13__len__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__, "\n        __len__(self)\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__;
#endif
static Py_ssize_t __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_13__len__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__len__", 1);

  /* "resiliparse_dom/parse/html.pyx":499
 *         __len__(self)
 *         """
 *         return len(self._create_list())             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 499, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyList_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":495
 *         return other == self._create_list()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __len__(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":501
 *         return len(self._create_list())
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_15__iter__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__, "\n        __iter__(self)\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_15__iter__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 1);

  /* "resiliparse_dom/parse/html.pyx":505
 *         __iter__(self)
 *         """
 *         return iter(self._create_list())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":501
 *         return len(self._create_list())
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":507
 *         return iter(self._create_list())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __repr__(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__, "\n        __repr__(self)\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 1);

  /* "resiliparse_dom/parse/html.pyx":511
 *         __repr__(self)
 *         """
 *         return repr(self._create_list())             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 511, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Repr(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 511, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":507
 *         return iter(self._create_list())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __repr__(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":513
 *         return repr(self._create_list())
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __str__(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_19__str__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__, "\n        __str__(self)\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_19__str__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 1);

  /* "resiliparse_dom/parse/html.pyx":517
 *         __str__(self)
 *         """
 *         return str(self._create_list())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self->__pyx_vtab)->_create_list(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":513
 *         return repr(self._create_list())
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __str__(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_21__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_21__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_21__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_21__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_20__reduce_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_20__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_23__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_23__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_23__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_23__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_22__setstate_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_19DOMElementClassList_22__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMElementClassList.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":531
 *     """
 * 
 *     def __cinit__(self, HTMLTree tree):             # <<<<<<<<<<<<<<
 *         self.tree = tree
 *         self.node = NULL
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tree,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tree)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 531, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 531, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tree), __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, 1, "tree", 0))) __PYX_ERR(0, 531, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode___cinit__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_tree);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode___cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "resiliparse_dom/parse/html.pyx":532
 * 
 *     def __cinit__(self, HTMLTree tree):
 *         self.tree = tree             # <<<<<<<<<<<<<<
 *         self.node = NULL
 *         self.class_list_singleton = None
 */
  __Pyx_INCREF((PyObject *)__pyx_v_tree);
  __Pyx_GIVEREF((PyObject *)__pyx_v_tree);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->tree);
  __Pyx_DECREF((PyObject *)__pyx_v_self->tree);
  __pyx_v_self->tree = __pyx_v_tree;

  /* "resiliparse_dom/parse/html.pyx":533
 *     def __cinit__(self, HTMLTree tree):
 *         self.tree = tree
 *         self.node = NULL             # <<<<<<<<<<<<<<
 *         self.class_list_singleton = None
 * 
 */
  __pyx_v_self->node = NULL;

  /* "resiliparse_dom/parse/html.pyx":534
 *         self.tree = tree
 *         self.node = NULL
 *         self.class_list_singleton = None             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->class_list_singleton);
  __Pyx_DECREF((PyObject *)__pyx_v_self->class_list_singleton);
  __pyx_v_self->class_list_singleton = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)Py_None);

  /* "resiliparse_dom/parse/html.pyx":531
 *     """
 * 
 *     def __cinit__(self, HTMLTree tree):             # <<<<<<<<<<<<<<
 *         self.tree = tree
 *         self.node = NULL
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":536
 *         self.class_list_singleton = None
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if not self.node or self.tree is None:
 *             return
 */

/* Python wrapper */
static void __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2__dealloc__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2__dealloc__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  int __pyx_t_1;
  int __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":537
 * 
 *     def __dealloc__(self):
 *         if not self.node or self.tree is None:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_2 = (!(__pyx_v_self->node != 0));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":538
 *     def __dealloc__(self):
 *         if not self.node or self.tree is None:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         self.node.user = NULL
 */
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":537
 * 
 *     def __dealloc__(self):
 *         if not self.node or self.tree is None:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":540
 *             return
 * 
 *         self.node.user = NULL             # <<<<<<<<<<<<<<
 * 
 *         # Cannot be done until https://github.com/lexbor/lexbor/issues/132 is fixed
 */
  __pyx_v_self->node->user = NULL;

  /* "resiliparse_dom/parse/html.pyx":546
 *         # if not self.node.parent and self.node != <lxb_dom_node_t*>self.node.owner_document:
 *         #     lxb_dom_node_destroy_deep(self.node)
 *         self.node = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_v_self->node = NULL;

  /* "resiliparse_dom/parse/html.pyx":536
 *         self.class_list_singleton = None
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if not self.node or self.tree is None:
 *             return
 */

  /* function exit code */
  __pyx_L0:;
}
static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_6generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "resiliparse_dom/parse/html.pyx":548
 *         self.node = NULL
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5__iter__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__, "\n        __iter__(self)\n\n        Traverse the DOM tree in pre-order starting at the current node.\n\n        :rtype: t.Iterable[DOMNode]\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5__iter__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);
  __pyx_cur_scope = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 548, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_6generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_iter, __pyx_n_s_DOMNode___iter, __pyx_n_s_resiliparse_dom_parse_html); if (unlikely(!gen)) __PYX_ERR(0, 548, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_6generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *__pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  lxb_dom_node_t *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L5_resume_from_yield;
    case 2: goto __pyx_L9_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 548, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":556
 *         :rtype: t.Iterable[DOMNode]
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_cur_scope->__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":557
 *         """
 *         if not check_node(self):
 *             return             # <<<<<<<<<<<<<<
 * 
 *         yield self
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = NULL;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":556
 *         :rtype: t.Iterable[DOMNode]
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":559
 *             return
 * 
 *         yield self             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_node_t* node = self.node
 *         while True:
 */
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  /* return from generator, yielding value */
  __pyx_generator->resume_label = 1;
  return __pyx_r;
  __pyx_L5_resume_from_yield:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 559, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":560
 * 
 *         yield self
 *         cdef lxb_dom_node_t* node = self.node             # <<<<<<<<<<<<<<
 *         while True:
 *             node = next_node(self.node, node)
 */
  __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->node;
  __pyx_cur_scope->__pyx_v_node = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":561
 *         yield self
 *         cdef lxb_dom_node_t* node = self.node
 *         while True:             # <<<<<<<<<<<<<<
 *             node = next_node(self.node, node)
 *             if not node:
 */
  while (1) {

    /* "resiliparse_dom/parse/html.pyx":562
 *         cdef lxb_dom_node_t* node = self.node
 *         while True:
 *             node = next_node(self.node, node)             # <<<<<<<<<<<<<<
 *             if not node:
 *                 return
 */
    __pyx_cur_scope->__pyx_v_node = __pyx_f_15resiliparse_dom_5parse_4html_next_node(__pyx_cur_scope->__pyx_v_self->node, __pyx_cur_scope->__pyx_v_node, NULL);

    /* "resiliparse_dom/parse/html.pyx":563
 *         while True:
 *             node = next_node(self.node, node)
 *             if not node:             # <<<<<<<<<<<<<<
 *                 return
 *             yield _create_dom_node(self.tree, node)
 */
    __pyx_t_1 = (!(__pyx_cur_scope->__pyx_v_node != 0));
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":564
 *             node = next_node(self.node, node)
 *             if not node:
 *                 return             # <<<<<<<<<<<<<<
 *             yield _create_dom_node(self.tree, node)
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_r = NULL;
      goto __pyx_L0;

      /* "resiliparse_dom/parse/html.pyx":563
 *         while True:
 *             node = next_node(self.node, node)
 *             if not node:             # <<<<<<<<<<<<<<
 *                 return
 *             yield _create_dom_node(self.tree, node)
 */
    }

    /* "resiliparse_dom/parse/html.pyx":565
 *             if not node:
 *                 return
 *             yield _create_dom_node(self.tree, node)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    __pyx_t_3 = ((PyObject *)__pyx_cur_scope->__pyx_v_self->tree);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_3), __pyx_cur_scope->__pyx_v_node)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 565, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 2;
    return __pyx_r;
    __pyx_L9_resume_from_yield:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 565, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "resiliparse_dom/parse/html.pyx":548
 *         self.node = NULL
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":567
 *             yield _create_dom_node(self.tree, node)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def type(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4type___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4type___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":574
 *         :type: NodeType
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return <NodeType>self.node.type
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":575
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         return <NodeType>self.node.type
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":574
 *         :type: NodeType
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return <NodeType>self.node.type
 */
  }

  /* "resiliparse_dom/parse/html.pyx":576
 *         if not check_node(self):
 *             return None
 *         return <NodeType>self.node.type             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_Enum_695fc4__15resiliparse_dom_5parse_4html_enum__dunderpyx__etc_to_py(((enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType)__pyx_v_self->node->type)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":567
 *             yield _create_dom_node(self.tree, node)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def type(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":578
 *         return <NodeType>self.node.type
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_3tag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_3tag_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_3tag___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_3tag___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  size_t __pyx_v_name_len;
  lxb_char_t const *__pyx_v_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":585
 *         :type: str or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":586
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t name_len = 0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":585
 *         :type: str or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":588
 *             return None
 * 
 *         cdef size_t name_len = 0             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* name = lxb_dom_node_name(self.node, &name_len)
 *         if not name:
 */
  __pyx_v_name_len = 0;

  /* "resiliparse_dom/parse/html.pyx":589
 * 
 *         cdef size_t name_len = 0
 *         cdef const lxb_char_t* name = lxb_dom_node_name(self.node, &name_len)             # <<<<<<<<<<<<<<
 *         if not name:
 *             return None
 */
  __pyx_v_name = lxb_dom_node_name(__pyx_v_self->node, (&__pyx_v_name_len));

  /* "resiliparse_dom/parse/html.pyx":590
 *         cdef size_t name_len = 0
 *         cdef const lxb_char_t* name = lxb_dom_node_name(self.node, &name_len)
 *         if not name:             # <<<<<<<<<<<<<<
 *             return None
 *         return name[:name_len].decode().lower()
 */
  __pyx_t_1 = (!(__pyx_v_name != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":591
 *         cdef const lxb_char_t* name = lxb_dom_node_name(self.node, &name_len)
 *         if not name:
 *             return None             # <<<<<<<<<<<<<<
 *         return name[:name_len].decode().lower()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":590
 *         cdef size_t name_len = 0
 *         cdef const lxb_char_t* name = lxb_dom_node_name(self.node, &name_len)
 *         if not name:             # <<<<<<<<<<<<<<
 *             return None
 *         return name[:name_len].decode().lower()
 */
  }

  /* "resiliparse_dom/parse/html.pyx":592
 *         if not name:
 *             return None
 *         return name[:name_len].decode().lower()             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_name), 0, __pyx_v_name_len, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_lower); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":578
 *         return <NodeType>self.node.type
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.tag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":595
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def first_child(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_11first_child_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_11first_child_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11first_child___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11first_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":602
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.first_child)
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":603
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, self.node.first_child)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":602
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.first_child)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":604
 *         if not check_node(self):
 *             return None
 *         return _create_dom_node(self.tree, self.node.first_child)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_2), __pyx_v_self->node->first_child)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":595
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def first_child(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.first_child.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":607
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def last_child(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10last_child_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10last_child_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10last_child___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10last_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":614
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.last_child)
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":615
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, self.node.last_child)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":614
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.last_child)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":616
 *         if not check_node(self):
 *             return None
 *         return _create_dom_node(self.tree, self.node.last_child)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_2), __pyx_v_self->node->last_child)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":607
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def last_child(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.last_child.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":619
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def first_element_child(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_19first_element_child_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_19first_element_child_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_19first_element_child___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_19first_element_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_node_t *__pyx_v_child_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lxb_dom_node_t *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":626
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.first_child
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":627
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_node_t* child_node = self.node.first_child
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":626
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.first_child
 */
  }

  /* "resiliparse_dom/parse/html.pyx":628
 *         if not check_node(self):
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.first_child             # <<<<<<<<<<<<<<
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             child_node = child_node.next
 */
  __pyx_t_2 = __pyx_v_self->node->first_child;
  __pyx_v_child_node = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":629
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.first_child
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             child_node = child_node.next
 *         return _create_dom_node(self.tree, child_node)
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_child_node != 0);
    if (__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_child_node->type != LXB_DOM_NODE_TYPE_ELEMENT);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L6_bool_binop_done:;
    if (!__pyx_t_1) break;

    /* "resiliparse_dom/parse/html.pyx":630
 *         cdef lxb_dom_node_t* child_node = self.node.first_child
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             child_node = child_node.next             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, child_node)
 * 
 */
    __pyx_t_2 = __pyx_v_child_node->next;
    __pyx_v_child_node = __pyx_t_2;
  }

  /* "resiliparse_dom/parse/html.pyx":631
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             child_node = child_node.next
 *         return _create_dom_node(self.tree, child_node)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_5 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_4), __pyx_v_child_node)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":619
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def first_element_child(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.first_element_child.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":634
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def last_element_child(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18last_element_child_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18last_element_child_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_18last_element_child___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_18last_element_child___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_node_t *__pyx_v_child_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lxb_dom_node_t *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":641
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.last_child
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":642
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_node_t* child_node = self.node.last_child
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":641
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.last_child
 */
  }

  /* "resiliparse_dom/parse/html.pyx":643
 *         if not check_node(self):
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.last_child             # <<<<<<<<<<<<<<
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             child_node = child_node.prev
 */
  __pyx_t_2 = __pyx_v_self->node->last_child;
  __pyx_v_child_node = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":644
 *             return None
 *         cdef lxb_dom_node_t* child_node = self.node.last_child
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             child_node = child_node.prev
 *         return _create_dom_node(self.tree, child_node)
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_child_node != 0);
    if (__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_child_node->type != LXB_DOM_NODE_TYPE_ELEMENT);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L6_bool_binop_done:;
    if (!__pyx_t_1) break;

    /* "resiliparse_dom/parse/html.pyx":645
 *         cdef lxb_dom_node_t* child_node = self.node.last_child
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             child_node = child_node.prev             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, child_node)
 * 
 */
    __pyx_t_2 = __pyx_v_child_node->prev;
    __pyx_v_child_node = __pyx_t_2;
  }

  /* "resiliparse_dom/parse/html.pyx":646
 *         while child_node and child_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             child_node = child_node.prev
 *         return _create_dom_node(self.tree, child_node)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_5 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_4), __pyx_v_child_node)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":634
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def last_element_child(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.last_element_child.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":648
 *         return _create_dom_node(self.tree, child_node)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def child_nodes(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_11child_nodes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_11child_nodes_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11child_nodes___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11child_nodes___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_node_t *__pyx_v_child;
  PyObject *__pyx_v_child_nodes = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lxb_dom_node_t *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":655
 *         :type: t.List[DOMNode]
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":656
 *         """
 *         if not check_node(self):
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_node_t* child = self.node.first_child
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":655
 *         :type: t.List[DOMNode]
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":658
 *             return
 * 
 *         cdef lxb_dom_node_t* child = self.node.first_child             # <<<<<<<<<<<<<<
 *         child_nodes = []
 *         while child:
 */
  __pyx_t_2 = __pyx_v_self->node->first_child;
  __pyx_v_child = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":659
 * 
 *         cdef lxb_dom_node_t* child = self.node.first_child
 *         child_nodes = []             # <<<<<<<<<<<<<<
 *         while child:
 *             child_nodes.append(_create_dom_node(self.tree, child))
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_child_nodes = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "resiliparse_dom/parse/html.pyx":660
 *         cdef lxb_dom_node_t* child = self.node.first_child
 *         child_nodes = []
 *         while child:             # <<<<<<<<<<<<<<
 *             child_nodes.append(_create_dom_node(self.tree, child))
 *             child = child.next
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_child != 0);
    if (!__pyx_t_1) break;

    /* "resiliparse_dom/parse/html.pyx":661
 *         child_nodes = []
 *         while child:
 *             child_nodes.append(_create_dom_node(self.tree, child))             # <<<<<<<<<<<<<<
 *             child = child.next
 *         return child_nodes
 */
    __pyx_t_3 = ((PyObject *)__pyx_v_self->tree);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_3), __pyx_v_child)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 661, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_child_nodes, __pyx_t_4); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 661, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "resiliparse_dom/parse/html.pyx":662
 *         while child:
 *             child_nodes.append(_create_dom_node(self.tree, child))
 *             child = child.next             # <<<<<<<<<<<<<<
 *         return child_nodes
 * 
 */
    __pyx_t_2 = __pyx_v_child->next;
    __pyx_v_child = __pyx_t_2;
  }

  /* "resiliparse_dom/parse/html.pyx":663
 *             child_nodes.append(_create_dom_node(self.tree, child))
 *             child = child.next
 *         return child_nodes             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_child_nodes);
  __pyx_r = __pyx_v_child_nodes;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":648
 *         return _create_dom_node(self.tree, child_node)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def child_nodes(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.child_nodes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_child_nodes);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":665
 *         return child_nodes
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def parent(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_6parent_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_6parent_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_6parent___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_6parent___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":672
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.parent)
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":673
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, self.node.parent)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":672
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.parent)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":674
 *         if not check_node(self):
 *             return None
 *         return _create_dom_node(self.tree, self.node.parent)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_2), __pyx_v_self->node->parent)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 674, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":665
 *         return child_nodes
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def parent(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.parent.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":677
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def next(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4next_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4next_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4next___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4next___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":684
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.next)
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":685
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, self.node.next)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":684
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.next)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":686
 *         if not check_node(self):
 *             return None
 *         return _create_dom_node(self.tree, self.node.next)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_2), __pyx_v_self->node->next)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":677
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def next(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.next.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":689
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def prev(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4prev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4prev_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4prev___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4prev___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":696
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.prev)
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":697
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, self.node.prev)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":696
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, self.node.prev)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":698
 *         if not check_node(self):
 *             return None
 *         return _create_dom_node(self.tree, self.node.prev)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_2), __pyx_v_self->node->prev)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":689
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def prev(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.prev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":701
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def next_element(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12next_element_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12next_element_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_12next_element___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_12next_element___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_node_t *__pyx_v_next_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lxb_dom_node_t *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":708
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":709
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_node_t* next_node = self.node.next
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":708
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":711
 *             return None
 * 
 *         cdef lxb_dom_node_t* next_node = self.node.next             # <<<<<<<<<<<<<<
 *         while next_node and next_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             next_node = next_node.next
 */
  __pyx_t_2 = __pyx_v_self->node->next;
  __pyx_v_next_node = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":712
 * 
 *         cdef lxb_dom_node_t* next_node = self.node.next
 *         while next_node and next_node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             next_node = next_node.next
 *         return _create_dom_node(self.tree, next_node)
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_next_node != 0);
    if (__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_next_node->type != LXB_DOM_NODE_TYPE_ELEMENT);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L6_bool_binop_done:;
    if (!__pyx_t_1) break;

    /* "resiliparse_dom/parse/html.pyx":713
 *         cdef lxb_dom_node_t* next_node = self.node.next
 *         while next_node and next_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             next_node = next_node.next             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, next_node)
 * 
 */
    __pyx_t_2 = __pyx_v_next_node->next;
    __pyx_v_next_node = __pyx_t_2;
  }

  /* "resiliparse_dom/parse/html.pyx":714
 *         while next_node and next_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             next_node = next_node.next
 *         return _create_dom_node(self.tree, next_node)             # <<<<<<<<<<<<<<
 * 
 *     # noinspection DuplicatedCode
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_5 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_4), __pyx_v_next_node)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":701
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def next_element(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.next_element.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":717
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def prev_element(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12prev_element_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12prev_element_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_12prev_element___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_12prev_element___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_node_t *__pyx_v_prev_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lxb_dom_node_t *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":724
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":725
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_node_t* prev_node = self.node.prev
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":724
 *         :type: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":727
 *             return None
 * 
 *         cdef lxb_dom_node_t* prev_node = self.node.prev             # <<<<<<<<<<<<<<
 *         while prev_node and prev_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             prev_node = prev_node.prev
 */
  __pyx_t_2 = __pyx_v_self->node->prev;
  __pyx_v_prev_node = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":728
 * 
 *         cdef lxb_dom_node_t* prev_node = self.node.prev
 *         while prev_node and prev_node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             prev_node = prev_node.prev
 *         return _create_dom_node(self.tree, prev_node)
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_prev_node != 0);
    if (__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_prev_node->type != LXB_DOM_NODE_TYPE_ELEMENT);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L6_bool_binop_done:;
    if (!__pyx_t_1) break;

    /* "resiliparse_dom/parse/html.pyx":729
 *         cdef lxb_dom_node_t* prev_node = self.node.prev
 *         while prev_node and prev_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             prev_node = prev_node.prev             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, prev_node)
 * 
 */
    __pyx_t_2 = __pyx_v_prev_node->prev;
    __pyx_v_prev_node = __pyx_t_2;
  }

  /* "resiliparse_dom/parse/html.pyx":730
 *         while prev_node and prev_node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             prev_node = prev_node.prev
 *         return _create_dom_node(self.tree, prev_node)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_5 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_4), __pyx_v_prev_node)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":717
 * 
 *     # noinspection DuplicatedCode
 *     @property             # <<<<<<<<<<<<<<
 *     def prev_element(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.prev_element.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":732
 *         return _create_dom_node(self.tree, prev_node)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def value(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5value_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5value_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_5value___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_5value___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_character_data_t *__pyx_v_cd;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":739
 *         :type: str or None
 *         """
 *         if self.node.type not in [LXB_DOM_NODE_TYPE_TEXT,             # <<<<<<<<<<<<<<
 *                                   LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION,
 *                                   LXB_DOM_NODE_TYPE_COMMENT]:
 */
  switch (__pyx_v_self->node->type) {
    case LXB_DOM_NODE_TYPE_TEXT:
    case LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION:

    /* "resiliparse_dom/parse/html.pyx":740
 *         """
 *         if self.node.type not in [LXB_DOM_NODE_TYPE_TEXT,
 *                                   LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION,             # <<<<<<<<<<<<<<
 *                                   LXB_DOM_NODE_TYPE_COMMENT]:
 *             return None
 */
    case LXB_DOM_NODE_TYPE_COMMENT:

    /* "resiliparse_dom/parse/html.pyx":739
 *         :type: str or None
 *         """
 *         if self.node.type not in [LXB_DOM_NODE_TYPE_TEXT,             # <<<<<<<<<<<<<<
 *                                   LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION,
 *                                   LXB_DOM_NODE_TYPE_COMMENT]:
 */
    __pyx_t_1 = 0;
    break;
    default:
    __pyx_t_1 = 1;
    break;
  }
  __pyx_t_2 = __pyx_t_1;
  if (__pyx_t_2) {

    /* "resiliparse_dom/parse/html.pyx":742
 *                                   LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION,
 *                                   LXB_DOM_NODE_TYPE_COMMENT]:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_character_data_t* cd = <lxb_dom_character_data_t*>self.node
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":739
 *         :type: str or None
 *         """
 *         if self.node.type not in [LXB_DOM_NODE_TYPE_TEXT,             # <<<<<<<<<<<<<<
 *                                   LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION,
 *                                   LXB_DOM_NODE_TYPE_COMMENT]:
 */
  }

  /* "resiliparse_dom/parse/html.pyx":744
 *             return None
 * 
 *         cdef lxb_dom_character_data_t* cd = <lxb_dom_character_data_t*>self.node             # <<<<<<<<<<<<<<
 *         return cd.data.data[:cd.data.length].decode()
 * 
 */
  __pyx_v_cd = ((lxb_dom_character_data_t *)__pyx_v_self->node);

  /* "resiliparse_dom/parse/html.pyx":745
 * 
 *         cdef lxb_dom_character_data_t* cd = <lxb_dom_character_data_t*>self.node
 *         return cd.data.data[:cd.data.length].decode()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_cd->data.data), 0, __pyx_v_cd->data.length, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":732
 *         return _create_dom_node(self.tree, prev_node)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def value(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.value.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":747
 *         return cd.data.data[:cd.data.length].decode()
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def text(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4text_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4text_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4text___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4text___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":756
 *         :type: str
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":757
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         return get_node_text(self.node).decode()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":756
 *         :type: str
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":759
 *             return None
 * 
 *         return get_node_text(self.node).decode()             # <<<<<<<<<<<<<<
 * 
 *     @text.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_decode_cpp_string(__pyx_f_15resiliparse_dom_5parse_4html_get_node_text(__pyx_v_self->node), 0, PY_SSIZE_T_MAX, NULL, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":747
 *         return cd.data.data[:cd.data.length].decode()
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def text(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.text.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":761
 *         return get_node_text(self.node).decode()
 * 
 *     @text.setter             # <<<<<<<<<<<<<<
 *     def text(self, str text):
 *         if not check_node(self):
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4text_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_text); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4text_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_text) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_text), (&PyUnicode_Type), 1, "text", 1))) __PYX_ERR(0, 762, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4text_2__set__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_text));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4text_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_text) {
  PyObject *__pyx_v_text_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  lxb_char_t const *__pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "resiliparse_dom/parse/html.pyx":763
 *     @text.setter
 *     def text(self, str text):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to set text contents of uninitialized DOM node')
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":764
 *     def text(self, str text):
 *         if not check_node(self):
 *             raise RuntimeError('Trying to set text contents of uninitialized DOM node')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes text_bytes = text.encode()
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 764, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 764, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":763
 *     @text.setter
 *     def text(self, str text):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to set text contents of uninitialized DOM node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":766
 *             raise RuntimeError('Trying to set text contents of uninitialized DOM node')
 * 
 *         cdef bytes text_bytes = text.encode()             # <<<<<<<<<<<<<<
 *         lxb_dom_node_text_content_set(self.node, <const lxb_char_t*>text_bytes, len(text_bytes))
 * 
 */
  if (unlikely(__pyx_v_text == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 766, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsEncodedString(__pyx_v_text, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_text_bytes = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "resiliparse_dom/parse/html.pyx":767
 * 
 *         cdef bytes text_bytes = text.encode()
 *         lxb_dom_node_text_content_set(self.node, <const lxb_char_t*>text_bytes, len(text_bytes))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  if (unlikely(__pyx_v_text_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 767, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_AsUString(__pyx_v_text_bytes); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 767, __pyx_L1_error)
  if (unlikely(__pyx_v_text_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 767, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyBytes_GET_SIZE(__pyx_v_text_bytes); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 767, __pyx_L1_error)
  (void)(lxb_dom_node_text_content_set(__pyx_v_self->node, ((lxb_char_t const *)__pyx_t_3), __pyx_t_4));

  /* "resiliparse_dom/parse/html.pyx":761
 *         return get_node_text(self.node).decode()
 * 
 *     @text.setter             # <<<<<<<<<<<<<<
 *     def text(self, str text):
 *         if not check_node(self):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.text.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_text_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":769
 *         lxb_dom_node_text_content_set(self.node, <const lxb_char_t*>text_bytes, len(text_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def html(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4html_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4html_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4html___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4html___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lexbor_str_t *__pyx_v_html_str;
  PyObject *__pyx_v_py_text = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":778
 *         :type: str
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":779
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef lexbor_str_t* html_str = lexbor_str_create()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":778
 *         :type: str
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":781
 *             return None
 * 
 *         cdef lexbor_str_t* html_str = lexbor_str_create()             # <<<<<<<<<<<<<<
 *         lxb_html_serialize_tree_str(self.node, html_str)
 *         cdef str py_text = html_str.data[:html_str.length].decode()
 */
  __pyx_v_html_str = lexbor_str_create();

  /* "resiliparse_dom/parse/html.pyx":782
 * 
 *         cdef lexbor_str_t* html_str = lexbor_str_create()
 *         lxb_html_serialize_tree_str(self.node, html_str)             # <<<<<<<<<<<<<<
 *         cdef str py_text = html_str.data[:html_str.length].decode()
 *         lexbor_str_destroy(html_str, self.node.owner_document.text, True)
 */
  (void)(lxb_html_serialize_tree_str(__pyx_v_self->node, __pyx_v_html_str));

  /* "resiliparse_dom/parse/html.pyx":783
 *         cdef lexbor_str_t* html_str = lexbor_str_create()
 *         lxb_html_serialize_tree_str(self.node, html_str)
 *         cdef str py_text = html_str.data[:html_str.length].decode()             # <<<<<<<<<<<<<<
 *         lexbor_str_destroy(html_str, self.node.owner_document.text, True)
 *         return py_text
 */
  __pyx_t_2 = __Pyx_decode_c_string(((char const *)__pyx_v_html_str->data), 0, __pyx_v_html_str->length, NULL, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_py_text = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "resiliparse_dom/parse/html.pyx":784
 *         lxb_html_serialize_tree_str(self.node, html_str)
 *         cdef str py_text = html_str.data[:html_str.length].decode()
 *         lexbor_str_destroy(html_str, self.node.owner_document.text, True)             # <<<<<<<<<<<<<<
 *         return py_text
 * 
 */
  (void)(lexbor_str_destroy(__pyx_v_html_str, __pyx_v_self->node->owner_document->text, 1));

  /* "resiliparse_dom/parse/html.pyx":785
 *         cdef str py_text = html_str.data[:html_str.length].decode()
 *         lexbor_str_destroy(html_str, self.node.owner_document.text, True)
 *         return py_text             # <<<<<<<<<<<<<<
 * 
 *     @html.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_py_text);
  __pyx_r = __pyx_v_py_text;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":769
 *         lxb_dom_node_text_content_set(self.node, <const lxb_char_t*>text_bytes, len(text_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def html(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.html.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_py_text);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":787
 *         return py_text
 * 
 *     @html.setter             # <<<<<<<<<<<<<<
 *     def html(self, str html):
 *         if not check_node(self):
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4html_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_html); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4html_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_html) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_html), (&PyUnicode_Type), 1, "html", 1))) __PYX_ERR(0, 788, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4html_2__set__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_html));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_4html_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_html) {
  PyObject *__pyx_v_html_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  lxb_char_t const *__pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "resiliparse_dom/parse/html.pyx":789
 *     @html.setter
 *     def html(self, str html):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to set HTML contents of uninitialized DOM node')
 * 
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":790
 *     def html(self, str html):
 *         if not check_node(self):
 *             raise RuntimeError('Trying to set HTML contents of uninitialized DOM node')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes html_bytes = html.encode()
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 790, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 790, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":789
 *     @html.setter
 *     def html(self, str html):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to set HTML contents of uninitialized DOM node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":792
 *             raise RuntimeError('Trying to set HTML contents of uninitialized DOM node')
 * 
 *         cdef bytes html_bytes = html.encode()             # <<<<<<<<<<<<<<
 *         lxb_html_element_inner_html_set(<lxb_html_element_t*>self.node, <const lxb_char_t*>html_bytes, len(html_bytes))
 * 
 */
  if (unlikely(__pyx_v_html == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 792, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsEncodedString(__pyx_v_html, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_html_bytes = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "resiliparse_dom/parse/html.pyx":793
 * 
 *         cdef bytes html_bytes = html.encode()
 *         lxb_html_element_inner_html_set(<lxb_html_element_t*>self.node, <const lxb_char_t*>html_bytes, len(html_bytes))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  if (unlikely(__pyx_v_html_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 793, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_AsUString(__pyx_v_html_bytes); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 793, __pyx_L1_error)
  if (unlikely(__pyx_v_html_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 793, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyBytes_GET_SIZE(__pyx_v_html_bytes); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 793, __pyx_L1_error)
  (void)(lxb_html_element_inner_html_set(((lxb_html_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_t_3), __pyx_t_4));

  /* "resiliparse_dom/parse/html.pyx":787
 *         return py_text
 * 
 *     @html.setter             # <<<<<<<<<<<<<<
 *     def html(self, str html):
 *         if not check_node(self):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.html.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_html_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":795
 *         lxb_html_element_inner_html_set(<lxb_html_element_t*>self.node, <const lxb_char_t*>html_bytes, len(html_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_2id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_2id_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2id___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2id___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  size_t __pyx_v_value_len;
  lxb_char_t const *__pyx_v_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":802
 *         :type: str
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":803
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t value_len = 0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":802
 *         :type: str
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":805
 *             return None
 * 
 *         cdef size_t value_len = 0             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* value = lxb_dom_element_id(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:
 */
  __pyx_v_value_len = 0;

  /* "resiliparse_dom/parse/html.pyx":806
 * 
 *         cdef size_t value_len = 0
 *         cdef const lxb_char_t* value = lxb_dom_element_id(<lxb_dom_element_t*>self.node, &value_len)             # <<<<<<<<<<<<<<
 *         if not value:
 *             return ''
 */
  __pyx_v_value = lxb_dom_element_id(((lxb_dom_element_t *)__pyx_v_self->node), (&__pyx_v_value_len));

  /* "resiliparse_dom/parse/html.pyx":807
 *         cdef size_t value_len = 0
 *         cdef const lxb_char_t* value = lxb_dom_element_id(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:             # <<<<<<<<<<<<<<
 *             return ''
 *         return value[:value_len].decode()
 */
  __pyx_t_1 = (!(__pyx_v_value != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":808
 *         cdef const lxb_char_t* value = lxb_dom_element_id(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:
 *             return ''             # <<<<<<<<<<<<<<
 *         return value[:value_len].decode()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_);
    __pyx_r = __pyx_kp_u_;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":807
 *         cdef size_t value_len = 0
 *         cdef const lxb_char_t* value = lxb_dom_element_id(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:             # <<<<<<<<<<<<<<
 *             return ''
 *         return value[:value_len].decode()
 */
  }

  /* "resiliparse_dom/parse/html.pyx":809
 *         if not value:
 *             return ''
 *         return value[:value_len].decode()             # <<<<<<<<<<<<<<
 * 
 *     @id.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_value), 0, __pyx_v_value_len, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":795
 *         lxb_html_element_inner_html_set(<lxb_html_element_t*>self.node, <const lxb_char_t*>html_bytes, len(html_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":811
 *         return value[:value_len].decode()
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_class_name); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_class_name) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_class_name), (&PyUnicode_Type), 1, "class_name", 1))) __PYX_ERR(0, 812, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2id_2__set__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_class_name));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_2id_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name) {
  PyObject *__pyx_v_class_name_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  char const *__pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "resiliparse_dom/parse/html.pyx":813
 *     @id.setter
 *     def id(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()             # <<<<<<<<<<<<<<
 *         self._setattr_impl(<const char*> b'id', 2, <const char*>class_name_bytes, len(class_name_bytes))
 * 
 */
  if (unlikely(__pyx_v_class_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 813, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_class_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_class_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":814
 *     def id(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()
 *         self._setattr_impl(<const char*> b'id', 2, <const char*>class_name_bytes, len(class_name_bytes))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  if (unlikely(__pyx_v_class_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 814, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBytes_AsString(__pyx_v_class_name_bytes); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 814, __pyx_L1_error)
  if (unlikely(__pyx_v_class_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 814, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_GET_SIZE(__pyx_v_class_name_bytes); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 814, __pyx_L1_error)
  __pyx_t_4 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->_setattr_impl(__pyx_v_self, ((char const *)((char const *)"id")), 2, ((char const *)__pyx_t_2), __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 814, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":811
 *         return value[:value_len].decode()
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_class_name_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":816
 *         self._setattr_impl(<const char*> b'id', 2, <const char*>class_name_bytes, len(class_name_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def class_name(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_name___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_name___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  size_t __pyx_v_value_len;
  lxb_char_t const *__pyx_v_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":823
 *         :type: str
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":824
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t value_len = 0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":823
 *         :type: str
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":826
 *             return None
 * 
 *         cdef size_t value_len = 0             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* value = lxb_dom_element_class(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:
 */
  __pyx_v_value_len = 0;

  /* "resiliparse_dom/parse/html.pyx":827
 * 
 *         cdef size_t value_len = 0
 *         cdef const lxb_char_t* value = lxb_dom_element_class(<lxb_dom_element_t*>self.node, &value_len)             # <<<<<<<<<<<<<<
 *         if not value:
 *             return ''
 */
  __pyx_v_value = lxb_dom_element_class(((lxb_dom_element_t *)__pyx_v_self->node), (&__pyx_v_value_len));

  /* "resiliparse_dom/parse/html.pyx":828
 *         cdef size_t value_len = 0
 *         cdef const lxb_char_t* value = lxb_dom_element_class(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:             # <<<<<<<<<<<<<<
 *             return ''
 *         return value[:value_len].decode()
 */
  __pyx_t_1 = (!(__pyx_v_value != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":829
 *         cdef const lxb_char_t* value = lxb_dom_element_class(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:
 *             return ''             # <<<<<<<<<<<<<<
 *         return value[:value_len].decode()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_);
    __pyx_r = __pyx_kp_u_;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":828
 *         cdef size_t value_len = 0
 *         cdef const lxb_char_t* value = lxb_dom_element_class(<lxb_dom_element_t*>self.node, &value_len)
 *         if not value:             # <<<<<<<<<<<<<<
 *             return ''
 *         return value[:value_len].decode()
 */
  }

  /* "resiliparse_dom/parse/html.pyx":830
 *         if not value:
 *             return ''
 *         return value[:value_len].decode()             # <<<<<<<<<<<<<<
 * 
 *     @class_name.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_value), 0, __pyx_v_value_len, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":816
 *         self._setattr_impl(<const char*> b'id', 2, <const char*>class_name_bytes, len(class_name_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def class_name(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.class_name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":832
 *         return value[:value_len].decode()
 * 
 *     @class_name.setter             # <<<<<<<<<<<<<<
 *     def class_name(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_class_name); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_class_name) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_class_name), (&PyUnicode_Type), 1, "class_name", 1))) __PYX_ERR(0, 833, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_2__set__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_class_name));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_2__set__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name) {
  PyObject *__pyx_v_class_name_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  char const *__pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "resiliparse_dom/parse/html.pyx":834
 *     @class_name.setter
 *     def class_name(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()             # <<<<<<<<<<<<<<
 *         self._setattr_impl(<const char*>b'class', 5, <const char*>class_name_bytes, len(class_name_bytes))
 * 
 */
  if (unlikely(__pyx_v_class_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 834, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_class_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_class_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":835
 *     def class_name(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()
 *         self._setattr_impl(<const char*>b'class', 5, <const char*>class_name_bytes, len(class_name_bytes))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  if (unlikely(__pyx_v_class_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 835, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBytes_AsString(__pyx_v_class_name_bytes); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 835, __pyx_L1_error)
  if (unlikely(__pyx_v_class_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 835, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_GET_SIZE(__pyx_v_class_name_bytes); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 835, __pyx_L1_error)
  __pyx_t_4 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->_setattr_impl(__pyx_v_self, ((char const *)((char const *)"class")), 5, ((char const *)__pyx_t_2), __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 835, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":832
 *         return value[:value_len].decode()
 * 
 *     @class_name.setter             # <<<<<<<<<<<<<<
 *     def class_name(self, str class_name):
 *         cdef bytes class_name_bytes = class_name.encode()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.class_name.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_class_name_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":837
 *         self._setattr_impl(<const char*>b'class', 5, <const char*>class_name_bytes, len(class_name_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def class_list(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_list_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_list_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_list___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_10class_list___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":844
 *         :type: DOMElementClassList
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":845
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         if self.class_list_singleton is None:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":844
 *         :type: DOMElementClassList
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":847
 *             return None
 * 
 *         if self.class_list_singleton is None:             # <<<<<<<<<<<<<<
 *             # noinspection PyAttributeOutsideInit
 *             self.class_list_singleton = DOMElementClassList.__new__(DOMElementClassList, self)
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->class_list_singleton) == Py_None);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":849
 *         if self.class_list_singleton is None:
 *             # noinspection PyAttributeOutsideInit
 *             self.class_list_singleton = DOMElementClassList.__new__(DOMElementClassList, self)             # <<<<<<<<<<<<<<
 *         return self.class_list_singleton
 * 
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF((PyObject *)__pyx_v_self);
    __Pyx_GIVEREF((PyObject *)__pyx_v_self);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self))) __PYX_ERR(0, 849, __pyx_L1_error);
    __pyx_t_4 = ((PyObject *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMElementClassList(((PyTypeObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList), __pyx_t_3, NULL)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 849, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GIVEREF((PyObject *)__pyx_t_4);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->class_list_singleton);
    __Pyx_DECREF((PyObject *)__pyx_v_self->class_list_singleton);
    __pyx_v_self->class_list_singleton = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "resiliparse_dom/parse/html.pyx":847
 *             return None
 * 
 *         if self.class_list_singleton is None:             # <<<<<<<<<<<<<<
 *             # noinspection PyAttributeOutsideInit
 *             self.class_list_singleton = DOMElementClassList.__new__(DOMElementClassList, self)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":850
 *             # noinspection PyAttributeOutsideInit
 *             self.class_list_singleton = DOMElementClassList.__new__(DOMElementClassList, self)
 *         return self.class_list_singleton             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->class_list_singleton);
  __pyx_r = ((PyObject *)__pyx_v_self->class_list_singleton);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":837
 *         self._setattr_impl(<const char*>b'class', 5, <const char*>class_name_bytes, len(class_name_bytes))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def class_list(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.class_list.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":852
 *         return self.class_list_singleton
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def attrs(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5attrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5attrs_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_5attrs___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_5attrs___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  lxb_dom_attr_t *__pyx_v_attr;
  lxb_char_t const *__pyx_v_local_name;
  size_t __pyx_v_local_name_len;
  PyObject *__pyx_v_attrs = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  lxb_dom_attr_t *__pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":859
 *         :type: t.List[str] or None
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":860
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_first_attribute(<lxb_dom_element_t*>self.node)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":859
 *         :type: t.List[str] or None
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":862
 *             return None
 * 
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_first_attribute(<lxb_dom_element_t*>self.node)             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* local_name
 *         cdef size_t local_name_len = 0
 */
  __pyx_v_attr = lxb_dom_element_first_attribute(((lxb_dom_element_t *)__pyx_v_self->node));

  /* "resiliparse_dom/parse/html.pyx":864
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_first_attribute(<lxb_dom_element_t*>self.node)
 *         cdef const lxb_char_t* local_name
 *         cdef size_t local_name_len = 0             # <<<<<<<<<<<<<<
 * 
 *         attrs = []
 */
  __pyx_v_local_name_len = 0;

  /* "resiliparse_dom/parse/html.pyx":866
 *         cdef size_t local_name_len = 0
 * 
 *         attrs = []             # <<<<<<<<<<<<<<
 *         while attr:
 *             local_name = lxb_dom_attr_local_name(attr, &local_name_len)
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_attrs = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "resiliparse_dom/parse/html.pyx":867
 * 
 *         attrs = []
 *         while attr:             # <<<<<<<<<<<<<<
 *             local_name = lxb_dom_attr_local_name(attr, &local_name_len)
 *             attrs.append(local_name[:local_name_len].decode())
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_attr != 0);
    if (!__pyx_t_1) break;

    /* "resiliparse_dom/parse/html.pyx":868
 *         attrs = []
 *         while attr:
 *             local_name = lxb_dom_attr_local_name(attr, &local_name_len)             # <<<<<<<<<<<<<<
 *             attrs.append(local_name[:local_name_len].decode())
 *             attr = attr.next
 */
    __pyx_v_local_name = lxb_dom_attr_local_name(__pyx_v_attr, (&__pyx_v_local_name_len));

    /* "resiliparse_dom/parse/html.pyx":869
 *         while attr:
 *             local_name = lxb_dom_attr_local_name(attr, &local_name_len)
 *             attrs.append(local_name[:local_name_len].decode())             # <<<<<<<<<<<<<<
 *             attr = attr.next
 * 
 */
    __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_local_name), 0, __pyx_v_local_name_len, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 869, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_attrs, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 869, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":870
 *             local_name = lxb_dom_attr_local_name(attr, &local_name_len)
 *             attrs.append(local_name[:local_name_len].decode())
 *             attr = attr.next             # <<<<<<<<<<<<<<
 * 
 *         return attrs
 */
    __pyx_t_5 = __pyx_v_attr->next;
    __pyx_v_attr = __pyx_t_5;
  }

  /* "resiliparse_dom/parse/html.pyx":872
 *             attr = attr.next
 * 
 *         return attrs             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint hasattr(self, str attr_name) except -1:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_attrs);
  __pyx_r = __pyx_v_attrs;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":852
 *         return self.class_list_singleton
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def attrs(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.attrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attrs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":874
 *         return attrs
 * 
 *     cpdef bint hasattr(self, str attr_name) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         hasattr(self, attr_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_hasattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_attr_name_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  lxb_char_t const *__pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hasattr", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hasattr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 874, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_attr_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 874, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 874, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":885
 *         :raises ValueError: if node is not an Element node
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             raise ValueError('Node ist not an Element node.')
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":886
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             raise ValueError('Node ist not an Element node.')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 886, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 886, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":885
 *         :raises ValueError: if node is not an Element node
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             raise ValueError('Node ist not an Element node.')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":888
 *             raise ValueError('Node ist not an Element node.')
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()             # <<<<<<<<<<<<<<
 *         return <bint>lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,
 *                                                    <const lxb_char_t*>attr_name_bytes, len(attr_name_bytes))
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 888, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":890
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         return <bint>lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,
 *                                                    <const lxb_char_t*>attr_name_bytes, len(attr_name_bytes))             # <<<<<<<<<<<<<<
 * 
 *     cdef bint _getattr_impl(self, const char* attr_name, size_t attr_name_len,
 */
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 890, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_AsUString(__pyx_v_attr_name_bytes); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) __PYX_ERR(0, 890, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 890, __pyx_L1_error)
  }
  __pyx_t_9 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_name_bytes); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 890, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":889
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         return <bint>lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,             # <<<<<<<<<<<<<<
 *                                                    <const lxb_char_t*>attr_name_bytes, len(attr_name_bytes))
 * 
 */
  __pyx_r = lxb_dom_element_has_attribute(((lxb_dom_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_t_8), __pyx_t_9);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":874
 *         return attrs
 * 
 *     cpdef bint hasattr(self, str attr_name) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         hasattr(self, attr_name)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.hasattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr_name_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_7hasattr, "\n        hasattr(self, attr_name)\n        \n        Check if node has an attribute with the given name.\n\n        :param attr_name: attribute name\n        :type attr_name: str\n        :rtype: bool\n        :raises ValueError: if node is not an Element node\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr = {"hasattr", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_7hasattr};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attr_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hasattr (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 874, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "hasattr") < 0)) __PYX_ERR(0, 874, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_attr_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("hasattr", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 874, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.hasattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 874, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_7hasattr(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_attr_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_7hasattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hasattr", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_hasattr(__pyx_v_self, __pyx_v_attr_name, 1); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 874, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.hasattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":892
 *                                                    <const lxb_char_t*>attr_name_bytes, len(attr_name_bytes))
 * 
 *     cdef bint _getattr_impl(self, const char* attr_name, size_t attr_name_len,             # <<<<<<<<<<<<<<
 *                             const char** attr_out_value, size_t* attr_out_len) except -1 nogil:
 *         """
 */

static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__getattr_impl(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len, char const **__pyx_v_attr_out_value, size_t *__pyx_v_attr_out_len) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif
  __Pyx_RefNannySetupContext("_getattr_impl", 1);

  /* "resiliparse_dom/parse/html.pyx":905
 *         :raises ValueError: if node is invalid or not an Element node
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":906
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             attr_out_value[0] = NULL             # <<<<<<<<<<<<<<
 *             attr_out_len[0] = 0
 *             with gil:
 */
    (__pyx_v_attr_out_value[0]) = NULL;

    /* "resiliparse_dom/parse/html.pyx":907
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0             # <<<<<<<<<<<<<<
 *             with gil:
 *                 raise ValueError('Node ist not an element node.')
 */
    (__pyx_v_attr_out_len[0]) = 0;

    /* "resiliparse_dom/parse/html.pyx":908
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0
 *             with gil:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Node ist not an element node.')
 * 
 */
    {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
        #endif
        /*try:*/ {

          /* "resiliparse_dom/parse/html.pyx":909
 *             attr_out_len[0] = 0
 *             with gil:
 *                 raise ValueError('Node ist not an element node.')             # <<<<<<<<<<<<<<
 * 
 *         if not lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,
 */
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 909, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_Raise(__pyx_t_3, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __PYX_ERR(0, 909, __pyx_L7_error)
        }

        /* "resiliparse_dom/parse/html.pyx":908
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0
 *             with gil:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Node ist not an element node.')
 * 
 */
        /*finally:*/ {
          __pyx_L7_error: {
            #ifdef WITH_THREAD
            __Pyx_PyGILState_Release(__pyx_gilstate_save);
            #endif
            goto __pyx_L1_error;
          }
        }
    }

    /* "resiliparse_dom/parse/html.pyx":905
 *         :raises ValueError: if node is invalid or not an Element node
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0
 */
  }

  /* "resiliparse_dom/parse/html.pyx":911
 *                 raise ValueError('Node ist not an element node.')
 * 
 *         if not lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,             # <<<<<<<<<<<<<<
 *                                              <const lxb_char_t*>attr_name, attr_name_len):
 *             attr_out_value[0] = NULL
 */
  __pyx_t_1 = (!lxb_dom_element_has_attribute(((lxb_dom_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_v_attr_name), __pyx_v_attr_name_len));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":913
 *         if not lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,
 *                                              <const lxb_char_t*>attr_name, attr_name_len):
 *             attr_out_value[0] = NULL             # <<<<<<<<<<<<<<
 *             attr_out_len[0] = 0
 *             return False
 */
    (__pyx_v_attr_out_value[0]) = NULL;

    /* "resiliparse_dom/parse/html.pyx":914
 *                                              <const lxb_char_t*>attr_name, attr_name_len):
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
    (__pyx_v_attr_out_len[0]) = 0;

    /* "resiliparse_dom/parse/html.pyx":915
 *             attr_out_value[0] = NULL
 *             attr_out_len[0] = 0
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         attr_out_value[0] = <const char*>lxb_dom_element_get_attribute(
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":911
 *                 raise ValueError('Node ist not an element node.')
 * 
 *         if not lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,             # <<<<<<<<<<<<<<
 *                                              <const lxb_char_t*>attr_name, attr_name_len):
 *             attr_out_value[0] = NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":917
 *             return False
 * 
 *         attr_out_value[0] = <const char*>lxb_dom_element_get_attribute(             # <<<<<<<<<<<<<<
 *             <lxb_dom_element_t*>self.node, <const lxb_char_t*>attr_name, attr_name_len, attr_out_len)
 *         return True
 */
  (__pyx_v_attr_out_value[0]) = ((char const *)lxb_dom_element_get_attribute(((lxb_dom_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_v_attr_name), __pyx_v_attr_name_len, __pyx_v_attr_out_len));

  /* "resiliparse_dom/parse/html.pyx":919
 *         attr_out_value[0] = <const char*>lxb_dom_element_get_attribute(
 *             <lxb_dom_element_t*>self.node, <const lxb_char_t*>attr_name, attr_name_len, attr_out_len)
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     cpdef str getattr(self, str attr_name, str default_value=None):
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":892
 *                                                    <const lxb_char_t*>attr_name_bytes, len(attr_name_bytes))
 * 
 *     cdef bint _getattr_impl(self, const char* attr_name, size_t attr_name_len,             # <<<<<<<<<<<<<<
 *                             const char** attr_out_value, size_t* attr_out_len) except -1 nogil:
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode._getattr_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  __Pyx_RefNannyFinishContextNogil()
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":921
 *         return True
 * 
 *     cpdef str getattr(self, str attr_name, str default_value=None):             # <<<<<<<<<<<<<<
 *         """
 *         getattr(self, attr_name, default_value=None)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10getattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_getattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject*)Py_None);
  PyObject *__pyx_v_attr_name_bytes = 0;
  char const *__pyx_v_attr_value;
  size_t __pyx_v_attr_value_len;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  char const *__pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getattr", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getattr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10getattr)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_v_attr_name, __pyx_v_default_value};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 921, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(PyUnicode_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None) || __Pyx_RaiseUnexpectedTypeError("unicode", __pyx_t_2))) __PYX_ERR(0, 921, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":935
 *         :raises ValueError: if node is  invalid or not an Element node
 *         """
 *         cdef bytes attr_name_bytes = attr_name.encode()             # <<<<<<<<<<<<<<
 *         cdef const char* attr_value
 *         cdef size_t attr_value_len
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 935, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 935, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":938
 *         cdef const char* attr_value
 *         cdef size_t attr_value_len
 *         if not self._getattr_impl(<const char*> attr_name_bytes, len(attr_name_bytes), &attr_value, &attr_value_len):             # <<<<<<<<<<<<<<
 *             return default_value
 *         return attr_value[:attr_value_len].decode()
 */
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 938, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyBytes_AsString(__pyx_v_attr_name_bytes); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 938, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_name_bytes); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 938, __pyx_L1_error)
  __pyx_t_8 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->_getattr_impl(__pyx_v_self, ((char const *)__pyx_t_6), __pyx_t_7, (&__pyx_v_attr_value), (&__pyx_v_attr_value_len)); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 938, __pyx_L1_error)
  __pyx_t_9 = (!__pyx_t_8);
  if (__pyx_t_9) {

    /* "resiliparse_dom/parse/html.pyx":939
 *         cdef size_t attr_value_len
 *         if not self._getattr_impl(<const char*> attr_name_bytes, len(attr_name_bytes), &attr_value, &attr_value_len):
 *             return default_value             # <<<<<<<<<<<<<<
 *         return attr_value[:attr_value_len].decode()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_default_value);
    __pyx_r = __pyx_v_default_value;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":938
 *         cdef const char* attr_value
 *         cdef size_t attr_value_len
 *         if not self._getattr_impl(<const char*> attr_name_bytes, len(attr_name_bytes), &attr_value, &attr_value_len):             # <<<<<<<<<<<<<<
 *             return default_value
 *         return attr_value[:attr_value_len].decode()
 */
  }

  /* "resiliparse_dom/parse/html.pyx":940
 *         if not self._getattr_impl(<const char*> attr_name_bytes, len(attr_name_bytes), &attr_value, &attr_value_len):
 *             return default_value
 *         return attr_value[:attr_value_len].decode()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, str attr_name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_decode_c_string(__pyx_v_attr_value, 0, __pyx_v_attr_value_len, NULL, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":921
 *         return True
 * 
 *     cpdef str getattr(self, str attr_name, str default_value=None):             # <<<<<<<<<<<<<<
 *         """
 *         getattr(self, attr_name, default_value=None)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.getattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr_name_bytes);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10getattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_9getattr, "\n        getattr(self, attr_name, default_value=None)\n\n        Get the value of the attribute ``attr_name`` or ``default_value`` if the element has no such attribute.\n\n        :param attr_name: attribute name\n        :type attr_name: str\n        :param default_value: default value to return if attribute is unset\n        :type default_value: str or None\n        :return: attribute value\n        :rtype: str or None\n        :raises ValueError: if node is  invalid or not an Element node\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_10getattr = {"getattr", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10getattr, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_9getattr};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10getattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attr_name = 0;
  PyObject *__pyx_v_default_value = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getattr (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr_name,&__pyx_n_s_default_value,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject*)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_default_value);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "getattr") < 0)) __PYX_ERR(0, 921, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_attr_name = ((PyObject*)values[0]);
    __pyx_v_default_value = ((PyObject*)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getattr", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 921, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.getattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 921, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_default_value), (&PyUnicode_Type), 1, "default_value", 1))) __PYX_ERR(0, 921, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_9getattr(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_attr_name, __pyx_v_default_value);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_9getattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_default_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getattr", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.default_value = __pyx_v_default_value;
  __pyx_t_1 = __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode->getattr(__pyx_v_self, __pyx_v_attr_name, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.getattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":942
 *         return attr_value[:attr_value_len].decode()
 * 
 *     def __getitem__(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         __getitem__(self, attr_name)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr_name); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__, "\n        __getitem__(self, attr_name)\n\n        Get the value of an attribute.\n\n        :param attr_name: attribute name\n        :rtype: str\n        :raises KeyError: if no such attribute exists\n        :raises ValueError: if node is not an Element node\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr_name) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 942, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_attr_name));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name) {
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 1);

  /* "resiliparse_dom/parse/html.pyx":953
 *         :raises ValueError: if node is not an Element node
 *         """
 *         cdef str value = self.getattr(attr_name)             # <<<<<<<<<<<<<<
 *         if value is None:
 *             raise KeyError(f'No such attribute: {attr_name}')
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->getattr(__pyx_v_self, __pyx_v_attr_name, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 953, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":954
 *         """
 *         cdef str value = self.getattr(attr_name)
 *         if value is None:             # <<<<<<<<<<<<<<
 *             raise KeyError(f'No such attribute: {attr_name}')
 *         return value
 */
  __pyx_t_2 = (__pyx_v_value == ((PyObject*)Py_None));
  if (unlikely(__pyx_t_2)) {

    /* "resiliparse_dom/parse/html.pyx":955
 *         cdef str value = self.getattr(attr_name)
 *         if value is None:
 *             raise KeyError(f'No such attribute: {attr_name}')             # <<<<<<<<<<<<<<
 *         return value
 * 
 */
    __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_attr_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 955, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyUnicode_Concat(__pyx_kp_u_No_such_attribute, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 955, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_KeyError, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 955, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 955, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":954
 *         """
 *         cdef str value = self.getattr(attr_name)
 *         if value is None:             # <<<<<<<<<<<<<<
 *             raise KeyError(f'No such attribute: {attr_name}')
 *         return value
 */
  }

  /* "resiliparse_dom/parse/html.pyx":956
 *         if value is None:
 *             raise KeyError(f'No such attribute: {attr_name}')
 *         return value             # <<<<<<<<<<<<<<
 * 
 *     cdef bint _setattr_impl(self, const char* attr_name, size_t attr_name_len,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_value);
  __pyx_r = __pyx_v_value;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":942
 *         return attr_value[:attr_value_len].decode()
 * 
 *     def __getitem__(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         __getitem__(self, attr_name)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":958
 *         return value
 * 
 *     cdef bint _setattr_impl(self, const char* attr_name, size_t attr_name_len,             # <<<<<<<<<<<<<<
 *                             const char* attr_value, size_t attr_value_len) except -1 nogil:
 *         """
 */

static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__setattr_impl(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len, char const *__pyx_v_attr_value, size_t __pyx_v_attr_value_len) {
  lxb_dom_attr_t *__pyx_v_attr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif
  __Pyx_RefNannySetupContext("_setattr_impl", 1);

  /* "resiliparse_dom/parse/html.pyx":968
 *         :raises ValueError: if node is not an Element node
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             with gil:
 *                 raise ValueError('Node ist not an Element node.')
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":969
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             with gil:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Node ist not an Element node.')
 * 
 */
    {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
        #endif
        /*try:*/ {

          /* "resiliparse_dom/parse/html.pyx":970
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             with gil:
 *                 raise ValueError('Node ist not an Element node.')             # <<<<<<<<<<<<<<
 * 
 *         # Lexbor's check of existing attributes is buggy
 */
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 970, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_Raise(__pyx_t_3, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __PYX_ERR(0, 970, __pyx_L7_error)
        }

        /* "resiliparse_dom/parse/html.pyx":969
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             with gil:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Node ist not an Element node.')
 * 
 */
        /*finally:*/ {
          __pyx_L7_error: {
            #ifdef WITH_THREAD
            __Pyx_PyGILState_Release(__pyx_gilstate_save);
            #endif
            goto __pyx_L1_error;
          }
        }
    }

    /* "resiliparse_dom/parse/html.pyx":968
 *         :raises ValueError: if node is not an Element node
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             with gil:
 *                 raise ValueError('Node ist not an Element node.')
 */
  }

  /* "resiliparse_dom/parse/html.pyx":973
 * 
 *         # Lexbor's check of existing attributes is buggy
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_attr_is_exist(<lxb_dom_element_t*>self.node,             # <<<<<<<<<<<<<<
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 * 
 */
  __pyx_v_attr = lxb_dom_element_attr_is_exist(((lxb_dom_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_v_attr_name), __pyx_v_attr_name_len);

  /* "resiliparse_dom/parse/html.pyx":976
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 * 
 *         if attr:             # <<<<<<<<<<<<<<
 *             lxb_dom_attr_set_value(attr, <const lxb_char_t*>attr_value, attr_value_len)
 *             return True
 */
  __pyx_t_1 = (__pyx_v_attr != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":977
 * 
 *         if attr:
 *             lxb_dom_attr_set_value(attr, <const lxb_char_t*>attr_value, attr_value_len)             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
    (void)(lxb_dom_attr_set_value(__pyx_v_attr, ((lxb_char_t const *)__pyx_v_attr_value), __pyx_v_attr_value_len));

    /* "resiliparse_dom/parse/html.pyx":978
 *         if attr:
 *             lxb_dom_attr_set_value(attr, <const lxb_char_t*>attr_value, attr_value_len)
 *             return True             # <<<<<<<<<<<<<<
 * 
 *         lxb_dom_element_set_attribute(<lxb_dom_element_t*>self.node,
 */
    __pyx_r = 1;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":976
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 * 
 *         if attr:             # <<<<<<<<<<<<<<
 *             lxb_dom_attr_set_value(attr, <const lxb_char_t*>attr_value, attr_value_len)
 *             return True
 */
  }

  /* "resiliparse_dom/parse/html.pyx":980
 *             return True
 * 
 *         lxb_dom_element_set_attribute(<lxb_dom_element_t*>self.node,             # <<<<<<<<<<<<<<
 *                                       <const lxb_char_t*>attr_name, attr_name_len,
 *                                       <const lxb_char_t*>attr_value, attr_value_len)
 */
  (void)(lxb_dom_element_set_attribute(((lxb_dom_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_v_attr_name), __pyx_v_attr_name_len, ((lxb_char_t const *)__pyx_v_attr_value), __pyx_v_attr_value_len));

  /* "resiliparse_dom/parse/html.pyx":983
 *                                       <const lxb_char_t*>attr_name, attr_name_len,
 *                                       <const lxb_char_t*>attr_value, attr_value_len)
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     cpdef setattr(self, str attr_name, str attr_value):
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":958
 *         return value
 * 
 *     cdef bint _setattr_impl(self, const char* attr_name, size_t attr_name_len,             # <<<<<<<<<<<<<<
 *                             const char* attr_value, size_t attr_value_len) except -1 nogil:
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode._setattr_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  __Pyx_RefNannyFinishContextNogil()
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":985
 *         return True
 * 
 *     cpdef setattr(self, str attr_name, str attr_value):             # <<<<<<<<<<<<<<
 *         """
 *         setattr(self, attr_name, attr_value)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_14setattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_setattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_attr_name_bytes = 0;
  PyObject *__pyx_v_attr_value_bytes = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  char const *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  char const *__pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setattr", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setattr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 985, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_14setattr)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_v_attr_name, __pyx_v_attr_value};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 985, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":998
 *         :raises ValueError: if node is not an Element node
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_6 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":999
 *         """
 *         if not check_node(self):
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":998
 *         :raises ValueError: if node is not an Element node
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1001
 *             return
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()             # <<<<<<<<<<<<<<
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         self._setattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes),
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1001, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1002
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bytes attr_value_bytes = attr_value.encode()             # <<<<<<<<<<<<<<
 *         self._setattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes),
 *                            <const char*>attr_value_bytes, len(attr_value_bytes))
 */
  if (unlikely(__pyx_v_attr_value == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1002, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_value, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_value_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1003
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         self._setattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes),             # <<<<<<<<<<<<<<
 *                            <const char*>attr_value_bytes, len(attr_value_bytes))
 * 
 */
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1003, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_AsString(__pyx_v_attr_name_bytes); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 1003, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1003, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_name_bytes); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1003, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1004
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         self._setattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes),
 *                            <const char*>attr_value_bytes, len(attr_value_bytes))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, str attr_name, str attr_value):
 */
  if (unlikely(__pyx_v_attr_value_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1004, __pyx_L1_error)
  }
  __pyx_t_9 = __Pyx_PyBytes_AsString(__pyx_v_attr_value_bytes); if (unlikely((!__pyx_t_9) && PyErr_Occurred())) __PYX_ERR(0, 1004, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_value_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1004, __pyx_L1_error)
  }
  __pyx_t_10 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_value_bytes); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1004, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1003
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         self._setattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes),             # <<<<<<<<<<<<<<
 *                            <const char*>attr_value_bytes, len(attr_value_bytes))
 * 
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->_setattr_impl(__pyx_v_self, ((char const *)__pyx_t_7), __pyx_t_8, ((char const *)__pyx_t_9), __pyx_t_10); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 1003, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":985
 *         return True
 * 
 *     cpdef setattr(self, str attr_name, str attr_value):             # <<<<<<<<<<<<<<
 *         """
 *         setattr(self, attr_name, attr_value)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.setattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr_name_bytes);
  __Pyx_XDECREF(__pyx_v_attr_value_bytes);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_14setattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_13setattr, "\n        setattr(self, attr_name, attr_value)\n        \n        Insert or update an attribute with the given name to the given value.\n\n        :param attr_name: attribute name\n        :type attr_name: str\n        :param attr_value: attribute value\n        :type attr_value: str\n        :return: attribute value\n        :raises ValueError: if node is not an Element node\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_14setattr = {"setattr", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_14setattr, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_13setattr};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_14setattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attr_name = 0;
  PyObject *__pyx_v_attr_value = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setattr (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr_name,&__pyx_n_s_attr_value,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 985, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_value)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 985, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("setattr", 1, 2, 2, 1); __PYX_ERR(0, 985, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setattr") < 0)) __PYX_ERR(0, 985, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_attr_name = ((PyObject*)values[0]);
    __pyx_v_attr_value = ((PyObject*)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setattr", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 985, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.setattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 985, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_value), (&PyUnicode_Type), 1, "attr_value", 1))) __PYX_ERR(0, 985, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_13setattr(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_attr_name, __pyx_v_attr_value);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_13setattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setattr", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_setattr(__pyx_v_self, __pyx_v_attr_name, __pyx_v_attr_value, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 985, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.setattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1006
 *                            <const char*>attr_value_bytes, len(attr_value_bytes))
 * 
 *     def __setitem__(self, str attr_name, str attr_value):             # <<<<<<<<<<<<<<
 *         """
 *         __setitem__(self, attr_name, attr_value)
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_16__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__, "\n        __setitem__(self, attr_name, attr_value)\n\n        Insert or update an attribute with the given name to the given value.\n\n        :param attr_name: attribute name\n        :type attr_name: str\n        :param attr_value: attribute value\n        :type attr_value: str\n        :return: attribute value\n        :raises ValueError: if node is not an Element node\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__;
#endif
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_16__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 1006, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_value), (&PyUnicode_Type), 1, "attr_value", 1))) __PYX_ERR(0, 1006, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_attr_name), ((PyObject*)__pyx_v_attr_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 1);

  /* "resiliparse_dom/parse/html.pyx":1019
 *         :raises ValueError: if node is not an Element node
 *         """
 *         self.setattr(attr_name, attr_value)             # <<<<<<<<<<<<<<
 * 
 *     cdef bint _delattr_impl(self, const char* attr_name, size_t attr_name_len) except -1 nogil:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->setattr(__pyx_v_self, __pyx_v_attr_name, __pyx_v_attr_value, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1019, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1006
 *                            <const char*>attr_value_bytes, len(attr_value_bytes))
 * 
 *     def __setitem__(self, str attr_name, str attr_value):             # <<<<<<<<<<<<<<
 *         """
 *         __setitem__(self, attr_name, attr_value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1021
 *         self.setattr(attr_name, attr_value)
 * 
 *     cdef bint _delattr_impl(self, const char* attr_name, size_t attr_name_len) except -1 nogil:             # <<<<<<<<<<<<<<
 *         """
 *         Remove the given attribute.
 */

static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__delattr_impl(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, char const *__pyx_v_attr_name, size_t __pyx_v_attr_name_len) {
  lxb_dom_attr_t *__pyx_v_attr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif
  __Pyx_RefNannySetupContext("_delattr_impl", 1);

  /* "resiliparse_dom/parse/html.pyx":1028
 *         :param attr_name_len: attribute name length in bytes
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             with gil:
 *                 raise ValueError('Node ist not an Element node.')
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1029
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             with gil:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Node ist not an Element node.')
 * 
 */
    {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
        #endif
        /*try:*/ {

          /* "resiliparse_dom/parse/html.pyx":1030
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             with gil:
 *                 raise ValueError('Node ist not an Element node.')             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_attr_is_exist(<lxb_dom_element_t*>self.node,
 */
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1030, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_Raise(__pyx_t_3, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __PYX_ERR(0, 1030, __pyx_L7_error)
        }

        /* "resiliparse_dom/parse/html.pyx":1029
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             with gil:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Node ist not an Element node.')
 * 
 */
        /*finally:*/ {
          __pyx_L7_error: {
            #ifdef WITH_THREAD
            __Pyx_PyGILState_Release(__pyx_gilstate_save);
            #endif
            goto __pyx_L1_error;
          }
        }
    }

    /* "resiliparse_dom/parse/html.pyx":1028
 *         :param attr_name_len: attribute name length in bytes
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             with gil:
 *                 raise ValueError('Node ist not an Element node.')
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1032
 *                 raise ValueError('Node ist not an Element node.')
 * 
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_attr_is_exist(<lxb_dom_element_t*>self.node,             # <<<<<<<<<<<<<<
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 *         if attr == NULL:
 */
  __pyx_v_attr = lxb_dom_element_attr_is_exist(((lxb_dom_element_t *)__pyx_v_self->node), ((lxb_char_t const *)__pyx_v_attr_name), __pyx_v_attr_name_len);

  /* "resiliparse_dom/parse/html.pyx":1034
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_attr_is_exist(<lxb_dom_element_t*>self.node,
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 *         if attr == NULL:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_1 = (__pyx_v_attr == NULL);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1035
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 *         if attr == NULL:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         lxb_dom_element_attr_remove(<lxb_dom_element_t*>self.node, attr)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1034
 *         cdef lxb_dom_attr_t* attr = lxb_dom_element_attr_is_exist(<lxb_dom_element_t*>self.node,
 *                                                                   <const lxb_char_t*>attr_name, attr_name_len)
 *         if attr == NULL:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1037
 *             return False
 * 
 *         lxb_dom_element_attr_remove(<lxb_dom_element_t*>self.node, attr)             # <<<<<<<<<<<<<<
 *         return True
 * 
 */
  (void)(lxb_dom_element_attr_remove(((lxb_dom_element_t *)__pyx_v_self->node), __pyx_v_attr));

  /* "resiliparse_dom/parse/html.pyx":1038
 * 
 *         lxb_dom_element_attr_remove(<lxb_dom_element_t*>self.node, attr)
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     cpdef delattr(self, str attr_name):
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1021
 *         self.setattr(attr_name, attr_value)
 * 
 *     cdef bint _delattr_impl(self, const char* attr_name, size_t attr_name_len) except -1 nogil:             # <<<<<<<<<<<<<<
 *         """
 *         Remove the given attribute.
 */

  /* function exit code */
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode._delattr_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
  __Pyx_RefNannyFinishContextNogil()
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1040
 *         return True
 * 
 *     cpdef delattr(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         delattr(self, attr_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18delattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_delattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_attr_name_bytes = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  char const *__pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delattr", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_delattr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1040, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18delattr)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_attr_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1040, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1050
 *         :raises ValueError: if node is not an Element node
 *         """
 *         cdef bytes attr_name_bytes = attr_name.encode()             # <<<<<<<<<<<<<<
 *         self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 * 
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1050, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1051
 *         """
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))             # <<<<<<<<<<<<<<
 * 
 *     def __delitem__(self, str attr_name):
 */
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1051, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyBytes_AsString(__pyx_v_attr_name_bytes); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) __PYX_ERR(0, 1051, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1051, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_name_bytes); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1051, __pyx_L1_error)
  __pyx_t_8 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->_delattr_impl(__pyx_v_self, ((char const *)__pyx_t_6), __pyx_t_7); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 1051, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1040
 *         return True
 * 
 *     cpdef delattr(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         delattr(self, attr_name)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.delattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr_name_bytes);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18delattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_17delattr, "\n        delattr(self, attr_name)\n        \n        Remove the given attribute if it exists.\n\n        :param attr_name: attribute to remove\n        :type attr_name: str\n        :raises ValueError: if node is not an Element node\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_18delattr = {"delattr", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18delattr, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_17delattr};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18delattr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attr_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("delattr (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1040, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "delattr") < 0)) __PYX_ERR(0, 1040, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_attr_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("delattr", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1040, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.delattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 1040, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_17delattr(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_attr_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_17delattr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delattr", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_delattr(__pyx_v_self, __pyx_v_attr_name, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.delattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1053
 *         self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 * 
 *     def __delitem__(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         __delitem__(self, attr_name)
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_20__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr_name); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__, "\n        __delitem__(self, attr_name)\n\n        Remove the given attribute.\n\n        :param attr_name: attribute to remove\n        :type attr_name: str\n        :raises ValueError: if node is not an Element node\n        :raises KeyError: if node \n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__;
#endif
static int __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_20__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr_name) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__delitem__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 1053, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject*)__pyx_v_attr_name));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name) {
  PyObject *__pyx_v_attr_name_bytes = 0;
  int __pyx_v_ret;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  char const *__pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__delitem__", 1);

  /* "resiliparse_dom/parse/html.pyx":1064
 *         :raises KeyError: if node
 *         """
 *         cdef bytes attr_name_bytes = attr_name.encode()             # <<<<<<<<<<<<<<
 *         cdef bint ret = self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 *         if not ret:
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1064, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1065
 *         """
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bint ret = self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))             # <<<<<<<<<<<<<<
 *         if not ret:
 *             raise KeyError(f'No such attribute: {attr_name}')
 */
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1065, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBytes_AsString(__pyx_v_attr_name_bytes); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 1065, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1065, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_name_bytes); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1065, __pyx_L1_error)
  __pyx_t_4 = ((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self->__pyx_vtab)->_delattr_impl(__pyx_v_self, ((char const *)__pyx_t_2), __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1065, __pyx_L1_error)
  __pyx_v_ret = __pyx_t_4;

  /* "resiliparse_dom/parse/html.pyx":1066
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bint ret = self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 *         if not ret:             # <<<<<<<<<<<<<<
 *             raise KeyError(f'No such attribute: {attr_name}')
 * 
 */
  __pyx_t_4 = (!__pyx_v_ret);
  if (unlikely(__pyx_t_4)) {

    /* "resiliparse_dom/parse/html.pyx":1067
 *         cdef bint ret = self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 *         if not ret:
 *             raise KeyError(f'No such attribute: {attr_name}')             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode query_selector(self, str selector):
 */
    __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_attr_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyUnicode_Concat(__pyx_kp_u_No_such_attribute, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_KeyError, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1067, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1066
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bint ret = self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 *         if not ret:             # <<<<<<<<<<<<<<
 *             raise KeyError(f'No such attribute: {attr_name}')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1053
 *         self._delattr_impl(<const char*>attr_name_bytes, len(attr_name_bytes))
 * 
 *     def __delitem__(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         __delitem__(self, attr_name)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__delitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr_name_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1069
 *             raise KeyError(f'No such attribute: {attr_name}')
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_selector_bytes = 0;
  lxb_dom_node_t *__pyx_v_node;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  char const *__pyx_t_6;
  Py_ssize_t __pyx_t_7;
  lxb_dom_node_t *__pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_query_selector); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1069, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_selector};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1069, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1069, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1081
 *         :rtype: DOMNode or None
 *         """
 *         cdef bytes selector_bytes = selector.encode()             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_node_t* node = query_selector_impl(self.node, self.tree,
 *                                                         <const char*>selector_bytes, len(selector_bytes))
 */
  if (unlikely(__pyx_v_selector == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1081, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_selector, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_selector_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1082
 *         """
 *         cdef bytes selector_bytes = selector.encode()
 *         cdef lxb_dom_node_t* node = query_selector_impl(self.node, self.tree,             # <<<<<<<<<<<<<<
 *                                                         <const char*>selector_bytes, len(selector_bytes))
 *         if not node:
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);

  /* "resiliparse_dom/parse/html.pyx":1083
 *         cdef bytes selector_bytes = selector.encode()
 *         cdef lxb_dom_node_t* node = query_selector_impl(self.node, self.tree,
 *                                                         <const char*>selector_bytes, len(selector_bytes))             # <<<<<<<<<<<<<<
 *         if not node:
 *             return None
 */
  if (unlikely(__pyx_v_selector_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1083, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyBytes_AsString(__pyx_v_selector_bytes); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) __PYX_ERR(0, 1083, __pyx_L1_error)
  if (unlikely(__pyx_v_selector_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1083, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_GET_SIZE(__pyx_v_selector_bytes); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1083, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1082
 *         """
 *         cdef bytes selector_bytes = selector.encode()
 *         cdef lxb_dom_node_t* node = query_selector_impl(self.node, self.tree,             # <<<<<<<<<<<<<<
 *                                                         <const char*>selector_bytes, len(selector_bytes))
 *         if not node:
 */
  __pyx_t_8 = __pyx_f_15resiliparse_dom_5parse_4html_query_selector_impl(__pyx_v_self->node, ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), ((char const *)__pyx_t_6), __pyx_t_7); if (unlikely(__pyx_t_8 == ((lxb_dom_node_t *)((lxb_dom_node_t *)-1L)))) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_node = __pyx_t_8;

  /* "resiliparse_dom/parse/html.pyx":1084
 *         cdef lxb_dom_node_t* node = query_selector_impl(self.node, self.tree,
 *                                                         <const char*>selector_bytes, len(selector_bytes))
 *         if not node:             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, node)
 */
  __pyx_t_9 = (!(__pyx_v_node != 0));
  if (__pyx_t_9) {

    /* "resiliparse_dom/parse/html.pyx":1085
 *                                                         <const char*>selector_bytes, len(selector_bytes))
 *         if not node:
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, node)
 * 
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1084
 *         cdef lxb_dom_node_t* node = query_selector_impl(self.node, self.tree,
 *                                                         <const char*>selector_bytes, len(selector_bytes))
 *         if not node:             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, node)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1086
 *         if not node:
 *             return None
 *         return _create_dom_node(self.tree, node)             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_v_node)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1069
 *             raise KeyError(f'No such attribute: {attr_name}')
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.query_selector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_selector_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_21query_selector, "\n        query_selector(self, selector)\n         \n        Find and return the first element matching the given CSS selector. This is more efficient\n        than matching with :meth:`query_selector_all` and discarding additional elements.\n\n        :param selector: CSS selector\n        :type selector: str\n        :return: matching element or ``None``\n        :rtype: DOMNode or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector = {"query_selector", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_21query_selector};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_selector = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("query_selector (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selector,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selector)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1069, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "query_selector") < 0)) __PYX_ERR(0, 1069, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_selector = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("query_selector", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1069, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.query_selector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_selector), (&PyUnicode_Type), 1, "selector", 1))) __PYX_ERR(0, 1069, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_21query_selector(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_selector);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_21query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector(__pyx_v_self, __pyx_v_selector, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.query_selector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1088
 *         return _create_dom_node(self.tree, node)
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_selector_bytes = 0;
  lxb_dom_collection_t *__pyx_v_coll;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  char const *__pyx_t_6;
  Py_ssize_t __pyx_t_7;
  lxb_dom_collection_t *__pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector_all", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_query_selector_all); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1088, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_selector};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1088, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1088, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1099
 *         :rtype: DOMCollection
 *         """
 *         cdef bytes selector_bytes = selector.encode()             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_collection_t* coll = query_selector_all_impl(self.node, self.tree,
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 */
  if (unlikely(__pyx_v_selector == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1099, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_selector, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_selector_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1100
 *         """
 *         cdef bytes selector_bytes = selector.encode()
 *         cdef lxb_dom_collection_t* coll = query_selector_all_impl(self.node, self.tree,             # <<<<<<<<<<<<<<
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 *         if not coll:
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);

  /* "resiliparse_dom/parse/html.pyx":1101
 *         cdef bytes selector_bytes = selector.encode()
 *         cdef lxb_dom_collection_t* coll = query_selector_all_impl(self.node, self.tree,
 *                                                                   <const char*>selector_bytes, len(selector_bytes))             # <<<<<<<<<<<<<<
 *         if not coll:
 *             raise RuntimeError('Failed to match elements by CSS selector')
 */
  if (unlikely(__pyx_v_selector_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1101, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyBytes_AsString(__pyx_v_selector_bytes); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) __PYX_ERR(0, 1101, __pyx_L1_error)
  if (unlikely(__pyx_v_selector_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1101, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_GET_SIZE(__pyx_v_selector_bytes); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1101, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1100
 *         """
 *         cdef bytes selector_bytes = selector.encode()
 *         cdef lxb_dom_collection_t* coll = query_selector_all_impl(self.node, self.tree,             # <<<<<<<<<<<<<<
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 *         if not coll:
 */
  __pyx_t_8 = __pyx_f_15resiliparse_dom_5parse_4html_query_selector_all_impl(__pyx_v_self->node, ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), ((char const *)__pyx_t_6), __pyx_t_7, NULL); if (unlikely(__pyx_t_8 == ((lxb_dom_collection_t *)((lxb_dom_collection_t *)-1L)))) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_coll = __pyx_t_8;

  /* "resiliparse_dom/parse/html.pyx":1102
 *         cdef lxb_dom_collection_t* coll = query_selector_all_impl(self.node, self.tree,
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 *         if not coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Failed to match elements by CSS selector')
 * 
 */
  __pyx_t_9 = (!(__pyx_v_coll != 0));
  if (unlikely(__pyx_t_9)) {

    /* "resiliparse_dom/parse/html.pyx":1103
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 *         if not coll:
 *             raise RuntimeError('Failed to match elements by CSS selector')             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_collection(self.tree, coll)
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1103, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1102
 *         cdef lxb_dom_collection_t* coll = query_selector_all_impl(self.node, self.tree,
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 *         if not coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Failed to match elements by CSS selector')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1105
 *             raise RuntimeError('Failed to match elements by CSS selector')
 * 
 *         return _create_dom_collection(self.tree, coll)             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint matches(self, str selector) except -1:
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_v_coll)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1088
 *         return _create_dom_node(self.tree, node)
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.query_selector_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_selector_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_23query_selector_all, "\n        query_selector_all(self, selector)\n        \n        Find all elements matching the given CSS selector and return a :class:`DOMCollection` with the results.\n\n        :param selector: CSS selector\n        :type selector: str\n        :return: collection of matching elements\n        :rtype: DOMCollection\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all = {"query_selector_all", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_23query_selector_all};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_selector = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("query_selector_all (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selector,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selector)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1088, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "query_selector_all") < 0)) __PYX_ERR(0, 1088, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_selector = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("query_selector_all", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1088, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.query_selector_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_selector), (&PyUnicode_Type), 1, "selector", 1))) __PYX_ERR(0, 1088, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_23query_selector_all(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_selector);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_23query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector_all", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector_all(__pyx_v_self, __pyx_v_selector, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.query_selector_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1107
 *         return _create_dom_collection(self.tree, coll)
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_26matches(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_selector_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  char const *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("matches", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_matches); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_26matches)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_selector};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1107, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1119
 *         :rtype: bool
 *         """
 *         self.tree.init_css_parser()             # <<<<<<<<<<<<<<
 *         cdef bytes selector_bytes = selector.encode()
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))
 */
  __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(__pyx_v_self->tree);

  /* "resiliparse_dom/parse/html.pyx":1120
 *         """
 *         self.tree.init_css_parser()
 *         cdef bytes selector_bytes = selector.encode()             # <<<<<<<<<<<<<<
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))
 * 
 */
  if (unlikely(__pyx_v_selector == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1120, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_selector, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_selector_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1121
 *         self.tree.init_css_parser()
 *         cdef bytes selector_bytes = selector.encode()
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_v_selector_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1121, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_AsString(__pyx_v_selector_bytes); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 1121, __pyx_L1_error)
  if (unlikely(__pyx_v_selector_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1121, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_GET_SIZE(__pyx_v_selector_bytes); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1121, __pyx_L1_error)
  __pyx_r = __pyx_f_15resiliparse_dom_5parse_4html_matches_impl(__pyx_v_self->node, ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), ((char const *)__pyx_t_7), __pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1107
 *         return _create_dom_collection(self.tree, coll)
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.matches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_selector_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_26matches(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_25matches, "\n        matches(self, selector)\n        \n        Check whether any element in the DOM tree matches the given CSS selector. This is more efficient\n        than matching with :meth:`query_selector_all` and checking the size of the returned collection.\n\n        :param selector: CSS selector\n        :type selector: str\n        :return: boolean value indicating whether a matching element exists\n        :rtype: bool\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_26matches = {"matches", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_26matches, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_25matches};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_26matches(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_selector = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("matches (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selector,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selector)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "matches") < 0)) __PYX_ERR(0, 1107, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_selector = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("matches", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1107, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.matches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_selector), (&PyUnicode_Type), 1, "selector", 1))) __PYX_ERR(0, 1107, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_25matches(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_selector);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_25matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_selector) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("matches", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_matches(__pyx_v_self, __pyx_v_selector, 1); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 1107, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.matches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1123
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr *__pyx_optional_args) {
  int __pyx_v_case_insensitive = ((int)0);
  PyObject *__pyx_v_attr_name_bytes = 0;
  PyObject *__pyx_v_attr_value_bytes = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  char const *__pyx_t_8;
  Py_ssize_t __pyx_t_9;
  char const *__pyx_t_10;
  Py_ssize_t __pyx_t_11;
  lxb_dom_collection_t *__pyx_t_12;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_attr", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_elements_by_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1123, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1123, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_v_attr_name, __pyx_v_attr_value, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1123, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1123, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1139
 *         :rtype: DOMCollection or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_7) {

    /* "resiliparse_dom/parse/html.pyx":1140
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1139
 *         :rtype: DOMCollection or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1142
 *             return None
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()             # <<<<<<<<<<<<<<
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         return _create_dom_collection(self.tree,
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1142, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1143
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bytes attr_value_bytes = attr_value.encode()             # <<<<<<<<<<<<<<
 *         return _create_dom_collection(self.tree,
 *                                       get_elements_by_attr_impl(self.node,
 */
  if (unlikely(__pyx_v_attr_value == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1143, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_value, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_value_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1144
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         return _create_dom_collection(self.tree,             # <<<<<<<<<<<<<<
 *                                       get_elements_by_attr_impl(self.node,
 *                                                                 <const char*>attr_name_bytes, len(attr_name_bytes),
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);

  /* "resiliparse_dom/parse/html.pyx":1146
 *         return _create_dom_collection(self.tree,
 *                                       get_elements_by_attr_impl(self.node,
 *                                                                 <const char*>attr_name_bytes, len(attr_name_bytes),             # <<<<<<<<<<<<<<
 *                                                                 <const char*>attr_value_bytes, len(attr_value_bytes),
 *                                                                 10, case_insensitive))
 */
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1146, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_AsString(__pyx_v_attr_name_bytes); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) __PYX_ERR(0, 1146, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1146, __pyx_L1_error)
  }
  __pyx_t_9 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_name_bytes); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1146, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1147
 *                                       get_elements_by_attr_impl(self.node,
 *                                                                 <const char*>attr_name_bytes, len(attr_name_bytes),
 *                                                                 <const char*>attr_value_bytes, len(attr_value_bytes),             # <<<<<<<<<<<<<<
 *                                                                 10, case_insensitive))
 * 
 */
  if (unlikely(__pyx_v_attr_value_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1147, __pyx_L1_error)
  }
  __pyx_t_10 = __Pyx_PyBytes_AsString(__pyx_v_attr_value_bytes); if (unlikely((!__pyx_t_10) && PyErr_Occurred())) __PYX_ERR(0, 1147, __pyx_L1_error)
  if (unlikely(__pyx_v_attr_value_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1147, __pyx_L1_error)
  }
  __pyx_t_11 = __Pyx_PyBytes_GET_SIZE(__pyx_v_attr_value_bytes); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1147, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1145
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         return _create_dom_collection(self.tree,
 *                                       get_elements_by_attr_impl(self.node,             # <<<<<<<<<<<<<<
 *                                                                 <const char*>attr_name_bytes, len(attr_name_bytes),
 *                                                                 <const char*>attr_value_bytes, len(attr_value_bytes),
 */
  __pyx_t_13.__pyx_n = 2;
  __pyx_t_13.init_size = 10;
  __pyx_t_13.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_12 = __pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl(__pyx_v_self->node, ((char const *)__pyx_t_8), __pyx_t_9, ((char const *)__pyx_t_10), __pyx_t_11, &__pyx_t_13); 

  /* "resiliparse_dom/parse/html.pyx":1144
 *         cdef bytes attr_name_bytes = attr_name.encode()
 *         cdef bytes attr_value_bytes = attr_value.encode()
 *         return _create_dom_collection(self.tree,             # <<<<<<<<<<<<<<
 *                                       get_elements_by_attr_impl(self.node,
 *                                                                 <const char*>attr_name_bytes, len(attr_name_bytes),
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_t_12)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1123
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr_name_bytes);
  __Pyx_XDECREF(__pyx_v_attr_value_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_27get_elements_by_attr, "\n        get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)\n        \n        Find all elements matching the given arbitrary attribute name and value and return a\n        :class:`DOMCollection` with the results.\n        \n        :param attr_name: attribute name\n        :type attr_name: str\n        :param attr_value: attribute value\n        :type attr_name: str\n        :param case_insensitive: match attribute value case-insensitively\n        :type case_insensitive: bool\n        :return: collection of matching elements\n        :rtype: DOMCollection or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr = {"get_elements_by_attr", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_27get_elements_by_attr};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attr_name = 0;
  PyObject *__pyx_v_attr_value = 0;
  int __pyx_v_case_insensitive;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elements_by_attr (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr_name,&__pyx_n_s_attr_value,&__pyx_n_s_case_insensitive,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1123, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_value)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1123, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("get_elements_by_attr", 0, 2, 3, 1); __PYX_ERR(0, 1123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_case_insensitive);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1123, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_elements_by_attr") < 0)) __PYX_ERR(0, 1123, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_attr_name = ((PyObject*)values[0]);
    __pyx_v_attr_value = ((PyObject*)values[1]);
    if (values[2]) {
      __pyx_v_case_insensitive = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_case_insensitive == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1123, __pyx_L3_error)
    } else {
      __pyx_v_case_insensitive = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_elements_by_attr", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 1123, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 1123, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_value), (&PyUnicode_Type), 1, "attr_value", 1))) __PYX_ERR(0, 1123, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_27get_elements_by_attr(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_attr_name, __pyx_v_attr_value, __pyx_v_case_insensitive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_27get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_v_case_insensitive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_attr", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode->get_elements_by_attr(__pyx_v_self, __pyx_v_attr_name, __pyx_v_attr_value, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1150
 *                                                                 10, case_insensitive))
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id *__pyx_optional_args) {
  int __pyx_v_case_insensitive = ((int)0);
  PyObject *__pyx_v_element_id_bytes = 0;
  lxb_dom_node_t *__pyx_v_result_node;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  char const *__pyx_t_8;
  Py_ssize_t __pyx_t_9;
  lxb_dom_node_t *__pyx_t_10;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_element_by_id", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_element_by_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1150, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1150, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_element_id, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1150, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1150, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1163
 *         :rtype: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_7) {

    /* "resiliparse_dom/parse/html.pyx":1164
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes element_id_bytes = element_id.encode()
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1163
 *         :rtype: DOMNode or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1166
 *             return None
 * 
 *         cdef bytes element_id_bytes = element_id.encode()             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_node_t* result_node = get_element_by_id_impl(self.node,
 *                                                                   <const char*>element_id_bytes, len(element_id_bytes),
 */
  if (unlikely(__pyx_v_element_id == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1166, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_element_id, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_element_id_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1168
 *         cdef bytes element_id_bytes = element_id.encode()
 *         cdef lxb_dom_node_t* result_node = get_element_by_id_impl(self.node,
 *                                                                   <const char*>element_id_bytes, len(element_id_bytes),             # <<<<<<<<<<<<<<
 *                                                                   case_insensitive)
 *         if not result_node:
 */
  if (unlikely(__pyx_v_element_id_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1168, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_AsString(__pyx_v_element_id_bytes); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) __PYX_ERR(0, 1168, __pyx_L1_error)
  if (unlikely(__pyx_v_element_id_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1168, __pyx_L1_error)
  }
  __pyx_t_9 = __Pyx_PyBytes_GET_SIZE(__pyx_v_element_id_bytes); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1168, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1167
 * 
 *         cdef bytes element_id_bytes = element_id.encode()
 *         cdef lxb_dom_node_t* result_node = get_element_by_id_impl(self.node,             # <<<<<<<<<<<<<<
 *                                                                   <const char*>element_id_bytes, len(element_id_bytes),
 *                                                                   case_insensitive)
 */
  __pyx_t_11.__pyx_n = 1;
  __pyx_t_11.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_10 = __pyx_f_15resiliparse_dom_5parse_4html_get_element_by_id_impl(__pyx_v_self->node, ((char const *)__pyx_t_8), __pyx_t_9, &__pyx_t_11); 
  __pyx_v_result_node = __pyx_t_10;

  /* "resiliparse_dom/parse/html.pyx":1170
 *                                                                   <const char*>element_id_bytes, len(element_id_bytes),
 *                                                                   case_insensitive)
 *         if not result_node:             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, result_node)
 */
  __pyx_t_7 = (!(__pyx_v_result_node != 0));
  if (__pyx_t_7) {

    /* "resiliparse_dom/parse/html.pyx":1171
 *                                                                   case_insensitive)
 *         if not result_node:
 *             return None             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self.tree, result_node)
 * 
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1170
 *                                                                   <const char*>element_id_bytes, len(element_id_bytes),
 *                                                                   case_insensitive)
 *         if not result_node:             # <<<<<<<<<<<<<<
 *             return None
 *         return _create_dom_node(self.tree, result_node)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1172
 *         if not result_node:
 *             return None
 *         return _create_dom_node(self.tree, result_node)             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_v_result_node)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1150
 *                                                                 10, case_insensitive))
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_element_by_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_element_id_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_29get_element_by_id, "\n        get_element_by_id(self, element_id, case_insensitive=False)\n        \n        Find and return the element whose ID attribute matches ``element_id``.\n        \n        :param element_id: element ID\n        :type element_id: str\n        :param case_insensitive: match ID case-insensitively\n        :type case_insensitive: bool\n        :return: matching element or ``None`` if no such element exists\n        :rtype: DOMNode or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id = {"get_element_by_id", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_29get_element_by_id};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_element_id = 0;
  int __pyx_v_case_insensitive;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_element_by_id (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_element_id,&__pyx_n_s_case_insensitive,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_element_id)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1150, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_case_insensitive);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1150, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_element_by_id") < 0)) __PYX_ERR(0, 1150, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_element_id = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_case_insensitive = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_case_insensitive == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1150, __pyx_L3_error)
    } else {
      __pyx_v_case_insensitive = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_element_by_id", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1150, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_element_by_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_element_id), (&PyUnicode_Type), 1, "element_id", 1))) __PYX_ERR(0, 1150, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_29get_element_by_id(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_element_id, __pyx_v_case_insensitive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_29get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_v_case_insensitive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_element_by_id", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode->get_element_by_id(__pyx_v_self, __pyx_v_element_id, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_element_by_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1174
 *         return _create_dom_node(self.tree, result_node)
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name *__pyx_optional_args) {
  int __pyx_v_case_insensitive = ((int)0);
  PyObject *__pyx_v_class_name_bytes = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  char const *__pyx_t_8;
  Py_ssize_t __pyx_t_9;
  lxb_dom_collection_t *__pyx_t_10;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_class_name", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_elements_by_class_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_class_name, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1174, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1174, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1187
 *         :rtype: DOMCollection or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_7) {

    /* "resiliparse_dom/parse/html.pyx":1188
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes class_name_bytes = class_name.encode()
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1187
 *         :rtype: DOMCollection or None
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1190
 *             return None
 * 
 *         cdef bytes class_name_bytes = class_name.encode()             # <<<<<<<<<<<<<<
 *         return _create_dom_collection(self.tree, get_elements_by_class_name_impl(self.node,
 *                                                                                  <const char*>class_name_bytes,
 */
  if (unlikely(__pyx_v_class_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1190, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_class_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_class_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1191
 * 
 *         cdef bytes class_name_bytes = class_name.encode()
 *         return _create_dom_collection(self.tree, get_elements_by_class_name_impl(self.node,             # <<<<<<<<<<<<<<
 *                                                                                  <const char*>class_name_bytes,
 *                                                                                  len(class_name_bytes), 10))
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);

  /* "resiliparse_dom/parse/html.pyx":1192
 *         cdef bytes class_name_bytes = class_name.encode()
 *         return _create_dom_collection(self.tree, get_elements_by_class_name_impl(self.node,
 *                                                                                  <const char*>class_name_bytes,             # <<<<<<<<<<<<<<
 *                                                                                  len(class_name_bytes), 10))
 * 
 */
  if (unlikely(__pyx_v_class_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1192, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_AsString(__pyx_v_class_name_bytes); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) __PYX_ERR(0, 1192, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1193
 *         return _create_dom_collection(self.tree, get_elements_by_class_name_impl(self.node,
 *                                                                                  <const char*>class_name_bytes,
 *                                                                                  len(class_name_bytes), 10))             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):
 */
  if (unlikely(__pyx_v_class_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1193, __pyx_L1_error)
  }
  __pyx_t_9 = __Pyx_PyBytes_GET_SIZE(__pyx_v_class_name_bytes); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1193, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1191
 * 
 *         cdef bytes class_name_bytes = class_name.encode()
 *         return _create_dom_collection(self.tree, get_elements_by_class_name_impl(self.node,             # <<<<<<<<<<<<<<
 *                                                                                  <const char*>class_name_bytes,
 *                                                                                  len(class_name_bytes), 10))
 */
  __pyx_t_11.__pyx_n = 1;
  __pyx_t_11.init_size = 10;
  __pyx_t_10 = __pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl(__pyx_v_self->node, ((char const *)__pyx_t_8), __pyx_t_9, &__pyx_t_11); 
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_t_10)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1174
 *         return _create_dom_node(self.tree, result_node)
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_class_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_class_name_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_31get_elements_by_class_name, "\n        get_elements_by_class_name(self, element_class, case_insensitive=False)\n        \n        Find all elements matching the given class name and return a :class:`DOMCollection` with the results.\n        \n        :param class_name: element class\n        :type class_name: str\n        :param case_insensitive: match class name case-insensitively\n        :type case_insensitive: bool\n        :return: collection of matching elements\n        :rtype: DOMCollection or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name = {"get_elements_by_class_name", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_31get_elements_by_class_name};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_class_name = 0;
  int __pyx_v_case_insensitive;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elements_by_class_name (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_class_name,&__pyx_n_s_case_insensitive,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_class_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_case_insensitive);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_elements_by_class_name") < 0)) __PYX_ERR(0, 1174, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_class_name = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_case_insensitive = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_case_insensitive == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
    } else {
      __pyx_v_case_insensitive = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_elements_by_class_name", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1174, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_class_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_class_name), (&PyUnicode_Type), 1, "class_name", 1))) __PYX_ERR(0, 1174, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_31get_elements_by_class_name(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_class_name, __pyx_v_case_insensitive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_31get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_v_case_insensitive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_class_name", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode->get_elements_by_class_name(__pyx_v_self, __pyx_v_class_name, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_class_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1195
 *                                                                                  len(class_name_bytes), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_tag_name, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_tag_name_bytes = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  char const *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_tag_name", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_elements_by_tag_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1195, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_tag_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1195, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1195, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1206
 *         :rtype: DOMCollection
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_6 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":1207
 *         """
 *         if not check_node(self):
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)Py_None); __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1206
 *         :rtype: DOMCollection
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1209
 *             return None
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()             # <<<<<<<<<<<<<<
 *         return _create_dom_collection(self.tree, get_elements_by_tag_name_impl(self.node,
 *                                                                                <const char*>tag_name_bytes,
 */
  if (unlikely(__pyx_v_tag_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1209, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_tag_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tag_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1210
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()
 *         return _create_dom_collection(self.tree, get_elements_by_tag_name_impl(self.node,             # <<<<<<<<<<<<<<
 *                                                                                <const char*>tag_name_bytes,
 *                                                                                len(tag_name_bytes)))
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_1);

  /* "resiliparse_dom/parse/html.pyx":1211
 *         cdef bytes tag_name_bytes = tag_name.encode()
 *         return _create_dom_collection(self.tree, get_elements_by_tag_name_impl(self.node,
 *                                                                                <const char*>tag_name_bytes,             # <<<<<<<<<<<<<<
 *                                                                                len(tag_name_bytes)))
 * 
 */
  if (unlikely(__pyx_v_tag_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1211, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_AsString(__pyx_v_tag_name_bytes); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 1211, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1212
 *         return _create_dom_collection(self.tree, get_elements_by_tag_name_impl(self.node,
 *                                                                                <const char*>tag_name_bytes,
 *                                                                                len(tag_name_bytes)))             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode append_child(self, DOMNode node):
 */
  if (unlikely(__pyx_v_tag_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1212, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_GET_SIZE(__pyx_v_tag_name_bytes); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1212, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1210
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()
 *         return _create_dom_collection(self.tree, get_elements_by_tag_name_impl(self.node,             # <<<<<<<<<<<<<<
 *                                                                                <const char*>tag_name_bytes,
 *                                                                                len(tag_name_bytes)))
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_tag_name_impl(__pyx_v_self->node, ((char const *)__pyx_t_7), __pyx_t_8))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1195
 *                                                                                  len(class_name_bytes), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_tag_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tag_name_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_33get_elements_by_tag_name, "\n        get_elements_by_tag_name(self, tag_name)\n        \n        Find all elements with the given tag name and return a :class:`DOMCollection` with the results.\n        \n        :param tag_name: tag name for matching elements\n        :type tag_name: str\n        :return: collection of matching elements\n        :rtype: DOMCollection\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name = {"get_elements_by_tag_name", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_33get_elements_by_tag_name};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_tag_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elements_by_tag_name (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tag_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1195, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_elements_by_tag_name") < 0)) __PYX_ERR(0, 1195, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_tag_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_elements_by_tag_name", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1195, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_tag_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tag_name), (&PyUnicode_Type), 1, "tag_name", 1))) __PYX_ERR(0, 1195, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_33get_elements_by_tag_name(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_tag_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_33get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_tag_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_tag_name", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_tag_name(__pyx_v_self, __pyx_v_tag_name, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.get_elements_by_tag_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1214
 *                                                                                len(tag_name_bytes)))
 * 
 *     cpdef DOMNode append_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         append_child(self, node)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_36append_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_append_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, int __pyx_skip_dispatch) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("append_child", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_append_child); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1214, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_36append_child)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, ((PyObject *)__pyx_v_node)};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1214, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1214, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1226
 *         :raises ValueError: if trying to append node to itself
 *         """
 *         if not check_node(self) or not check_node(node):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Append operation on uninitialized node')
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_node));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1227
 *         """
 *         if not check_node(self) or not check_node(node):
 *             raise RuntimeError('Append operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node == self.node:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1227, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1226
 *         :raises ValueError: if trying to append node to itself
 *         """
 *         if not check_node(self) or not check_node(node):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Append operation on uninitialized node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1229
 *             raise RuntimeError('Append operation on uninitialized node')
 * 
 *         if node.node == self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Trying to append child to itself')
 * 
 */
  __pyx_t_6 = (__pyx_v_node->node == __pyx_v_self->node);
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1230
 * 
 *         if node.node == self.node:
 *             raise ValueError('Trying to append child to itself')             # <<<<<<<<<<<<<<
 * 
 *         if node.node.parent:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1230, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1229
 *             raise RuntimeError('Append operation on uninitialized node')
 * 
 *         if node.node == self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Trying to append child to itself')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1232
 *             raise ValueError('Trying to append child to itself')
 * 
 *         if node.node.parent:             # <<<<<<<<<<<<<<
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_child(self.node, node.node)
 */
  __pyx_t_6 = (__pyx_v_node->node->parent != 0);
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":1233
 * 
 *         if node.node.parent:
 *             lxb_dom_node_remove(node.node)             # <<<<<<<<<<<<<<
 *         lxb_dom_node_insert_child(self.node, node.node)
 *         return node
 */
    lxb_dom_node_remove(__pyx_v_node->node);

    /* "resiliparse_dom/parse/html.pyx":1232
 *             raise ValueError('Trying to append child to itself')
 * 
 *         if node.node.parent:             # <<<<<<<<<<<<<<
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_child(self.node, node.node)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1234
 *         if node.node.parent:
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_child(self.node, node.node)             # <<<<<<<<<<<<<<
 *         return node
 * 
 */
  lxb_dom_node_insert_child(__pyx_v_self->node, __pyx_v_node->node);

  /* "resiliparse_dom/parse/html.pyx":1235
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_child(self.node, node.node)
 *         return node             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode insert_before(self, DOMNode node, DOMNode reference):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_node);
  __pyx_r = __pyx_v_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1214
 *                                                                                len(tag_name_bytes)))
 * 
 *     cpdef DOMNode append_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         append_child(self, node)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.append_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_36append_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_35append_child, "\n        append_child(self, node)\n        \n        Append a new child node to this DOM node.\n        \n        :param node: DOM node to append as new child node\n        :type node: DOMNode\n        :return: the appended child node\n        :rtype: DOMNode\n        :raises ValueError: if trying to append node to itself\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_36append_child = {"append_child", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_36append_child, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_35append_child};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_36append_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("append_child (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_node)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1214, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "append_child") < 0)) __PYX_ERR(0, 1214, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("append_child", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1214, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.append_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "node", 0))) __PYX_ERR(0, 1214, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_35append_child(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_node);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_35append_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("append_child", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_append_child(__pyx_v_self, __pyx_v_node, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.append_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1237
 *         return node
 * 
 *     cpdef DOMNode insert_before(self, DOMNode node, DOMNode reference):             # <<<<<<<<<<<<<<
 *         """
 *         insert_before(self, node, reference)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_insert_before(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_reference, int __pyx_skip_dispatch) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("insert_before", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_insert_before); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_4, ((PyObject *)__pyx_v_node), ((PyObject *)__pyx_v_reference)};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1237, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1237, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1253
 *         :raises ValueError: if trying to add node as its own child or if ``reference`` is not a child
 *         """
 *         if not check_node(self) or not check_node(node) or not check_node(reference):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Insert operation on uninitialized node')
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_node));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_reference));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1254
 *         """
 *         if not check_node(self) or not check_node(node) or not check_node(reference):
 *             raise RuntimeError('Insert operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node == self.node:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1254, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1253
 *         :raises ValueError: if trying to add node as its own child or if ``reference`` is not a child
 *         """
 *         if not check_node(self) or not check_node(node) or not check_node(reference):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Insert operation on uninitialized node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1256
 *             raise RuntimeError('Insert operation on uninitialized node')
 * 
 *         if node.node == self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Trying to insert node as its own child')
 * 
 */
  __pyx_t_6 = (__pyx_v_node->node == __pyx_v_self->node);
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1257
 * 
 *         if node.node == self.node:
 *             raise ValueError('Trying to insert node as its own child')             # <<<<<<<<<<<<<<
 * 
 *         if reference.node.parent != self.node:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1257, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1256
 *             raise RuntimeError('Insert operation on uninitialized node')
 * 
 *         if node.node == self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Trying to insert node as its own child')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1259
 *             raise ValueError('Trying to insert node as its own child')
 * 
 *         if reference.node.parent != self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Reference node must be a child node')
 * 
 */
  __pyx_t_6 = (__pyx_v_reference->node->parent != __pyx_v_self->node);
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1260
 * 
 *         if reference.node.parent != self.node:
 *             raise ValueError('Reference node must be a child node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node.parent:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1260, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1259
 *             raise ValueError('Trying to insert node as its own child')
 * 
 *         if reference.node.parent != self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Reference node must be a child node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1262
 *             raise ValueError('Reference node must be a child node')
 * 
 *         if node.node.parent:             # <<<<<<<<<<<<<<
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_before(reference.node, node.node)
 */
  __pyx_t_6 = (__pyx_v_node->node->parent != 0);
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":1263
 * 
 *         if node.node.parent:
 *             lxb_dom_node_remove(node.node)             # <<<<<<<<<<<<<<
 *         lxb_dom_node_insert_before(reference.node, node.node)
 *         return node
 */
    lxb_dom_node_remove(__pyx_v_node->node);

    /* "resiliparse_dom/parse/html.pyx":1262
 *             raise ValueError('Reference node must be a child node')
 * 
 *         if node.node.parent:             # <<<<<<<<<<<<<<
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_before(reference.node, node.node)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1264
 *         if node.node.parent:
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_before(reference.node, node.node)             # <<<<<<<<<<<<<<
 *         return node
 * 
 */
  lxb_dom_node_insert_before(__pyx_v_reference->node, __pyx_v_node->node);

  /* "resiliparse_dom/parse/html.pyx":1265
 *             lxb_dom_node_remove(node.node)
 *         lxb_dom_node_insert_before(reference.node, node.node)
 *         return node             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode replace_child(self, DOMNode new_child, DOMNode old_child):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_node);
  __pyx_r = __pyx_v_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1237
 *         return node
 * 
 *     cpdef DOMNode insert_before(self, DOMNode node, DOMNode reference):             # <<<<<<<<<<<<<<
 *         """
 *         insert_before(self, node, reference)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.insert_before", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_37insert_before, "\n        insert_before(self, node, reference)\n        \n        Insert ``node`` before ``reference`` as a new child node. The reference node must be\n        a child of this node or ``None``. If ``reference`` is ``None``, the new node\n        will be appended after the last child node.\n        \n        :param node: DOM node to insert as new child node\n        :type node: DOMNode\n        :param reference: child node before which to insert the new node or ``None``\n        :type reference: DOMNode\n        :return: the inserted child node\n        :rtype: DOMNode\n        :raises ValueError: if trying to add node as its own child or if ``reference`` is not a child\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before = {"insert_before", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_37insert_before};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_reference = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("insert_before (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,&__pyx_n_s_reference,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_node)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1237, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reference)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1237, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("insert_before", 1, 2, 2, 1); __PYX_ERR(0, 1237, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "insert_before") < 0)) __PYX_ERR(0, 1237, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[0]);
    __pyx_v_reference = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("insert_before", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1237, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.insert_before", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "node", 0))) __PYX_ERR(0, 1237, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reference), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "reference", 0))) __PYX_ERR(0, 1237, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_37insert_before(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_node, __pyx_v_reference);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_37insert_before(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_reference) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("insert_before", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_insert_before(__pyx_v_self, __pyx_v_node, __pyx_v_reference, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.insert_before", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1267
 *         return node
 * 
 *     cpdef DOMNode replace_child(self, DOMNode new_child, DOMNode old_child):             # <<<<<<<<<<<<<<
 *         """
 *         replace_child(self, new_child, old_child)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_replace_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_new_child, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_old_child, int __pyx_skip_dispatch) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("replace_child", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_replace_child); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1267, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_4, ((PyObject *)__pyx_v_new_child), ((PyObject *)__pyx_v_old_child)};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1267, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1267, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1281
 *         :raises ValueError: if ``old_child`` is not a child of this node
 *         """
 *         if not check_node(self) or not check_node(new_child) or not check_node(old_child):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Replace operation on uninitialized node')
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_new_child));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_old_child));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1282
 *         """
 *         if not check_node(self) or not check_node(new_child) or not check_node(old_child):
 *             raise RuntimeError('Replace operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if old_child.node.parent != self.node:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1282, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1281
 *         :raises ValueError: if ``old_child`` is not a child of this node
 *         """
 *         if not check_node(self) or not check_node(new_child) or not check_node(old_child):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Replace operation on uninitialized node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1284
 *             raise RuntimeError('Replace operation on uninitialized node')
 * 
 *         if old_child.node.parent != self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Node is not a child of the current node')
 * 
 */
  __pyx_t_6 = (__pyx_v_old_child->node->parent != __pyx_v_self->node);
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1285
 * 
 *         if old_child.node.parent != self.node:
 *             raise ValueError('Node is not a child of the current node')             # <<<<<<<<<<<<<<
 * 
 *         if new_child.node == old_child.node:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1285, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1284
 *             raise RuntimeError('Replace operation on uninitialized node')
 * 
 *         if old_child.node.parent != self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Node is not a child of the current node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1287
 *             raise ValueError('Node is not a child of the current node')
 * 
 *         if new_child.node == old_child.node:             # <<<<<<<<<<<<<<
 *             return old_child
 * 
 */
  __pyx_t_6 = (__pyx_v_new_child->node == __pyx_v_old_child->node);
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":1288
 * 
 *         if new_child.node == old_child.node:
 *             return old_child             # <<<<<<<<<<<<<<
 * 
 *         if new_child.node.parent:
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __Pyx_INCREF((PyObject *)__pyx_v_old_child);
    __pyx_r = __pyx_v_old_child;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1287
 *             raise ValueError('Node is not a child of the current node')
 * 
 *         if new_child.node == old_child.node:             # <<<<<<<<<<<<<<
 *             return old_child
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1290
 *             return old_child
 * 
 *         if new_child.node.parent:             # <<<<<<<<<<<<<<
 *             lxb_dom_node_remove(new_child.node)
 *         lxb_dom_node_insert_after(old_child.node, new_child.node)
 */
  __pyx_t_6 = (__pyx_v_new_child->node->parent != 0);
  if (__pyx_t_6) {

    /* "resiliparse_dom/parse/html.pyx":1291
 * 
 *         if new_child.node.parent:
 *             lxb_dom_node_remove(new_child.node)             # <<<<<<<<<<<<<<
 *         lxb_dom_node_insert_after(old_child.node, new_child.node)
 *         lxb_dom_node_remove(old_child.node)
 */
    lxb_dom_node_remove(__pyx_v_new_child->node);

    /* "resiliparse_dom/parse/html.pyx":1290
 *             return old_child
 * 
 *         if new_child.node.parent:             # <<<<<<<<<<<<<<
 *             lxb_dom_node_remove(new_child.node)
 *         lxb_dom_node_insert_after(old_child.node, new_child.node)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1292
 *         if new_child.node.parent:
 *             lxb_dom_node_remove(new_child.node)
 *         lxb_dom_node_insert_after(old_child.node, new_child.node)             # <<<<<<<<<<<<<<
 *         lxb_dom_node_remove(old_child.node)
 * 
 */
  lxb_dom_node_insert_after(__pyx_v_old_child->node, __pyx_v_new_child->node);

  /* "resiliparse_dom/parse/html.pyx":1293
 *             lxb_dom_node_remove(new_child.node)
 *         lxb_dom_node_insert_after(old_child.node, new_child.node)
 *         lxb_dom_node_remove(old_child.node)             # <<<<<<<<<<<<<<
 * 
 *         return old_child
 */
  lxb_dom_node_remove(__pyx_v_old_child->node);

  /* "resiliparse_dom/parse/html.pyx":1295
 *         lxb_dom_node_remove(old_child.node)
 * 
 *         return old_child             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode remove_child(self, DOMNode node):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_old_child);
  __pyx_r = __pyx_v_old_child;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1267
 *         return node
 * 
 *     cpdef DOMNode replace_child(self, DOMNode new_child, DOMNode old_child):             # <<<<<<<<<<<<<<
 *         """
 *         replace_child(self, new_child, old_child)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.replace_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_39replace_child, "\n        replace_child(self, new_child, old_child)\n        \n        Replace the child node ``old_child`` with ``new_child``.\n        \n        :param new_child: new child node to insert\n        :type new_child: DOMNode\n        :param old_child: old child node to replace\n        :type old_child: DOMNode\n        :return: the old child node\n        :rtype: DOMNode\n        :raises ValueError: if ``old_child`` is not a child of this node\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child = {"replace_child", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_39replace_child};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_new_child = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_old_child = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("replace_child (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_new_child,&__pyx_n_s_old_child,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_new_child)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_old_child)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("replace_child", 1, 2, 2, 1); __PYX_ERR(0, 1267, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "replace_child") < 0)) __PYX_ERR(0, 1267, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_new_child = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[0]);
    __pyx_v_old_child = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("replace_child", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1267, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.replace_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_new_child), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "new_child", 0))) __PYX_ERR(0, 1267, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_old_child), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "old_child", 0))) __PYX_ERR(0, 1267, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_39replace_child(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_new_child, __pyx_v_old_child);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_39replace_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_new_child, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_old_child) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("replace_child", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_replace_child(__pyx_v_self, __pyx_v_new_child, __pyx_v_old_child, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.replace_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1297
 *         return old_child
 * 
 *     cpdef DOMNode remove_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         remove_child(self, node)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_remove_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node, int __pyx_skip_dispatch) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_child", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_child); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1297, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, ((PyObject *)__pyx_v_node)};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1297, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1297, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1309
 *         :raises ValueError: if ``node`` is not a child of this node
 *         """
 *         if not check_node(self) or not check_node(node):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Remove operation on uninitialized node')
 * 
 */
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_node));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1310
 *         """
 *         if not check_node(self) or not check_node(node):
 *             raise RuntimeError('Remove operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node.parent != self.node:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1310, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1309
 *         :raises ValueError: if ``node`` is not a child of this node
 *         """
 *         if not check_node(self) or not check_node(node):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Remove operation on uninitialized node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1312
 *             raise RuntimeError('Remove operation on uninitialized node')
 * 
 *         if node.node.parent != self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Node is not a child of the current node')
 * 
 */
  __pyx_t_6 = (__pyx_v_node->node->parent != __pyx_v_self->node);
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1313
 * 
 *         if node.node.parent != self.node:
 *             raise ValueError('Node is not a child of the current node')             # <<<<<<<<<<<<<<
 * 
 *         lxb_dom_node_remove(node.node)
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1313, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1313, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1312
 *             raise RuntimeError('Remove operation on uninitialized node')
 * 
 *         if node.node.parent != self.node:             # <<<<<<<<<<<<<<
 *             raise ValueError('Node is not a child of the current node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1315
 *             raise ValueError('Node is not a child of the current node')
 * 
 *         lxb_dom_node_remove(node.node)             # <<<<<<<<<<<<<<
 *         return node
 * 
 */
  lxb_dom_node_remove(__pyx_v_node->node);

  /* "resiliparse_dom/parse/html.pyx":1316
 * 
 *         lxb_dom_node_remove(node.node)
 *         return node             # <<<<<<<<<<<<<<
 * 
 *     # noinspection PyAttributeOutsideInit
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_node);
  __pyx_r = __pyx_v_node;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1297
 *         return old_child
 * 
 *     cpdef DOMNode remove_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         remove_child(self, node)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.remove_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_41remove_child, "\n        remove_child(self, node)\n        \n        Remove the child node ``node`` from the DOM tree and return it.\n        \n        :param node: DOM node to remove\n        :type node: DOMNode\n        :return: the removed child node\n        :rtype: DOMNode\n        :raises ValueError: if ``node`` is not a child of this node\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child = {"remove_child", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_41remove_child};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_child (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_node,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_node)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1297, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "remove_child") < 0)) __PYX_ERR(0, 1297, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("remove_child", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1297, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.remove_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "node", 0))) __PYX_ERR(0, 1297, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_41remove_child(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v_node);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_41remove_child(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_child", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_remove_child(__pyx_v_self, __pyx_v_node, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.remove_child", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1319
 * 
 *     # noinspection PyAttributeOutsideInit
 *     cpdef decompose(self):             # <<<<<<<<<<<<<<
 *         """
 *         decompose(self)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_44decompose(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_decompose(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("decompose", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_decompose); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1319, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_44decompose)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1319, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1325
 *         Delete the current node and all its children.
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Decompose operation on uninitialized node')
 * 
 */
  __pyx_t_6 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1326
 *         """
 *         if not check_node(self):
 *             raise RuntimeError('Decompose operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         lxb_dom_node_destroy_deep(self.node)
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1326, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1326, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1325
 *         Delete the current node and all its children.
 *         """
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Decompose operation on uninitialized node')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1328
 *             raise RuntimeError('Decompose operation on uninitialized node')
 * 
 *         lxb_dom_node_destroy_deep(self.node)             # <<<<<<<<<<<<<<
 *         self.node = NULL
 *         self.tree = None
 */
  (void)(lxb_dom_node_destroy_deep(__pyx_v_self->node));

  /* "resiliparse_dom/parse/html.pyx":1329
 * 
 *         lxb_dom_node_destroy_deep(self.node)
 *         self.node = NULL             # <<<<<<<<<<<<<<
 *         self.tree = None
 * 
 */
  __pyx_v_self->node = NULL;

  /* "resiliparse_dom/parse/html.pyx":1330
 *         lxb_dom_node_destroy_deep(self.node)
 *         self.node = NULL
 *         self.tree = None             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->tree);
  __Pyx_DECREF((PyObject *)__pyx_v_self->tree);
  __pyx_v_self->tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)Py_None);

  /* "resiliparse_dom/parse/html.pyx":1319
 * 
 *     # noinspection PyAttributeOutsideInit
 *     cpdef decompose(self):             # <<<<<<<<<<<<<<
 *         """
 *         decompose(self)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.decompose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_44decompose(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_43decompose, "\n        decompose(self)\n        \n        Delete the current node and all its children.\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_44decompose = {"decompose", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_44decompose, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_43decompose};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_44decompose(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("decompose (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("decompose", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "decompose", 0))) return NULL;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_43decompose(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_43decompose(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("decompose", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_decompose(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.decompose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1332
 *         self.tree = None
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if not check_node(self):
 *             return '<INVALID ELEMENT>'
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_45__repr__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___2generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "resiliparse_dom/parse/html.pyx":1337
 * 
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)             # <<<<<<<<<<<<<<
 *             if attrs:
 *                 attrs = ' ' + attrs
 */

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___genexpr(PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1337, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *) __pyx_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_outer_scope);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_outer_scope);
  __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___2generator2, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_repr___locals_genexpr, __pyx_n_s_resiliparse_dom_parse_html); if (unlikely(!gen)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__repr__.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___2generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *__pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 1337, __pyx_L1_error)
  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 1337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_genexpr_arg_0)) { __Pyx_RaiseUnboundLocalError(".0"); __PYX_ERR(0, 1337, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_genexpr_arg_0; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_genexpr_arg_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1337, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1337, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1337, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1337, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1337, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1337, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1337, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1337, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_a);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_a, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = 0;
    __pyx_t_6 = 127;
    __pyx_t_7 = __Pyx_PyObject_FormatSimple(__pyx_cur_scope->__pyx_v_a, __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_kp_u__20);
    __pyx_t_5 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__20);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_kp_u__20);
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1337, __pyx_L1_error) }
    __pyx_t_7 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_a); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_FormatSimple(__pyx_t_7, __pyx_empty_unicode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_8);
    __pyx_t_8 = 0;
    __Pyx_INCREF(__pyx_kp_u__21);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__21);
    PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_kp_u__21);
    __pyx_t_8 = __Pyx_PyUnicode_Join(__pyx_t_4, 4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_8))) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1332
 *         self.tree = None
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if not check_node(self):
 *             return '<INVALID ELEMENT>'
 */

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_45__repr__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *__pyx_cur_scope;
  PyObject *__pyx_v_attrs = NULL;
  PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___2generator2 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_UCS4 __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);
  __pyx_cur_scope = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1332, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "resiliparse_dom/parse/html.pyx":1333
 * 
 *     def __repr__(self):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return '<INVALID ELEMENT>'
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_1)));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "resiliparse_dom/parse/html.pyx":1334
 *     def __repr__(self):
 *         if not check_node(self):
 *             return '<INVALID ELEMENT>'             # <<<<<<<<<<<<<<
 * 
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_INVALID_ELEMENT);
    __pyx_r = __pyx_kp_u_INVALID_ELEMENT;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1333
 * 
 *     def __repr__(self):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return '<INVALID ELEMENT>'
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1336
 *             return '<INVALID ELEMENT>'
 * 
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)
 *             if attrs:
 */
  switch (__pyx_cur_scope->__pyx_v_self->node->type) {
    case LXB_DOM_NODE_TYPE_ELEMENT:

    /* "resiliparse_dom/parse/html.pyx":1337
 * 
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)             # <<<<<<<<<<<<<<
 *             if attrs:
 *                 attrs = ' ' + attrs
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_attrs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___genexpr(((PyObject*)__pyx_cur_scope), __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_Generator_Next(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyUnicode_Join(__pyx_kp_u__5, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_attrs = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1338
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)
 *             if attrs:             # <<<<<<<<<<<<<<
 *                 attrs = ' ' + attrs
 *             return f'<{self.tag}{attrs}>'
 */
    __pyx_t_2 = (__pyx_v_attrs != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(__pyx_v_attrs) != 0);
    if (__pyx_t_2) {

      /* "resiliparse_dom/parse/html.pyx":1339
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)
 *             if attrs:
 *                 attrs = ' ' + attrs             # <<<<<<<<<<<<<<
 *             return f'<{self.tag}{attrs}>'
 *         elif self.node.type == LXB_DOM_NODE_TYPE_TEXT:
 */
      __pyx_t_3 = __Pyx_PyUnicode_ConcatSafe(__pyx_kp_u__5, __pyx_v_attrs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1339, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_attrs, ((PyObject*)__pyx_t_3));
      __pyx_t_3 = 0;

      /* "resiliparse_dom/parse/html.pyx":1338
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)
 *             if attrs:             # <<<<<<<<<<<<<<
 *                 attrs = ' ' + attrs
 *             return f'<{self.tag}{attrs}>'
 */
    }

    /* "resiliparse_dom/parse/html.pyx":1340
 *             if attrs:
 *                 attrs = ' ' + attrs
 *             return f'<{self.tag}{attrs}>'             # <<<<<<<<<<<<<<
 *         elif self.node.type == LXB_DOM_NODE_TYPE_TEXT:
 *             return self.text
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_5 = 127;
    __Pyx_INCREF(__pyx_kp_u__22);
    __pyx_t_4 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__22);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u__22);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_tag); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_5;
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyUnicode_Unicode(__pyx_v_attrs); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_5;
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__23);
    __pyx_t_4 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__23);
    PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_kp_u__23);
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1336
 *             return '<INVALID ELEMENT>'
 * 
 *         if self.node.type == LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *             attrs = ' '.join(f'{a}="{self[a]}"' for a in self.attrs)
 *             if attrs:
 */
    break;
    case LXB_DOM_NODE_TYPE_TEXT:

    /* "resiliparse_dom/parse/html.pyx":1342
 *             return f'<{self.tag}{attrs}>'
 *         elif self.node.type == LXB_DOM_NODE_TYPE_TEXT:
 *             return self.text             # <<<<<<<<<<<<<<
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT:
 *             return '[HTML Document]'
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_text); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1341
 *                 attrs = ' ' + attrs
 *             return f'<{self.tag}{attrs}>'
 *         elif self.node.type == LXB_DOM_NODE_TYPE_TEXT:             # <<<<<<<<<<<<<<
 *             return self.text
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT:
 */
    break;
    case LXB_DOM_NODE_TYPE_DOCUMENT:

    /* "resiliparse_dom/parse/html.pyx":1344
 *             return self.text
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT:
 *             return '[HTML Document]'             # <<<<<<<<<<<<<<
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT_TYPE:
 *             return '<!DOCTYPE html>'
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_HTML_Document);
    __pyx_r = __pyx_kp_u_HTML_Document;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1343
 *         elif self.node.type == LXB_DOM_NODE_TYPE_TEXT:
 *             return self.text
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT:             # <<<<<<<<<<<<<<
 *             return '[HTML Document]'
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT_TYPE:
 */
    break;
    case LXB_DOM_NODE_TYPE_DOCUMENT_TYPE:

    /* "resiliparse_dom/parse/html.pyx":1346
 *             return '[HTML Document]'
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT_TYPE:
 *             return '<!DOCTYPE html>'             # <<<<<<<<<<<<<<
 * 
 *         return f'<{self.__class__.__name__} Element>'
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_DOCTYPE_html);
    __pyx_r = __pyx_kp_u_DOCTYPE_html;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1345
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT:
 *             return '[HTML Document]'
 *         elif self.node.type == LXB_DOM_NODE_TYPE_DOCUMENT_TYPE:             # <<<<<<<<<<<<<<
 *             return '<!DOCTYPE html>'
 * 
 */
    break;
    default: break;
  }

  /* "resiliparse_dom/parse/html.pyx":1348
 *             return '<!DOCTYPE html>'
 * 
 *         return f'<{self.__class__.__name__} Element>'             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_5 = 127;
  __Pyx_INCREF(__pyx_kp_u__22);
  __pyx_t_4 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__22);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u__22);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_5;
  __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u_Element);
  __pyx_t_4 += 9;
  __Pyx_GIVEREF(__pyx_kp_u_Element);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_Element);
  __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_6, 3, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1332
 *         self.tree = None
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if not check_node(self):
 *             return '<INVALID ELEMENT>'
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attrs);
  __Pyx_XDECREF(__pyx_gb_15resiliparse_dom_5parse_4html_7DOMNode_8__repr___2generator2);
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1350
 *         return f'<{self.__class__.__name__} Element>'
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.html
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_48__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_48__str__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_47__str__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_47__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 1);

  /* "resiliparse_dom/parse/html.pyx":1351
 * 
 *     def __str__(self):
 *         return self.html             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_html); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1350
 *         return f'<{self.__class__.__name__} Element>'
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.html
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1353
 *         return self.html
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if not check_node(self) or not isinstance(other, DOMNode):
 *             return False
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_50__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_50__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_49__eq__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_49__eq__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, PyObject *__pyx_v_other) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_other_dom = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 1);

  /* "resiliparse_dom/parse/html.pyx":1354
 * 
 *     def __eq__(self, other):
 *         if not check_node(self) or not isinstance(other, DOMNode):             # <<<<<<<<<<<<<<
 *             return False
 *         cdef DOMNode other_dom = <DOMNode>other
 */
  __pyx_t_2 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode); 
  __pyx_t_3 = (!__pyx_t_2);
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1355
 *     def __eq__(self, other):
 *         if not check_node(self) or not isinstance(other, DOMNode):
 *             return False             # <<<<<<<<<<<<<<
 *         cdef DOMNode other_dom = <DOMNode>other
 *         return other_dom.node == self.node
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1354
 * 
 *     def __eq__(self, other):
 *         if not check_node(self) or not isinstance(other, DOMNode):             # <<<<<<<<<<<<<<
 *             return False
 *         cdef DOMNode other_dom = <DOMNode>other
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1356
 *         if not check_node(self) or not isinstance(other, DOMNode):
 *             return False
 *         cdef DOMNode other_dom = <DOMNode>other             # <<<<<<<<<<<<<<
 *         return other_dom.node == self.node
 * 
 */
  __pyx_t_4 = __pyx_v_other;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_v_other_dom = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "resiliparse_dom/parse/html.pyx":1357
 *             return False
 *         cdef DOMNode other_dom = <DOMNode>other
 *         return other_dom.node == self.node             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyBool_FromLong((__pyx_v_other_dom->node == __pyx_v_self->node)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1353
 *         return self.html
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if not check_node(self) or not isinstance(other, DOMNode):
 *             return False
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_other_dom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1359
 *         return other_dom.node == self.node
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         if not check_node(self):
 *             return 0
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_52__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_52__hash__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_51__hash__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_51__hash__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  Py_hash_t __pyx_r;
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":1360
 * 
 *     def __hash__(self):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return 0
 *         return <size_t>self.node
 */
  __pyx_t_1 = (!__pyx_f_15resiliparse_dom_5parse_4html_check_node(__pyx_v_self));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1361
 *     def __hash__(self):
 *         if not check_node(self):
 *             return 0             # <<<<<<<<<<<<<<
 *         return <size_t>self.node
 * 
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1360
 * 
 *     def __hash__(self):
 *         if not check_node(self):             # <<<<<<<<<<<<<<
 *             return 0
 *         return <size_t>self.node
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1362
 *         if not check_node(self):
 *             return 0
 *         return <size_t>self.node             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((size_t)__pyx_v_self->node);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1359
 *         return other_dom.node == self.node
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         if not check_node(self):
 *             return 0
 */

  /* function exit code */
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_54__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_54__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_54__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_54__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_53__reduce_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_53__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_56__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_56__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_56__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_56__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_55__setstate_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_7DOMNode_55__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMNode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1365
 * 
 * 
 * cdef inline void _join_collections(lxb_dom_collection_t* target, lxb_dom_collection_t* source):             # <<<<<<<<<<<<<<
 *     """
 *     Append elements from ``source` to ``target``.
 */

static CYTHON_INLINE void __pyx_f_15resiliparse_dom_5parse_4html__join_collections(lxb_dom_collection_t *__pyx_v_target, lxb_dom_collection_t *__pyx_v_source) {
  size_t __pyx_v_i;
  size_t __pyx_t_1;
  size_t __pyx_t_2;
  size_t __pyx_t_3;

  /* "resiliparse_dom/parse/html.pyx":1373
 *     """
 * 
 *     cdef size_t i = 0             # <<<<<<<<<<<<<<
 *     for i in range(lxb_dom_collection_length(source)):
 *         lxb_dom_collection_append(target, lxb_dom_collection_element(source, i))
 */
  __pyx_v_i = 0;

  /* "resiliparse_dom/parse/html.pyx":1374
 * 
 *     cdef size_t i = 0
 *     for i in range(lxb_dom_collection_length(source)):             # <<<<<<<<<<<<<<
 *         lxb_dom_collection_append(target, lxb_dom_collection_element(source, i))
 * 
 */
  __pyx_t_1 = lxb_dom_collection_length(__pyx_v_source);
  __pyx_t_2 = __pyx_t_1;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "resiliparse_dom/parse/html.pyx":1375
 *     cdef size_t i = 0
 *     for i in range(lxb_dom_collection_length(source)):
 *         lxb_dom_collection_append(target, lxb_dom_collection_element(source, i))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (void)(lxb_dom_collection_append(__pyx_v_target, lxb_dom_collection_element(__pyx_v_source, __pyx_v_i)));
  }

  /* "resiliparse_dom/parse/html.pyx":1365
 * 
 * 
 * cdef inline void _join_collections(lxb_dom_collection_t* target, lxb_dom_collection_t* source):             # <<<<<<<<<<<<<<
 *     """
 *     Append elements from ``source` to ``target``.
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":1389
 *     """
 * 
 *     def __cinit__(self, HTMLTree tree):             # <<<<<<<<<<<<<<
 *         self.tree = tree
 *         self.coll = NULL
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tree,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tree)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1389, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1389, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1389, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tree), __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, 1, "tree", 0))) __PYX_ERR(0, 1389, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection___cinit__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_tree);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection___cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "resiliparse_dom/parse/html.pyx":1390
 * 
 *     def __cinit__(self, HTMLTree tree):
 *         self.tree = tree             # <<<<<<<<<<<<<<
 *         self.coll = NULL
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_tree);
  __Pyx_GIVEREF((PyObject *)__pyx_v_tree);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->tree);
  __Pyx_DECREF((PyObject *)__pyx_v_self->tree);
  __pyx_v_self->tree = __pyx_v_tree;

  /* "resiliparse_dom/parse/html.pyx":1391
 *     def __cinit__(self, HTMLTree tree):
 *         self.tree = tree
 *         self.coll = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->coll = NULL;

  /* "resiliparse_dom/parse/html.pyx":1389
 *     """
 * 
 *     def __cinit__(self, HTMLTree tree):             # <<<<<<<<<<<<<<
 *         self.tree = tree
 *         self.coll = NULL
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1393
 *         self.coll = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.coll:
 *             lxb_dom_collection_destroy(self.coll, True)
 */

/* Python wrapper */
static void __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_2__dealloc__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_2__dealloc__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self) {
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":1394
 * 
 *     def __dealloc__(self):
 *         if self.coll:             # <<<<<<<<<<<<<<
 *             lxb_dom_collection_destroy(self.coll, True)
 *             self.coll = NULL
 */
  __pyx_t_1 = (__pyx_v_self->coll != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1395
 *     def __dealloc__(self):
 *         if self.coll:
 *             lxb_dom_collection_destroy(self.coll, True)             # <<<<<<<<<<<<<<
 *             self.coll = NULL
 * 
 */
    (void)(lxb_dom_collection_destroy(__pyx_v_self->coll, 1));

    /* "resiliparse_dom/parse/html.pyx":1396
 *         if self.coll:
 *             lxb_dom_collection_destroy(self.coll, True)
 *             self.coll = NULL             # <<<<<<<<<<<<<<
 * 
 *     @cython.cdivision(False)
 */
    __pyx_v_self->coll = NULL;

    /* "resiliparse_dom/parse/html.pyx":1394
 * 
 *     def __dealloc__(self):
 *         if self.coll:             # <<<<<<<<<<<<<<
 *             lxb_dom_collection_destroy(self.coll, True)
 *             self.coll = NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1393
 *         self.coll = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.coll:
 *             lxb_dom_collection_destroy(self.coll, True)
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":1399
 * 
 *     @cython.cdivision(False)
 *     cdef inline size_t _wrap_idx(self, ssize_t idx):             # <<<<<<<<<<<<<<
 *         if idx >= 0:
 *             return idx
 */

static CYTHON_INLINE size_t __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, Py_ssize_t __pyx_v_idx) {
  size_t __pyx_r;
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "resiliparse_dom/parse/html.pyx":1400
 *     @cython.cdivision(False)
 *     cdef inline size_t _wrap_idx(self, ssize_t idx):
 *         if idx >= 0:             # <<<<<<<<<<<<<<
 *             return idx
 *         return idx % <ssize_t>lxb_dom_collection_length(self.coll)
 */
  __pyx_t_1 = (__pyx_v_idx >= 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1401
 *     cdef inline size_t _wrap_idx(self, ssize_t idx):
 *         if idx >= 0:
 *             return idx             # <<<<<<<<<<<<<<
 *         return idx % <ssize_t>lxb_dom_collection_length(self.coll)
 * 
 */
    __pyx_r = __pyx_v_idx;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1400
 *     @cython.cdivision(False)
 *     cdef inline size_t _wrap_idx(self, ssize_t idx):
 *         if idx >= 0:             # <<<<<<<<<<<<<<
 *             return idx
 *         return idx % <ssize_t>lxb_dom_collection_length(self.coll)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1402
 *         if idx >= 0:
 *             return idx
 *         return idx % <ssize_t>lxb_dom_collection_length(self.coll)             # <<<<<<<<<<<<<<
 * 
 *     cdef DOMCollection _forward_collection_match(self, bytes func, attrs):
 */
  __pyx_t_2 = ((Py_ssize_t)lxb_dom_collection_length(__pyx_v_self->coll));
  if (unlikely(__pyx_t_2 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    __PYX_ERR(0, 1402, __pyx_L1_error)
  }
  __pyx_r = __Pyx_mod_Py_ssize_t(__pyx_v_idx, __pyx_t_2);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1399
 * 
 *     @cython.cdivision(False)
 *     cdef inline size_t _wrap_idx(self, ssize_t idx):             # <<<<<<<<<<<<<<
 *         if idx >= 0:
 *             return idx
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection._wrap_idx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1404
 *         return idx % <ssize_t>lxb_dom_collection_length(self.coll)
 * 
 *     cdef DOMCollection _forward_collection_match(self, bytes func, attrs):             # <<<<<<<<<<<<<<
 *         """
 *         Forward DOM multi-element match operations to all items in the collection and aggregate the results.
 */

static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__forward_collection_match(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_func, PyObject *__pyx_v_attrs) {
  lxb_dom_collection_t *__pyx_v_joined_coll;
  lxb_dom_node_t *__pyx_v_node;
  lxb_dom_collection_t *__pyx_v_matches;
  size_t __pyx_v_i;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  size_t __pyx_t_5;
  size_t __pyx_t_6;
  char const *__pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  char const *__pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  size_t __pyx_t_13;
  lxb_dom_collection_t *__pyx_t_14;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl __pyx_t_15;
  char const *__pyx_t_16;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl __pyx_t_17;
  char const *__pyx_t_18;
  char const *__pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_forward_collection_match", 1);

  /* "resiliparse_dom/parse/html.pyx":1412
 *         :return: aggregated collection or single element
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (!(__pyx_v_self->coll != 0));
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1413
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to select items from uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         if not lxb_dom_collection_length(self.coll):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1413, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1412
 *         :return: aggregated collection or single element
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1415
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 *         if not lxb_dom_collection_length(self.coll):             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  __pyx_t_1 = (!(lxb_dom_collection_length(__pyx_v_self->coll) != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1416
 * 
 *         if not lxb_dom_collection_length(self.coll):
 *             return self             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_collection_t* joined_coll = lxb_dom_collection_make(self.coll.document,
 */
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __Pyx_INCREF((PyObject *)__pyx_v_self);
    __pyx_r = __pyx_v_self;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1415
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 *         if not lxb_dom_collection_length(self.coll):             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1418
 *             return self
 * 
 *         cdef lxb_dom_collection_t* joined_coll = lxb_dom_collection_make(self.coll.document,             # <<<<<<<<<<<<<<
 *                                                                          lxb_dom_collection_length(self.coll) * 2)
 * 
 */
  __pyx_v_joined_coll = lxb_dom_collection_make(__pyx_v_self->coll->document, (lxb_dom_collection_length(__pyx_v_self->coll) * 2));

  /* "resiliparse_dom/parse/html.pyx":1421
 *                                                                          lxb_dom_collection_length(self.coll) * 2)
 * 
 *         cdef lxb_dom_node_t* node = NULL             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_collection_t* matches = NULL
 *         cdef size_t i = 0
 */
  __pyx_v_node = NULL;

  /* "resiliparse_dom/parse/html.pyx":1422
 * 
 *         cdef lxb_dom_node_t* node = NULL
 *         cdef lxb_dom_collection_t* matches = NULL             # <<<<<<<<<<<<<<
 *         cdef size_t i = 0
 *         for i in range(lxb_dom_collection_length(self.coll)):
 */
  __pyx_v_matches = NULL;

  /* "resiliparse_dom/parse/html.pyx":1423
 *         cdef lxb_dom_node_t* node = NULL
 *         cdef lxb_dom_collection_t* matches = NULL
 *         cdef size_t i = 0             # <<<<<<<<<<<<<<
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = lxb_dom_collection_node(self.coll, i)
 */
  __pyx_v_i = 0;

  /* "resiliparse_dom/parse/html.pyx":1424
 *         cdef lxb_dom_collection_t* matches = NULL
 *         cdef size_t i = 0
 *         for i in range(lxb_dom_collection_length(self.coll)):             # <<<<<<<<<<<<<<
 *             node = lxb_dom_collection_node(self.coll, i)
 *             if func == b'by_attr':
 */
  __pyx_t_4 = lxb_dom_collection_length(__pyx_v_self->coll);
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "resiliparse_dom/parse/html.pyx":1425
 *         cdef size_t i = 0
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = lxb_dom_collection_node(self.coll, i)             # <<<<<<<<<<<<<<
 *             if func == b'by_attr':
 *                 matches = get_elements_by_attr_impl(node,
 */
    __pyx_v_node = lxb_dom_collection_node(__pyx_v_self->coll, __pyx_v_i);

    /* "resiliparse_dom/parse/html.pyx":1426
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = lxb_dom_collection_node(self.coll, i)
 *             if func == b'by_attr':             # <<<<<<<<<<<<<<
 *                 matches = get_elements_by_attr_impl(node,
 *                                                     <const char*>attrs[0], len(attrs[0]),
 */
    __pyx_t_1 = (__Pyx_PyBytes_Equals(__pyx_v_func, __pyx_n_b_by_attr, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1426, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1428
 *             if func == b'by_attr':
 *                 matches = get_elements_by_attr_impl(node,
 *                                                     <const char*>attrs[0], len(attrs[0]),             # <<<<<<<<<<<<<<
 *                                                     <const char*>attrs[1], len(attrs[1]),
 *                                                     attrs[2], attrs[3])
 */
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1428, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_AsString(__pyx_t_3); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 1428, __pyx_L1_error)
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1428, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyObject_Length(__pyx_t_8); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1428, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "resiliparse_dom/parse/html.pyx":1429
 *                 matches = get_elements_by_attr_impl(node,
 *                                                     <const char*>attrs[0], len(attrs[0]),
 *                                                     <const char*>attrs[1], len(attrs[1]),             # <<<<<<<<<<<<<<
 *                                                     attrs[2], attrs[3])
 *             if func == b'by_class':
 */
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_attrs, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1429, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyObject_AsString(__pyx_t_8); if (unlikely((!__pyx_t_10) && PyErr_Occurred())) __PYX_ERR(0, 1429, __pyx_L1_error)
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_attrs, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1429, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = PyObject_Length(__pyx_t_11); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1429, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

      /* "resiliparse_dom/parse/html.pyx":1430
 *                                                     <const char*>attrs[0], len(attrs[0]),
 *                                                     <const char*>attrs[1], len(attrs[1]),
 *                                                     attrs[2], attrs[3])             # <<<<<<<<<<<<<<
 *             if func == b'by_class':
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])
 */
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_attrs, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1430, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_13 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_13 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_attrs, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1430, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

      /* "resiliparse_dom/parse/html.pyx":1427
 *             node = lxb_dom_collection_node(self.coll, i)
 *             if func == b'by_attr':
 *                 matches = get_elements_by_attr_impl(node,             # <<<<<<<<<<<<<<
 *                                                     <const char*>attrs[0], len(attrs[0]),
 *                                                     <const char*>attrs[1], len(attrs[1]),
 */
      __pyx_t_15.__pyx_n = 2;
      __pyx_t_15.init_size = __pyx_t_13;
      __pyx_t_15.case_insensitive = __pyx_t_1;
      __pyx_t_14 = __pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl(__pyx_v_node, ((char const *)__pyx_t_7), __pyx_t_9, ((char const *)__pyx_t_10), __pyx_t_12, &__pyx_t_15); 
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_v_matches = __pyx_t_14;

      /* "resiliparse_dom/parse/html.pyx":1426
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = lxb_dom_collection_node(self.coll, i)
 *             if func == b'by_attr':             # <<<<<<<<<<<<<<
 *                 matches = get_elements_by_attr_impl(node,
 *                                                     <const char*>attrs[0], len(attrs[0]),
 */
    }

    /* "resiliparse_dom/parse/html.pyx":1431
 *                                                     <const char*>attrs[1], len(attrs[1]),
 *                                                     attrs[2], attrs[3])
 *             if func == b'by_class':             # <<<<<<<<<<<<<<
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])
 *             elif func == b'by_tag':
 */
    __pyx_t_1 = (__Pyx_PyBytes_Equals(__pyx_v_func, __pyx_n_b_by_class, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1431, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1432
 *                                                     attrs[2], attrs[3])
 *             if func == b'by_class':
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])             # <<<<<<<<<<<<<<
 *             elif func == b'by_tag':
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))
 */
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_16 = __Pyx_PyObject_AsString(__pyx_t_8); if (unlikely((!__pyx_t_16) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L1_error)
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_12 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1432, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_attrs, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_13 = __Pyx_PyInt_As_size_t(__pyx_t_3); if (unlikely((__pyx_t_13 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_17.__pyx_n = 1;
      __pyx_t_17.init_size = __pyx_t_13;
      __pyx_t_14 = __pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl(__pyx_v_node, ((char const *)__pyx_t_16), __pyx_t_12, &__pyx_t_17); 
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_v_matches = __pyx_t_14;

      /* "resiliparse_dom/parse/html.pyx":1431
 *                                                     <const char*>attrs[1], len(attrs[1]),
 *                                                     attrs[2], attrs[3])
 *             if func == b'by_class':             # <<<<<<<<<<<<<<
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])
 *             elif func == b'by_tag':
 */
      goto __pyx_L10;
    }

    /* "resiliparse_dom/parse/html.pyx":1433
 *             if func == b'by_class':
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])
 *             elif func == b'by_tag':             # <<<<<<<<<<<<<<
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))
 *             elif func == b'selector_all':
 */
    __pyx_t_1 = (__Pyx_PyBytes_Equals(__pyx_v_func, __pyx_n_b_by_tag, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1433, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1434
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])
 *             elif func == b'by_tag':
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))             # <<<<<<<<<<<<<<
 *             elif func == b'selector_all':
 *                 matches = query_selector_all_impl(node, self.tree, attrs[0], len(attrs[0]))
 */
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1434, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_18 = __Pyx_PyObject_AsString(__pyx_t_8); if (unlikely((!__pyx_t_18) && PyErr_Occurred())) __PYX_ERR(0, 1434, __pyx_L1_error)
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1434, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_12 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1434, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_matches = __pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_tag_name_impl(__pyx_v_node, ((char const *)__pyx_t_18), __pyx_t_12);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "resiliparse_dom/parse/html.pyx":1433
 *             if func == b'by_class':
 *                 matches = get_elements_by_class_name_impl(node, <const char*>attrs[0], len(attrs[0]), attrs[1])
 *             elif func == b'by_tag':             # <<<<<<<<<<<<<<
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))
 *             elif func == b'selector_all':
 */
      goto __pyx_L10;
    }

    /* "resiliparse_dom/parse/html.pyx":1435
 *             elif func == b'by_tag':
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))
 *             elif func == b'selector_all':             # <<<<<<<<<<<<<<
 *                 matches = query_selector_all_impl(node, self.tree, attrs[0], len(attrs[0]))
 * 
 */
    __pyx_t_1 = (__Pyx_PyBytes_Equals(__pyx_v_func, __pyx_n_b_selector_all, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1435, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1436
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))
 *             elif func == b'selector_all':
 *                 matches = query_selector_all_impl(node, self.tree, attrs[0], len(attrs[0]))             # <<<<<<<<<<<<<<
 * 
 *             if matches:
 */
      __pyx_t_8 = ((PyObject *)__pyx_v_self->tree);
      __Pyx_INCREF(__pyx_t_8);
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1436, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_19 = __Pyx_PyObject_AsString(__pyx_t_3); if (unlikely((!__pyx_t_19) && PyErr_Occurred())) __PYX_ERR(0, 1436, __pyx_L1_error)
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_attrs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1436, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = PyObject_Length(__pyx_t_11); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1436, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_14 = __pyx_f_15resiliparse_dom_5parse_4html_query_selector_all_impl(__pyx_v_node, ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_8), __pyx_t_19, __pyx_t_12, NULL); if (unlikely(__pyx_t_14 == ((lxb_dom_collection_t *)((lxb_dom_collection_t *)-1L)))) __PYX_ERR(0, 1436, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_matches = __pyx_t_14;

      /* "resiliparse_dom/parse/html.pyx":1435
 *             elif func == b'by_tag':
 *                 matches = get_elements_by_tag_name_impl(node, <const char*>attrs[0], len(attrs[0]))
 *             elif func == b'selector_all':             # <<<<<<<<<<<<<<
 *                 matches = query_selector_all_impl(node, self.tree, attrs[0], len(attrs[0]))
 * 
 */
    }
    __pyx_L10:;

    /* "resiliparse_dom/parse/html.pyx":1438
 *                 matches = query_selector_all_impl(node, self.tree, attrs[0], len(attrs[0]))
 * 
 *             if matches:             # <<<<<<<<<<<<<<
 *                 _join_collections(joined_coll, matches)
 *                 lxb_dom_collection_destroy(matches, True)
 */
    __pyx_t_1 = (__pyx_v_matches != 0);
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1439
 * 
 *             if matches:
 *                 _join_collections(joined_coll, matches)             # <<<<<<<<<<<<<<
 *                 lxb_dom_collection_destroy(matches, True)
 * 
 */
      __pyx_f_15resiliparse_dom_5parse_4html__join_collections(__pyx_v_joined_coll, __pyx_v_matches); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1439, __pyx_L1_error)

      /* "resiliparse_dom/parse/html.pyx":1440
 *             if matches:
 *                 _join_collections(joined_coll, matches)
 *                 lxb_dom_collection_destroy(matches, True)             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_collection(self.tree, joined_coll)
 */
      (void)(lxb_dom_collection_destroy(__pyx_v_matches, 1));

      /* "resiliparse_dom/parse/html.pyx":1438
 *                 matches = query_selector_all_impl(node, self.tree, attrs[0], len(attrs[0]))
 * 
 *             if matches:             # <<<<<<<<<<<<<<
 *                 _join_collections(joined_coll, matches)
 *                 lxb_dom_collection_destroy(matches, True)
 */
    }
  }

  /* "resiliparse_dom/parse/html.pyx":1442
 *                 lxb_dom_collection_destroy(matches, True)
 * 
 *         return _create_dom_collection(self.tree, joined_coll)             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_8 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_8);
  __pyx_t_3 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_collection(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_8), __pyx_v_joined_coll)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1404
 *         return idx % <ssize_t>lxb_dom_collection_length(self.coll)
 * 
 *     cdef DOMCollection _forward_collection_match(self, bytes func, attrs):             # <<<<<<<<<<<<<<
 *         """
 *         Forward DOM multi-element match operations to all items in the collection and aggregate the results.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection._forward_collection_match", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1444
 *         return _create_dom_collection(self.tree, joined_coll)
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id *__pyx_optional_args) {
  int __pyx_v_case_insensitive = ((int)0);
  lxb_dom_node_t *__pyx_v_node;
  size_t __pyx_v_i;
  PyObject *__pyx_v_id_bytes = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  size_t __pyx_t_9;
  size_t __pyx_t_10;
  size_t __pyx_t_11;
  char const *__pyx_t_12;
  Py_ssize_t __pyx_t_13;
  lxb_dom_node_t *__pyx_t_14;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_element_by_id", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_element_by_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1444, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_element_id, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1444, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1444, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1458
 *         :rtype: DOMNode or None
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  __pyx_t_8 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_8 = (!(__pyx_v_self->coll != 0));
  __pyx_t_7 = __pyx_t_8;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_7)) {

    /* "resiliparse_dom/parse/html.pyx":1459
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to select items from uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_node_t* node
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1459, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1458
 *         :rtype: DOMNode or None
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1462
 * 
 *         cdef lxb_dom_node_t* node
 *         cdef size_t i = 0             # <<<<<<<<<<<<<<
 *         cdef bytes id_bytes = element_id.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 */
  __pyx_v_i = 0;

  /* "resiliparse_dom/parse/html.pyx":1463
 *         cdef lxb_dom_node_t* node
 *         cdef size_t i = 0
 *         cdef bytes id_bytes = element_id.encode()             # <<<<<<<<<<<<<<
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = get_element_by_id_impl(lxb_dom_collection_node(self.coll, i),
 */
  if (unlikely(__pyx_v_element_id == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1463, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_element_id, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_id_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1464
 *         cdef size_t i = 0
 *         cdef bytes id_bytes = element_id.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):             # <<<<<<<<<<<<<<
 *             node = get_element_by_id_impl(lxb_dom_collection_node(self.coll, i),
 *                                           <const char*>id_bytes, len(id_bytes), case_insensitive)
 */
  __pyx_t_9 = lxb_dom_collection_length(__pyx_v_self->coll);
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "resiliparse_dom/parse/html.pyx":1466
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = get_element_by_id_impl(lxb_dom_collection_node(self.coll, i),
 *                                           <const char*>id_bytes, len(id_bytes), case_insensitive)             # <<<<<<<<<<<<<<
 *             if node:
 *                 return _create_dom_node(self.tree, node)
 */
    if (unlikely(__pyx_v_id_bytes == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
      __PYX_ERR(0, 1466, __pyx_L1_error)
    }
    __pyx_t_12 = __Pyx_PyBytes_AsString(__pyx_v_id_bytes); if (unlikely((!__pyx_t_12) && PyErr_Occurred())) __PYX_ERR(0, 1466, __pyx_L1_error)
    if (unlikely(__pyx_v_id_bytes == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      __PYX_ERR(0, 1466, __pyx_L1_error)
    }
    __pyx_t_13 = __Pyx_PyBytes_GET_SIZE(__pyx_v_id_bytes); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1466, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1465
 *         cdef bytes id_bytes = element_id.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = get_element_by_id_impl(lxb_dom_collection_node(self.coll, i),             # <<<<<<<<<<<<<<
 *                                           <const char*>id_bytes, len(id_bytes), case_insensitive)
 *             if node:
 */
    __pyx_t_15.__pyx_n = 1;
    __pyx_t_15.case_insensitive = __pyx_v_case_insensitive;
    __pyx_t_14 = __pyx_f_15resiliparse_dom_5parse_4html_get_element_by_id_impl(lxb_dom_collection_node(__pyx_v_self->coll, __pyx_v_i), ((char const *)__pyx_t_12), __pyx_t_13, &__pyx_t_15); 
    __pyx_v_node = __pyx_t_14;

    /* "resiliparse_dom/parse/html.pyx":1467
 *             node = get_element_by_id_impl(lxb_dom_collection_node(self.coll, i),
 *                                           <const char*>id_bytes, len(id_bytes), case_insensitive)
 *             if node:             # <<<<<<<<<<<<<<
 *                 return _create_dom_node(self.tree, node)
 * 
 */
    __pyx_t_7 = (__pyx_v_node != 0);
    if (__pyx_t_7) {

      /* "resiliparse_dom/parse/html.pyx":1468
 *                                           <const char*>id_bytes, len(id_bytes), case_insensitive)
 *             if node:
 *                 return _create_dom_node(self.tree, node)             # <<<<<<<<<<<<<<
 * 
 *         return None
 */
      __Pyx_XDECREF((PyObject *)__pyx_r);
      __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_v_node)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
      __pyx_t_2 = 0;
      goto __pyx_L0;

      /* "resiliparse_dom/parse/html.pyx":1467
 *             node = get_element_by_id_impl(lxb_dom_collection_node(self.coll, i),
 *                                           <const char*>id_bytes, len(id_bytes), case_insensitive)
 *             if node:             # <<<<<<<<<<<<<<
 *                 return _create_dom_node(self.tree, node)
 * 
 */
    }
  }

  /* "resiliparse_dom/parse/html.pyx":1470
 *                 return _create_dom_node(self.tree, node)
 * 
 *         return None             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1444
 *         return _create_dom_collection(self.tree, joined_coll)
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_element_by_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_id_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_4get_element_by_id, "\n        get_element_by_id(self, element_id, case_insensitive=False)\n\n        Within all elements in this collection, find and return the element whose ID\n        attribute matches ``element_id``.\n\n        :param element_id: element ID\n        :type element_id: str\n        :param case_insensitive: match ID case-insensitively\n        :type case_insensitive: bool\n        :return: matching element or ``None`` if no such element exists\n        :rtype: DOMNode or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id = {"get_element_by_id", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_4get_element_by_id};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_element_id = 0;
  int __pyx_v_case_insensitive;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_element_by_id (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_element_id,&__pyx_n_s_case_insensitive,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_element_id)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_case_insensitive);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_element_by_id") < 0)) __PYX_ERR(0, 1444, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_element_id = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_case_insensitive = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_case_insensitive == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
    } else {
      __pyx_v_case_insensitive = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_element_by_id", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1444, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_element_by_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_element_id), (&PyUnicode_Type), 1, "element_id", 1))) __PYX_ERR(0, 1444, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_4get_element_by_id(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_element_id, __pyx_v_case_insensitive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_4get_element_by_id(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_element_id, int __pyx_v_case_insensitive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_element_by_id", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection->get_element_by_id(__pyx_v_self, __pyx_v_element_id, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_element_by_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1472
 *         return None
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr *__pyx_optional_args) {
  int __pyx_v_case_insensitive = ((int)0);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_attr", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_elements_by_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1472, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1472, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_v_attr_name, __pyx_v_attr_value, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1472, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1488
 *         :rtype: DOMCollection or None
 *         """
 *         return self._forward_collection_match(b'by_attr',             # <<<<<<<<<<<<<<
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))
 * 
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);

  /* "resiliparse_dom/parse/html.pyx":1489
 *         """
 *         return self._forward_collection_match(b'by_attr',
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):
 */
  if (unlikely(__pyx_v_attr_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1489, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_attr_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_v_attr_value == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1489, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsEncodedString(__pyx_v_attr_value, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2)) __PYX_ERR(0, 1489, __pyx_L1_error);
  __Pyx_INCREF(__pyx_int_10);
  __Pyx_GIVEREF(__pyx_int_10);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_int_10)) __PYX_ERR(0, 1489, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_4);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_4)) __PYX_ERR(0, 1489, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;

  /* "resiliparse_dom/parse/html.pyx":1488
 *         :rtype: DOMCollection or None
 *         """
 *         return self._forward_collection_match(b'by_attr',             # <<<<<<<<<<<<<<
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))
 * 
 */
  __pyx_t_4 = ((PyObject *)((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self->__pyx_vtab)->_forward_collection_match(__pyx_v_self, __pyx_n_b_by_attr, __pyx_t_3)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1472
 *         return None
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_6get_elements_by_attr, "\n        get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)\n\n        Within all elements in this collection, find the elements matching the given arbitrary attribute\n        name and value and return a :class:`DOMCollection` with the aggregated results.\n\n        :param attr_name: attribute name\n        :type attr_name: str\n        :param attr_value: attribute value\n        :type attr_name: str\n        :param case_insensitive: match attribute value case-insensitively\n        :type case_insensitive: bool\n        :return: collection of matching elements\n        :rtype: DOMCollection or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr = {"get_elements_by_attr", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_6get_elements_by_attr};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attr_name = 0;
  PyObject *__pyx_v_attr_value = 0;
  int __pyx_v_case_insensitive;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elements_by_attr (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr_name,&__pyx_n_s_attr_value,&__pyx_n_s_case_insensitive,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1472, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attr_value)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1472, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("get_elements_by_attr", 0, 2, 3, 1); __PYX_ERR(0, 1472, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_case_insensitive);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1472, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_elements_by_attr") < 0)) __PYX_ERR(0, 1472, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_attr_name = ((PyObject*)values[0]);
    __pyx_v_attr_value = ((PyObject*)values[1]);
    if (values[2]) {
      __pyx_v_case_insensitive = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_case_insensitive == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1472, __pyx_L3_error)
    } else {
      __pyx_v_case_insensitive = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_elements_by_attr", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 1472, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_name), (&PyUnicode_Type), 1, "attr_name", 1))) __PYX_ERR(0, 1472, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr_value), (&PyUnicode_Type), 1, "attr_value", 1))) __PYX_ERR(0, 1472, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_6get_elements_by_attr(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_attr_name, __pyx_v_attr_value, __pyx_v_case_insensitive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_6get_elements_by_attr(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_attr_name, PyObject *__pyx_v_attr_value, int __pyx_v_case_insensitive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_attr", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection->get_elements_by_attr(__pyx_v_self, __pyx_v_attr_name, __pyx_v_attr_value, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1491
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name *__pyx_optional_args) {
  int __pyx_v_case_insensitive = ((int)0);
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_class_name", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_case_insensitive = __pyx_optional_args->case_insensitive;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_elements_by_class_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_case_insensitive); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1491, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_class_name, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1491, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1505
 *         :rtype: DOMCollection or None
 *         """
 *         return self._forward_collection_match(b'by_class', (class_name.encode(), 10))             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  if (unlikely(__pyx_v_class_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1505, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_class_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 1505, __pyx_L1_error);
  __Pyx_INCREF(__pyx_int_10);
  __Pyx_GIVEREF(__pyx_int_10);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_10)) __PYX_ERR(0, 1505, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self->__pyx_vtab)->_forward_collection_match(__pyx_v_self, __pyx_n_b_by_class, __pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1491
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_class_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_8get_elements_by_class_name, "\n        get_elements_by_class_name(self, element_class, case_insensitive=False)\n\n        Within all elements in this collection, find the elements matching the given class name\n        and return a :class:`DOMCollection` with the aggregated results.\n\n        :param class_name: element class\n        :type class_name: str\n        :param case_insensitive: match class name case-insensitively\n        :type case_insensitive: bool\n        :return: collection of matching elements\n        :rtype: DOMCollection or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name = {"get_elements_by_class_name", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_8get_elements_by_class_name};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_class_name = 0;
  int __pyx_v_case_insensitive;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elements_by_class_name (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_class_name,&__pyx_n_s_case_insensitive,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_class_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1491, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_case_insensitive);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1491, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_elements_by_class_name") < 0)) __PYX_ERR(0, 1491, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_class_name = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_case_insensitive = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_case_insensitive == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1491, __pyx_L3_error)
    } else {
      __pyx_v_case_insensitive = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_elements_by_class_name", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1491, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_class_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_class_name), (&PyUnicode_Type), 1, "class_name", 1))) __PYX_ERR(0, 1491, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_8get_elements_by_class_name(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_class_name, __pyx_v_case_insensitive);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_8get_elements_by_class_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_class_name, int __pyx_v_case_insensitive) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_class_name", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.case_insensitive = __pyx_v_case_insensitive;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection->get_elements_by_class_name(__pyx_v_self, __pyx_v_class_name, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_class_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1507
 *         return self._forward_collection_match(b'by_class', (class_name.encode(), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_tag_name, int __pyx_skip_dispatch) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_tag_name", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_elements_by_tag_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1507, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_tag_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1507, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1507, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1519
 *         :rtype: DOMCollection
 *         """
 *         return self._forward_collection_match(b'by_tag', (tag_name.encode(),))             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode query_selector(self, str selector):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  if (unlikely(__pyx_v_tag_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1519, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_tag_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 1519, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self->__pyx_vtab)->_forward_collection_match(__pyx_v_self, __pyx_n_b_by_tag, __pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1507
 *         return self._forward_collection_match(b'by_class', (class_name.encode(), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_tag_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_10get_elements_by_tag_name, "\n        get_elements_by_tag_name(self, tag_name)\n\n        Within all elements in this collection, find the elements with the given tag name and return\n        a :class:`DOMCollection` with the aggregated results.\n\n        :param tag_name: tag name for matching elements\n        :type tag_name: str\n        :return: collection of matching elements\n        :rtype: DOMCollection\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name = {"get_elements_by_tag_name", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_10get_elements_by_tag_name};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_tag_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elements_by_tag_name (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tag_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1507, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_elements_by_tag_name") < 0)) __PYX_ERR(0, 1507, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_tag_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_elements_by_tag_name", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1507, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_tag_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tag_name), (&PyUnicode_Type), 1, "tag_name", 1))) __PYX_ERR(0, 1507, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_10get_elements_by_tag_name(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_tag_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_10get_elements_by_tag_name(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_tag_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elements_by_tag_name", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_tag_name(__pyx_v_self, __pyx_v_tag_name, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.get_elements_by_tag_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1521
 *         return self._forward_collection_match(b'by_tag', (tag_name.encode(),))
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch) {
  lxb_dom_node_t *__pyx_v_node;
  size_t __pyx_v_i;
  PyObject *__pyx_v_selector_bytes = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  size_t __pyx_t_8;
  size_t __pyx_t_9;
  size_t __pyx_t_10;
  char const *__pyx_t_11;
  Py_ssize_t __pyx_t_12;
  lxb_dom_node_t *__pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_query_selector); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1521, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_selector};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1521, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1534
 *         :rtype: DOMNode or None
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  __pyx_t_7 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!(__pyx_v_self->coll != 0));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1535
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to select items from uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         cdef lxb_dom_node_t* node
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1535, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1535, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1534
 *         :rtype: DOMNode or None
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1538
 * 
 *         cdef lxb_dom_node_t* node
 *         cdef size_t i = 0             # <<<<<<<<<<<<<<
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 */
  __pyx_v_i = 0;

  /* "resiliparse_dom/parse/html.pyx":1539
 *         cdef lxb_dom_node_t* node
 *         cdef size_t i = 0
 *         cdef bytes selector_bytes = selector.encode()             # <<<<<<<<<<<<<<
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 */
  if (unlikely(__pyx_v_selector == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1539, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_selector, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_selector_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1540
 *         cdef size_t i = 0
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):             # <<<<<<<<<<<<<<
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                                        selector_bytes, len(selector_bytes))
 */
  __pyx_t_8 = lxb_dom_collection_length(__pyx_v_self->coll);
  __pyx_t_9 = __pyx_t_8;
  for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
    __pyx_v_i = __pyx_t_10;

    /* "resiliparse_dom/parse/html.pyx":1541
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,             # <<<<<<<<<<<<<<
 *                                        selector_bytes, len(selector_bytes))
 *             if node:
 */
    __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
    __Pyx_INCREF(__pyx_t_1);

    /* "resiliparse_dom/parse/html.pyx":1542
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                                        selector_bytes, len(selector_bytes))             # <<<<<<<<<<<<<<
 *             if node:
 *                 return _create_dom_node(self.tree, node)
 */
    if (unlikely(__pyx_v_selector_bytes == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
      __PYX_ERR(0, 1542, __pyx_L1_error)
    }
    __pyx_t_11 = __Pyx_PyBytes_AsString(__pyx_v_selector_bytes); if (unlikely((!__pyx_t_11) && PyErr_Occurred())) __PYX_ERR(0, 1542, __pyx_L1_error)
    if (unlikely(__pyx_v_selector_bytes == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      __PYX_ERR(0, 1542, __pyx_L1_error)
    }
    __pyx_t_12 = __Pyx_PyBytes_GET_SIZE(__pyx_v_selector_bytes); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1542, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1541
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,             # <<<<<<<<<<<<<<
 *                                        selector_bytes, len(selector_bytes))
 *             if node:
 */
    __pyx_t_13 = __pyx_f_15resiliparse_dom_5parse_4html_query_selector_impl(lxb_dom_collection_node(__pyx_v_self->coll, __pyx_v_i), ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_t_11, __pyx_t_12); if (unlikely(__pyx_t_13 == ((lxb_dom_node_t *)((lxb_dom_node_t *)-1L)))) __PYX_ERR(0, 1541, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_node = __pyx_t_13;

    /* "resiliparse_dom/parse/html.pyx":1543
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                                        selector_bytes, len(selector_bytes))
 *             if node:             # <<<<<<<<<<<<<<
 *                 return _create_dom_node(self.tree, node)
 * 
 */
    __pyx_t_6 = (__pyx_v_node != 0);
    if (__pyx_t_6) {

      /* "resiliparse_dom/parse/html.pyx":1544
 *                                        selector_bytes, len(selector_bytes))
 *             if node:
 *                 return _create_dom_node(self.tree, node)             # <<<<<<<<<<<<<<
 * 
 *         return None
 */
      __Pyx_XDECREF((PyObject *)__pyx_r);
      __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), __pyx_v_node)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1544, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
      __pyx_t_2 = 0;
      goto __pyx_L0;

      /* "resiliparse_dom/parse/html.pyx":1543
 *             node = query_selector_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                                        selector_bytes, len(selector_bytes))
 *             if node:             # <<<<<<<<<<<<<<
 *                 return _create_dom_node(self.tree, node)
 * 
 */
    }
  }

  /* "resiliparse_dom/parse/html.pyx":1546
 *                 return _create_dom_node(self.tree, node)
 * 
 *         return None             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1521
 *         return self._forward_collection_match(b'by_tag', (tag_name.encode(),))
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.query_selector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_selector_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_12query_selector, "\n        query_selector(self, selector)\n\n        Within all elements in this collection, find and return the first element matching\n        the given CSS selector.This is more efficient than matching with :meth:`query_selector_all`\n        and discarding additional elements.\n\n        :param selector: CSS selector\n        :type selector: str\n        :return: matching element or ``None``\n        :rtype: DOMNode or None\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector = {"query_selector", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_12query_selector};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_selector = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("query_selector (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selector,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selector)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1521, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "query_selector") < 0)) __PYX_ERR(0, 1521, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_selector = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("query_selector", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1521, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.query_selector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_selector), (&PyUnicode_Type), 1, "selector", 1))) __PYX_ERR(0, 1521, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_12query_selector(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_selector);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_12query_selector(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector(__pyx_v_self, __pyx_v_selector, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.query_selector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1548
 *         return None
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector_all", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_query_selector_all); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1548, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_selector};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection))))) __PYX_ERR(0, 1548, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1560
 *         :rtype: DOMCollection
 *         """
 *         return self._forward_collection_match(b'selector_all', (selector.encode(),))             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint matches(self, str selector) except -1:
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  if (unlikely(__pyx_v_selector == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1560, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_selector, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 1560, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self->__pyx_vtab)->_forward_collection_match(__pyx_v_self, __pyx_n_b_selector_all, __pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1548
 *         return None
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.query_selector_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_14query_selector_all, "\n        query_selector_all(self, selector)\n\n        Within all elements in this collection, find the elements matching the given CSS selector\n        and return a :class:`DOMCollection` with the aggregated results.\n\n        :param selector: CSS selector\n        :type selector: str\n        :return: collection of matching elements\n        :rtype: DOMCollection\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all = {"query_selector_all", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_14query_selector_all};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_selector = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("query_selector_all (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selector,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selector)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1548, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "query_selector_all") < 0)) __PYX_ERR(0, 1548, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_selector = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("query_selector_all", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1548, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.query_selector_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_selector), (&PyUnicode_Type), 1, "selector", 1))) __PYX_ERR(0, 1548, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_14query_selector_all(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_selector);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_14query_selector_all(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("query_selector_all", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector_all(__pyx_v_self, __pyx_v_selector, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.query_selector_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1562
 *         return self._forward_collection_match(b'selector_all', (selector.encode(),))
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_17matches(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static int __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector, int __pyx_skip_dispatch) {
  size_t __pyx_v_i;
  PyObject *__pyx_v_selector_bytes = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  size_t __pyx_t_8;
  size_t __pyx_t_9;
  size_t __pyx_t_10;
  char const *__pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("matches", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_matches); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1562, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_17matches)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_selector};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1562, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1562, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1575
 *         :rtype: bool
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  __pyx_t_7 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = (!(__pyx_v_self->coll != 0));
  __pyx_t_6 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1576
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to select items from uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t i = 0
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1576, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1575
 *         :rtype: bool
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1578
 *             raise RuntimeError('Trying to select items from uninitialized collection')
 * 
 *         cdef size_t i = 0             # <<<<<<<<<<<<<<
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 */
  __pyx_v_i = 0;

  /* "resiliparse_dom/parse/html.pyx":1579
 * 
 *         cdef size_t i = 0
 *         cdef bytes selector_bytes = selector.encode()             # <<<<<<<<<<<<<<
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 */
  if (unlikely(__pyx_v_selector == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1579, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_selector, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_selector_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1580
 *         cdef size_t i = 0
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):             # <<<<<<<<<<<<<<
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                             <const char*>selector_bytes, len(selector_bytes)):
 */
  __pyx_t_8 = lxb_dom_collection_length(__pyx_v_self->coll);
  __pyx_t_9 = __pyx_t_8;
  for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
    __pyx_v_i = __pyx_t_10;

    /* "resiliparse_dom/parse/html.pyx":1581
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,             # <<<<<<<<<<<<<<
 *                             <const char*>selector_bytes, len(selector_bytes)):
 *                 return True
 */
    __pyx_t_1 = ((PyObject *)__pyx_v_self->tree);
    __Pyx_INCREF(__pyx_t_1);

    /* "resiliparse_dom/parse/html.pyx":1582
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                             <const char*>selector_bytes, len(selector_bytes)):             # <<<<<<<<<<<<<<
 *                 return True
 * 
 */
    if (unlikely(__pyx_v_selector_bytes == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
      __PYX_ERR(0, 1582, __pyx_L1_error)
    }
    __pyx_t_11 = __Pyx_PyBytes_AsString(__pyx_v_selector_bytes); if (unlikely((!__pyx_t_11) && PyErr_Occurred())) __PYX_ERR(0, 1582, __pyx_L1_error)
    if (unlikely(__pyx_v_selector_bytes == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      __PYX_ERR(0, 1582, __pyx_L1_error)
    }
    __pyx_t_12 = __Pyx_PyBytes_GET_SIZE(__pyx_v_selector_bytes); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1582, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1581
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,             # <<<<<<<<<<<<<<
 *                             <const char*>selector_bytes, len(selector_bytes)):
 *                 return True
 */
    __pyx_t_6 = __pyx_f_15resiliparse_dom_5parse_4html_matches_impl(lxb_dom_collection_node(__pyx_v_self->coll, __pyx_v_i), ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_1), ((char const *)__pyx_t_11), __pyx_t_12);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_6) {

      /* "resiliparse_dom/parse/html.pyx":1583
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,
 *                             <const char*>selector_bytes, len(selector_bytes)):
 *                 return True             # <<<<<<<<<<<<<<
 * 
 *         return False
 */
      __pyx_r = 1;
      goto __pyx_L0;

      /* "resiliparse_dom/parse/html.pyx":1581
 *         cdef bytes selector_bytes = selector.encode()
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             if matches_impl(lxb_dom_collection_node(self.coll, i), self.tree,             # <<<<<<<<<<<<<<
 *                             <const char*>selector_bytes, len(selector_bytes)):
 *                 return True
 */
    }
  }

  /* "resiliparse_dom/parse/html.pyx":1585
 *                 return True
 * 
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1562
 *         return self._forward_collection_match(b'selector_all', (selector.encode(),))
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.matches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_selector_bytes);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_17matches(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_16matches, "\n        matches(self, selector)\n\n        Within all elements in this collection, check whether any element in the DOM tree\n        matches the given CSS selector. This is more efficient than matching with\n        :meth:`query_selector_all` and checking the size of the returned collection.\n\n        :param selector: CSS selector\n        :type selector: str\n        :return: boolean value indicating whether a matching element exists\n        :rtype: bool\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_17matches = {"matches", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_17matches, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_16matches};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_17matches(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_selector = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("matches (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_selector,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selector)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1562, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "matches") < 0)) __PYX_ERR(0, 1562, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_selector = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("matches", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1562, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.matches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_selector), (&PyUnicode_Type), 1, "selector", 1))) __PYX_ERR(0, 1562, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_16matches(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v_selector);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_16matches(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_selector) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("matches", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_matches(__pyx_v_self, __pyx_v_selector, 1); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 1562, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.matches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_20generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "resiliparse_dom/parse/html.pyx":1587
 *         return False
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_19__iter__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__, "\n        __iter__(self)\n\n        Iterate the DOM node collection.\n\n        :rtype: t.Iterable[DOMNode]\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_19__iter__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);
  __pyx_cur_scope = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1587, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_20generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_iter, __pyx_n_s_DOMCollection___iter, __pyx_n_s_resiliparse_dom_parse_html); if (unlikely(!gen)) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_20generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *__pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  size_t __pyx_t_5;
  size_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 1587, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1595
 *         :rtype: t.Iterable[DOMNode]
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to get item of uninitialized collection')
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_cur_scope->__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_2 = (!(__pyx_cur_scope->__pyx_v_self->coll != 0));
  __pyx_t_1 = __pyx_t_2;
  __pyx_L5_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1596
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to get item of uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t i = 0
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1596, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1596, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1595
 *         :rtype: t.Iterable[DOMNode]
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to get item of uninitialized collection')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1598
 *             raise RuntimeError('Trying to get item of uninitialized collection')
 * 
 *         cdef size_t i = 0             # <<<<<<<<<<<<<<
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             yield _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, i))
 */
  __pyx_cur_scope->__pyx_v_i = 0;

  /* "resiliparse_dom/parse/html.pyx":1599
 * 
 *         cdef size_t i = 0
 *         for i in range(lxb_dom_collection_length(self.coll)):             # <<<<<<<<<<<<<<
 *             yield _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, i))
 * 
 */
  __pyx_t_4 = lxb_dom_collection_length(__pyx_cur_scope->__pyx_v_self->coll);
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_cur_scope->__pyx_v_i = __pyx_t_6;

    /* "resiliparse_dom/parse/html.pyx":1600
 *         cdef size_t i = 0
 *         for i in range(lxb_dom_collection_length(self.coll)):
 *             yield _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, i))             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
    __pyx_t_3 = ((PyObject *)__pyx_cur_scope->__pyx_v_self->tree);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_7 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_3), lxb_dom_collection_node(__pyx_cur_scope->__pyx_v_self->coll, __pyx_cur_scope->__pyx_v_i))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1600, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_7;
    __pyx_t_7 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_4;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_5;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L9_resume_from_yield:;
    __pyx_t_4 = __pyx_cur_scope->__pyx_t_0;
    __pyx_t_5 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_6 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 1600, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "resiliparse_dom/parse/html.pyx":1587
 *         return False
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __iter__(self)
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1602
 *             yield _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, i))
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __len__(self)
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_22__len__(PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__, "\n        __len__(self)\n\n        Get the number of items in this collection.\n\n        :rtype: int\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__;
#endif
static Py_ssize_t __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_22__len__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":1610
 *         :rtype: int
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             return 0
 *         return lxb_dom_collection_length(self.coll)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (!(__pyx_v_self->coll != 0));
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1611
 *         """
 *         if self.tree is None or not self.coll:
 *             return 0             # <<<<<<<<<<<<<<
 *         return lxb_dom_collection_length(self.coll)
 * 
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1610
 *         :rtype: int
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             return 0
 *         return lxb_dom_collection_length(self.coll)
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1612
 *         if self.tree is None or not self.coll:
 *             return 0
 *         return lxb_dom_collection_length(self.coll)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __pyx_r = lxb_dom_collection_length(__pyx_v_self->coll);
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1602
 *             yield _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, i))
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         """
 *         __len__(self)
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1614
 *         return lxb_dom_collection_length(self.coll)
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         """
 *         __getitem__(self, key)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_24__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__, "\n        __getitem__(self, key)\n\n        Return the :class:`DOMNode` at the given index in this collection or another :class:`DOMCollection`\n        if ``key`` is a slice object. Negative indexing is supported.\n\n        :param key: index or slice\n        :rtype: DOMNode or DOMCollection\n        :raises IndexError: if ``key`` is out of range\n        :raises TypeError: if ``key`` is not an ``int`` or ``slice``\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__;
#endif
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_24__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, PyObject *__pyx_v_key) {
  size_t __pyx_v_coll_len;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_slice_coll = 0;
  lxb_dom_collection_t *__pyx_v_dom_coll;
  PyObject *__pyx_v_start = NULL;
  PyObject *__pyx_v_stop = NULL;
  PyObject *__pyx_v_step = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  size_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 1);

  /* "resiliparse_dom/parse/html.pyx":1626
 *         :raises TypeError: if ``key`` is not an ``int`` or ``slice``
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise IndexError('Trying to get item of uninitialized collection')
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_self->tree) == Py_None);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (!(__pyx_v_self->coll != 0));
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1627
 *         """
 *         if self.tree is None or not self.coll:
 *             raise IndexError('Trying to get item of uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t coll_len = lxb_dom_collection_length(self.coll)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_IndexError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1627, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1627, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1626
 *         :raises TypeError: if ``key`` is not an ``int`` or ``slice``
 *         """
 *         if self.tree is None or not self.coll:             # <<<<<<<<<<<<<<
 *             raise IndexError('Trying to get item of uninitialized collection')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1629
 *             raise IndexError('Trying to get item of uninitialized collection')
 * 
 *         cdef size_t coll_len = lxb_dom_collection_length(self.coll)             # <<<<<<<<<<<<<<
 * 
 *         cdef DOMCollection slice_coll
 */
  __pyx_v_coll_len = lxb_dom_collection_length(__pyx_v_self->coll);

  /* "resiliparse_dom/parse/html.pyx":1633
 *         cdef DOMCollection slice_coll
 *         cdef lxb_dom_collection_t* dom_coll
 *         if isinstance(key, slice):             # <<<<<<<<<<<<<<
 *             start = key.start
 *             stop = key.stop
 */
  __pyx_t_1 = PySlice_Check(__pyx_v_key); 
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1634
 *         cdef lxb_dom_collection_t* dom_coll
 *         if isinstance(key, slice):
 *             start = key.start             # <<<<<<<<<<<<<<
 *             stop = key.stop
 *             step = key.step if key.step is not None else 1
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_start); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_start = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1635
 *         if isinstance(key, slice):
 *             start = key.start
 *             stop = key.stop             # <<<<<<<<<<<<<<
 *             step = key.step if key.step is not None else 1
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_stop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1635, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_stop = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1636
 *             start = key.start
 *             stop = key.stop
 *             step = key.step if key.step is not None else 1             # <<<<<<<<<<<<<<
 * 
 *             if start is None:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_step); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1636, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = (__pyx_t_4 != Py_None);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_1) {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_step); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1636, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
    } else {
      __Pyx_INCREF(__pyx_int_1);
      __pyx_t_3 = __pyx_int_1;
    }
    __pyx_v_step = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1638
 *             step = key.step if key.step is not None else 1
 * 
 *             if start is None:             # <<<<<<<<<<<<<<
 *                 start = coll_len - 1 if step < 0 else 0
 *             else:
 */
    __pyx_t_1 = (__pyx_v_start == Py_None);
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1639
 * 
 *             if start is None:
 *                 start = coll_len - 1 if step < 0 else 0             # <<<<<<<<<<<<<<
 *             else:
 *                 start = self._wrap_idx(min(start, coll_len - 1))
 */
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_step, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1639, __pyx_L1_error)
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1639, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_1) {
        __pyx_t_4 = __Pyx_PyInt_FromSize_t((__pyx_v_coll_len - 1)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1639, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __pyx_t_4;
        __pyx_t_4 = 0;
      } else {
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_3 = __pyx_int_0;
      }
      __Pyx_DECREF_SET(__pyx_v_start, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "resiliparse_dom/parse/html.pyx":1638
 *             step = key.step if key.step is not None else 1
 * 
 *             if start is None:             # <<<<<<<<<<<<<<
 *                 start = coll_len - 1 if step < 0 else 0
 *             else:
 */
      goto __pyx_L7;
    }

    /* "resiliparse_dom/parse/html.pyx":1641
 *                 start = coll_len - 1 if step < 0 else 0
 *             else:
 *                 start = self._wrap_idx(min(start, coll_len - 1))             # <<<<<<<<<<<<<<
 * 
 *             if stop is None:
 */
    /*else*/ {
      __pyx_t_5 = (__pyx_v_coll_len - 1);
      __Pyx_INCREF(__pyx_v_start);
      __pyx_t_3 = __pyx_v_start;
      __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1641, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyObject_RichCompare(__pyx_t_6, __pyx_t_3, Py_LT); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1641, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1641, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (__pyx_t_1) {
        __pyx_t_7 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_4 = __pyx_t_7;
        __pyx_t_7 = 0;
      } else {
        __Pyx_INCREF(__pyx_t_3);
        __pyx_t_4 = __pyx_t_3;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = PyInt_AsSsize_t(__pyx_t_4); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1641, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_5 = __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx(__pyx_v_self, __pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1641, __pyx_L1_error)
      __pyx_t_4 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1641, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF_SET(__pyx_v_start, __pyx_t_4);
      __pyx_t_4 = 0;
    }
    __pyx_L7:;

    /* "resiliparse_dom/parse/html.pyx":1643
 *                 start = self._wrap_idx(min(start, coll_len - 1))
 * 
 *             if stop is None:             # <<<<<<<<<<<<<<
 *                 stop = -1 if step < 0 else coll_len
 *             else:
 */
    __pyx_t_1 = (__pyx_v_stop == Py_None);
    if (__pyx_t_1) {

      /* "resiliparse_dom/parse/html.pyx":1644
 * 
 *             if stop is None:
 *                 stop = -1 if step < 0 else coll_len             # <<<<<<<<<<<<<<
 *             else:
 *                 stop = self._wrap_idx(min(stop, coll_len))
 */
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_step, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1644, __pyx_L1_error)
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1644, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_1) {
        __Pyx_INCREF(__pyx_int_neg_1);
        __pyx_t_4 = __pyx_int_neg_1;
      } else {
        __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_v_coll_len); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1644, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __pyx_t_3;
        __pyx_t_3 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_stop, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "resiliparse_dom/parse/html.pyx":1643
 *                 start = self._wrap_idx(min(start, coll_len - 1))
 * 
 *             if stop is None:             # <<<<<<<<<<<<<<
 *                 stop = -1 if step < 0 else coll_len
 *             else:
 */
      goto __pyx_L8;
    }

    /* "resiliparse_dom/parse/html.pyx":1646
 *                 stop = -1 if step < 0 else coll_len
 *             else:
 *                 stop = self._wrap_idx(min(stop, coll_len))             # <<<<<<<<<<<<<<
 * 
 *             dom_coll = lxb_dom_collection_make(self.coll.document,
 */
    /*else*/ {
      __pyx_t_5 = __pyx_v_coll_len;
      __Pyx_INCREF(__pyx_v_stop);
      __pyx_t_4 = __pyx_v_stop;
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = PyObject_RichCompare(__pyx_t_7, __pyx_t_4, Py_LT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1646, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1646, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (__pyx_t_1) {
        __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = __pyx_t_6;
        __pyx_t_6 = 0;
      } else {
        __Pyx_INCREF(__pyx_t_4);
        __pyx_t_3 = __pyx_t_4;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = PyInt_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1646, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx(__pyx_v_self, __pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1646, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_stop, __pyx_t_3);
      __pyx_t_3 = 0;
    }
    __pyx_L8:;

    /* "resiliparse_dom/parse/html.pyx":1649
 * 
 *             dom_coll = lxb_dom_collection_make(self.coll.document,
 *                                                min(coll_len, abs((stop - start) // step) + 1))             # <<<<<<<<<<<<<<
 *             for i in range(start, stop, step):
 *                 lxb_dom_collection_append(dom_coll, lxb_dom_collection_element(self.coll, i))
 */
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_stop, __pyx_v_start); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyNumber_FloorDivide(__pyx_t_3, __pyx_v_step); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyNumber_Absolute(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = __pyx_v_coll_len;
    __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyObject_RichCompare(__pyx_t_4, __pyx_t_6, Py_LT); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (__pyx_t_1) {
      __Pyx_INCREF(__pyx_t_4);
      __pyx_t_3 = __pyx_t_4;
    } else {
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_3 = __pyx_t_7;
      __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_t_3); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1649, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1648
 *                 stop = self._wrap_idx(min(stop, coll_len))
 * 
 *             dom_coll = lxb_dom_collection_make(self.coll.document,             # <<<<<<<<<<<<<<
 *                                                min(coll_len, abs((stop - start) // step) + 1))
 *             for i in range(start, stop, step):
 */
    __pyx_v_dom_coll = lxb_dom_collection_make(__pyx_v_self->coll->document, __pyx_t_5);

    /* "resiliparse_dom/parse/html.pyx":1650
 *             dom_coll = lxb_dom_collection_make(self.coll.document,
 *                                                min(coll_len, abs((stop - start) // step) + 1))
 *             for i in range(start, stop, step):             # <<<<<<<<<<<<<<
 *                 lxb_dom_collection_append(dom_coll, lxb_dom_collection_element(self.coll, i))
 * 
 */
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_start);
    __Pyx_GIVEREF(__pyx_v_start);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_start)) __PYX_ERR(0, 1650, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_stop);
    __Pyx_GIVEREF(__pyx_v_stop);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_stop)) __PYX_ERR(0, 1650, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_step);
    __Pyx_GIVEREF(__pyx_v_step);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_step)) __PYX_ERR(0, 1650, __pyx_L1_error);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3);
      __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1650, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1650, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_3);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1650, __pyx_L1_error)
            #endif
            if (__pyx_t_9 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 1650, __pyx_L1_error)
          #else
          __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1650, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_3);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1650, __pyx_L1_error)
            #endif
            if (__pyx_t_9 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 1650, __pyx_L1_error)
          #else
          __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1650, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_3);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1650, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "resiliparse_dom/parse/html.pyx":1651
 *                                                min(coll_len, abs((stop - start) // step) + 1))
 *             for i in range(start, stop, step):
 *                 lxb_dom_collection_append(dom_coll, lxb_dom_collection_element(self.coll, i))             # <<<<<<<<<<<<<<
 * 
 *             slice_coll = DOMCollection.__new__(DOMCollection, self.tree)
 */
      __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1651, __pyx_L1_error)
      (void)(lxb_dom_collection_append(__pyx_v_dom_coll, lxb_dom_collection_element(__pyx_v_self->coll, __pyx_t_5)));

      /* "resiliparse_dom/parse/html.pyx":1650
 *             dom_coll = lxb_dom_collection_make(self.coll.document,
 *                                                min(coll_len, abs((stop - start) // step) + 1))
 *             for i in range(start, stop, step):             # <<<<<<<<<<<<<<
 *                 lxb_dom_collection_append(dom_coll, lxb_dom_collection_element(self.coll, i))
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1653
 *                 lxb_dom_collection_append(dom_coll, lxb_dom_collection_element(self.coll, i))
 * 
 *             slice_coll = DOMCollection.__new__(DOMCollection, self.tree)             # <<<<<<<<<<<<<<
 *             slice_coll.coll = dom_coll
 *             return slice_coll
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1653, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF((PyObject *)__pyx_v_self->tree);
    __Pyx_GIVEREF((PyObject *)__pyx_v_self->tree);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self->tree))) __PYX_ERR(0, 1653, __pyx_L1_error);
    __pyx_t_4 = ((PyObject *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMCollection(((PyTypeObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection), __pyx_t_3, NULL)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1653, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_slice_coll = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "resiliparse_dom/parse/html.pyx":1654
 * 
 *             slice_coll = DOMCollection.__new__(DOMCollection, self.tree)
 *             slice_coll.coll = dom_coll             # <<<<<<<<<<<<<<
 *             return slice_coll
 * 
 */
    __pyx_v_slice_coll->coll = __pyx_v_dom_coll;

    /* "resiliparse_dom/parse/html.pyx":1655
 *             slice_coll = DOMCollection.__new__(DOMCollection, self.tree)
 *             slice_coll.coll = dom_coll
 *             return slice_coll             # <<<<<<<<<<<<<<
 * 
 *         if type(key) is not int:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF((PyObject *)__pyx_v_slice_coll);
    __pyx_r = ((PyObject *)__pyx_v_slice_coll);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1633
 *         cdef DOMCollection slice_coll
 *         cdef lxb_dom_collection_t* dom_coll
 *         if isinstance(key, slice):             # <<<<<<<<<<<<<<
 *             start = key.start
 *             stop = key.stop
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1657
 *             return slice_coll
 * 
 *         if type(key) is not int:             # <<<<<<<<<<<<<<
 *             raise TypeError(f'Invalid key type: {type(key)}')
 * 
 */
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_key)) != ((PyObject *)(&PyInt_Type)));
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1658
 * 
 *         if type(key) is not int:
 *             raise TypeError(f'Invalid key type: {type(key)}')             # <<<<<<<<<<<<<<
 * 
 *         if key >= coll_len:
 */
    __pyx_t_4 = __Pyx_PyObject_FormatSimple(((PyObject *)Py_TYPE(__pyx_v_key)), __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1658, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyUnicode_Concat(__pyx_kp_u_Invalid_key_type, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1658, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1658, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 1658, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1657
 *             return slice_coll
 * 
 *         if type(key) is not int:             # <<<<<<<<<<<<<<
 *             raise TypeError(f'Invalid key type: {type(key)}')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1660
 *             raise TypeError(f'Invalid key type: {type(key)}')
 * 
 *         if key >= coll_len:             # <<<<<<<<<<<<<<
 *             raise IndexError('Index out of range')
 * 
 */
  __pyx_t_4 = __Pyx_PyInt_FromSize_t(__pyx_v_coll_len); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_key, __pyx_t_4, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1660, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1660, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1661
 * 
 *         if key >= coll_len:
 *             raise IndexError('Index out of range')             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, self._wrap_idx(key)))
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_IndexError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1661, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1661, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1660
 *             raise TypeError(f'Invalid key type: {type(key)}')
 * 
 *         if key >= coll_len:             # <<<<<<<<<<<<<<
 *             raise IndexError('Index out of range')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1663
 *             raise IndexError('Index out of range')
 * 
 *         return _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, self._wrap_idx(key)))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = ((PyObject *)__pyx_v_self->tree);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_8 = PyInt_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1663, __pyx_L1_error)
  __pyx_t_5 = __pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx(__pyx_v_self, __pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1663, __pyx_L1_error)
  __pyx_t_4 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_3), lxb_dom_collection_node(__pyx_v_self->coll, __pyx_t_5))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1614
 *         return lxb_dom_collection_length(self.coll)
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         """
 *         __getitem__(self, key)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_slice_coll);
  __Pyx_XDECREF(__pyx_v_start);
  __Pyx_XDECREF(__pyx_v_stop);
  __Pyx_XDECREF(__pyx_v_step);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1665
 *         return _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, self._wrap_idx(key)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f'{{{", ".join(repr(n) for n in self)}}}'
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_25__repr__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___2generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "resiliparse_dom/parse/html.pyx":1666
 * 
 *     def __repr__(self):
 *         return f'{{{", ".join(repr(n) for n in self)}}}'             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___genexpr(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_genexpr_arg_0) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1666, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_genexpr_arg_0);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_genexpr_arg_0);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___2generator3, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_repr___locals_genexpr, __pyx_n_s_resiliparse_dom_parse_html); if (unlikely(!gen)) __PYX_ERR(0, 1666, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__repr__.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___2generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *__pyx_cur_scope = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_genexpr_arg_0)) { __Pyx_RaiseUnboundLocalError(".0"); __PYX_ERR(0, 1666, __pyx_L1_error) }
  if (likely(PyList_CheckExact(((PyObject *)__pyx_cur_scope->__pyx_genexpr_arg_0))) || PyTuple_CheckExact(((PyObject *)__pyx_cur_scope->__pyx_genexpr_arg_0))) {
    __pyx_t_1 = ((PyObject *)__pyx_cur_scope->__pyx_genexpr_arg_0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(((PyObject *)__pyx_cur_scope->__pyx_genexpr_arg_0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1666, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1666, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1666, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1666, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1666, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1666, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1666, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1666, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1666, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_n);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_n, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Repr(__pyx_cur_scope->__pyx_v_n); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1666, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 1666, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1665
 *         return _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, self._wrap_idx(key)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f'{{{", ".join(repr(n) for n in self)}}}'
 * 
 */

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_25__repr__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self) {
  PyObject *__pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___2generator3 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 1);

  /* "resiliparse_dom/parse/html.pyx":1666
 * 
 *     def __repr__(self):
 *         return f'{{{", ".join(repr(n) for n in self)}}}'             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_INCREF(__pyx_kp_u__27);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__27);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u__27);
  __pyx_t_4 = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___genexpr(NULL, __pyx_v_self); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Generator_Next(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyUnicode_Join(__pyx_kp_u__28, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__29);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__29);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__29);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1665
 *         return _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, self._wrap_idx(key)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f'{{{", ".join(repr(n) for n in self)}}}'
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_gb_15resiliparse_dom_5parse_4html_13DOMCollection_8__repr___2generator3);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1668
 *         return f'{{{", ".join(repr(n) for n in self)}}}'
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.__repr__()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_28__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_28__str__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_27__str__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_27__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 1);

  /* "resiliparse_dom/parse/html.pyx":1669
 * 
 *     def __str__(self):
 *         return self.__repr__()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_repr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1668
 *         return f'{{{", ".join(repr(n) for n in self)}}}'
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.__repr__()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_30__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_30__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_30__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_30__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_29__reduce_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_29__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_32__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_32__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_32__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_32__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_31__setstate_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_13DOMCollection_31__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMCollection.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1672
 * 
 * 
 * cdef HTMLTree create_html_tree(bytes document, bint reencode=True, str encoding='utf-8', str errors='ignore'):             # <<<<<<<<<<<<<<
 *     """
 *     Create :class:`HTMLTree` instance from bytes content.
 */

static struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_f_15resiliparse_dom_5parse_4html_create_html_tree(PyObject *__pyx_v_document, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree *__pyx_optional_args) {
  int __pyx_v_reencode = ((int)1);
  PyObject *__pyx_v_encoding = ((PyObject*)__pyx_kp_u_utf_8);
  PyObject *__pyx_v_errors = ((PyObject*)__pyx_n_u_ignore);
  lxb_status_t __pyx_v_status;
  lxb_char_t const *__pyx_v_html;
  size_t __pyx_v_html_len;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_tree = 0;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_bytes_to_str __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  lxb_char_t const *__pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_html_tree", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_reencode = __pyx_optional_args->reencode;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_encoding = __pyx_optional_args->encoding;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_errors = __pyx_optional_args->errors;
        }
      }
    }
  }
  __Pyx_INCREF(__pyx_v_document);
  __Pyx_INCREF(__pyx_v_encoding);

  /* "resiliparse_dom/parse/html.pyx":1682
 *     :return: :class:`HTMLTree` instance
 *     """
 *     encoding = map_encoding_to_html5(encoding)             # <<<<<<<<<<<<<<
 *     if reencode:
 *         document = bytes_to_str(document, encoding, errors).encode()
 */
  __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5(__pyx_v_encoding, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_encoding, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1683
 *     """
 *     encoding = map_encoding_to_html5(encoding)
 *     if reencode:             # <<<<<<<<<<<<<<
 *         document = bytes_to_str(document, encoding, errors).encode()
 *     cdef lxb_status_t status
 */
  if (__pyx_v_reencode) {

    /* "resiliparse_dom/parse/html.pyx":1684
 *     encoding = map_encoding_to_html5(encoding)
 *     if reencode:
 *         document = bytes_to_str(document, encoding, errors).encode()             # <<<<<<<<<<<<<<
 *     cdef lxb_status_t status
 *     cdef const lxb_char_t* html = <const lxb_char_t*>document
 */
    __pyx_t_2.__pyx_n = 2;
    __pyx_t_2.encoding = __pyx_v_encoding;
    __pyx_t_2.errors = __pyx_v_errors;
    __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_8encoding_bytes_to_str(__pyx_v_document, 0, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__pyx_t_1 == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
      __PYX_ERR(0, 1684, __pyx_L1_error)
    }
    __pyx_t_3 = PyUnicode_AsEncodedString(((PyObject*)__pyx_t_1), NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_document, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "resiliparse_dom/parse/html.pyx":1683
 *     """
 *     encoding = map_encoding_to_html5(encoding)
 *     if reencode:             # <<<<<<<<<<<<<<
 *         document = bytes_to_str(document, encoding, errors).encode()
 *     cdef lxb_status_t status
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1686
 *         document = bytes_to_str(document, encoding, errors).encode()
 *     cdef lxb_status_t status
 *     cdef const lxb_char_t* html = <const lxb_char_t*>document             # <<<<<<<<<<<<<<
 *     cdef size_t html_len = len(document)
 *     cdef HTMLTree tree = HTMLTree.__new__(HTMLTree)
 */
  if (unlikely(__pyx_v_document == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1686, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyBytes_AsUString(__pyx_v_document); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 1686, __pyx_L1_error)
  __pyx_v_html = ((lxb_char_t const *)__pyx_t_4);

  /* "resiliparse_dom/parse/html.pyx":1687
 *     cdef lxb_status_t status
 *     cdef const lxb_char_t* html = <const lxb_char_t*>document
 *     cdef size_t html_len = len(document)             # <<<<<<<<<<<<<<
 *     cdef HTMLTree tree = HTMLTree.__new__(HTMLTree)
 *     with nogil:
 */
  if (unlikely(__pyx_v_document == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1687, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyBytes_GET_SIZE(__pyx_v_document); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1687, __pyx_L1_error)
  __pyx_v_html_len = __pyx_t_5;

  /* "resiliparse_dom/parse/html.pyx":1688
 *     cdef const lxb_char_t* html = <const lxb_char_t*>document
 *     cdef size_t html_len = len(document)
 *     cdef HTMLTree tree = HTMLTree.__new__(HTMLTree)             # <<<<<<<<<<<<<<
 *     with nogil:
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 */
  __pyx_t_3 = ((PyObject *)__pyx_tp_new_15resiliparse_dom_5parse_4html_HTMLTree(((PyTypeObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree), __pyx_empty_tuple, NULL)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1688, __pyx_L1_error)
  __Pyx_GOTREF((PyObject *)__pyx_t_3);
  __pyx_v_tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "resiliparse_dom/parse/html.pyx":1689
 *     cdef size_t html_len = len(document)
 *     cdef HTMLTree tree = HTMLTree.__new__(HTMLTree)
 *     with nogil:             # <<<<<<<<<<<<<<
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 *     if status != LXB_STATUS_OK:
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      _save = NULL;
      Py_UNBLOCK_THREADS
      __Pyx_FastGIL_Remember();
      #endif
      /*try:*/ {

        /* "resiliparse_dom/parse/html.pyx":1690
 *     cdef HTMLTree tree = HTMLTree.__new__(HTMLTree)
 *     with nogil:
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)             # <<<<<<<<<<<<<<
 *     if status != LXB_STATUS_OK:
 *         raise ValueError('Failed to parse HTML document')
 */
        __pyx_v_status = lxb_html_document_parse(__pyx_v_tree->dom_document, __pyx_v_html, __pyx_v_html_len);
      }

      /* "resiliparse_dom/parse/html.pyx":1689
 *     cdef size_t html_len = len(document)
 *     cdef HTMLTree tree = HTMLTree.__new__(HTMLTree)
 *     with nogil:             # <<<<<<<<<<<<<<
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 *     if status != LXB_STATUS_OK:
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          __Pyx_FastGIL_Forget();
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L6:;
      }
  }

  /* "resiliparse_dom/parse/html.pyx":1691
 *     with nogil:
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 *     if status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         raise ValueError('Failed to parse HTML document')
 *     return tree
 */
  __pyx_t_6 = (__pyx_v_status != LXB_STATUS_OK);
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1692
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 *     if status != LXB_STATUS_OK:
 *         raise ValueError('Failed to parse HTML document')             # <<<<<<<<<<<<<<
 *     return tree
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1692, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1692, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1691
 *     with nogil:
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 *     if status != LXB_STATUS_OK:             # <<<<<<<<<<<<<<
 *         raise ValueError('Failed to parse HTML document')
 *     return tree
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1693
 *     if status != LXB_STATUS_OK:
 *         raise ValueError('Failed to parse HTML document')
 *     return tree             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_tree);
  __pyx_r = __pyx_v_tree;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1672
 * 
 * 
 * cdef HTMLTree create_html_tree(bytes document, bint reencode=True, str encoding='utf-8', str errors='ignore'):             # <<<<<<<<<<<<<<
 *     """
 *     Create :class:`HTMLTree` instance from bytes content.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.create_html_tree", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_tree);
  __Pyx_XDECREF(__pyx_v_document);
  __Pyx_XDECREF(__pyx_v_encoding);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1703
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         raise SyntaxError('Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()')
 * 
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree___init__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree___init__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "resiliparse_dom/parse/html.pyx":1704
 * 
 *     def __init__(self, *args, **kwargs):
 *         raise SyntaxError('Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()')             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_SyntaxError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 1704, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1703
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         raise SyntaxError('Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1706
 *         raise SyntaxError('Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()')
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.dom_document = lxb_html_document_create()
 *         if not self.dom_document:
 */

/* Python wrapper */
static int __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, __pyx_nargs); return -1;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_VARARGS(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_2__cinit__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_2__cinit__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "resiliparse_dom/parse/html.pyx":1707
 * 
 *     def __cinit__(self):
 *         self.dom_document = lxb_html_document_create()             # <<<<<<<<<<<<<<
 *         if not self.dom_document:
 *             raise RuntimeError('Failed to allocate HTML document')
 */
  __pyx_v_self->dom_document = lxb_html_document_create();

  /* "resiliparse_dom/parse/html.pyx":1708
 *     def __cinit__(self):
 *         self.dom_document = lxb_html_document_create()
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Failed to allocate HTML document')
 *         self.css_parser = NULL
 */
  __pyx_t_1 = (!(__pyx_v_self->dom_document != 0));
  if (unlikely(__pyx_t_1)) {

    /* "resiliparse_dom/parse/html.pyx":1709
 *         self.dom_document = lxb_html_document_create()
 *         if not self.dom_document:
 *             raise RuntimeError('Failed to allocate HTML document')             # <<<<<<<<<<<<<<
 *         self.css_parser = NULL
 *         self.css_memory = NULL
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1709, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1709, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1708
 *     def __cinit__(self):
 *         self.dom_document = lxb_html_document_create()
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Failed to allocate HTML document')
 *         self.css_parser = NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1710
 *         if not self.dom_document:
 *             raise RuntimeError('Failed to allocate HTML document')
 *         self.css_parser = NULL             # <<<<<<<<<<<<<<
 *         self.css_memory = NULL
 * 
 */
  __pyx_v_self->css_parser = NULL;

  /* "resiliparse_dom/parse/html.pyx":1711
 *             raise RuntimeError('Failed to allocate HTML document')
 *         self.css_parser = NULL
 *         self.css_memory = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->css_memory = NULL;

  /* "resiliparse_dom/parse/html.pyx":1706
 *         raise SyntaxError('Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()')
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.dom_document = lxb_html_document_create()
 *         if not self.dom_document:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1713
 *         self.css_memory = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.dom_document:
 *             lxb_html_document_destroy(self.dom_document)
 */

/* Python wrapper */
static void __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_5__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4__dealloc__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4__dealloc__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":1714
 * 
 *     def __dealloc__(self):
 *         if self.dom_document:             # <<<<<<<<<<<<<<
 *             lxb_html_document_destroy(self.dom_document)
 *             self.dom_document = NULL
 */
  __pyx_t_1 = (__pyx_v_self->dom_document != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1715
 *     def __dealloc__(self):
 *         if self.dom_document:
 *             lxb_html_document_destroy(self.dom_document)             # <<<<<<<<<<<<<<
 *             self.dom_document = NULL
 * 
 */
    (void)(lxb_html_document_destroy(__pyx_v_self->dom_document));

    /* "resiliparse_dom/parse/html.pyx":1716
 *         if self.dom_document:
 *             lxb_html_document_destroy(self.dom_document)
 *             self.dom_document = NULL             # <<<<<<<<<<<<<<
 * 
 *         if self.css_parser:
 */
    __pyx_v_self->dom_document = NULL;

    /* "resiliparse_dom/parse/html.pyx":1714
 * 
 *     def __dealloc__(self):
 *         if self.dom_document:             # <<<<<<<<<<<<<<
 *             lxb_html_document_destroy(self.dom_document)
 *             self.dom_document = NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1718
 *             self.dom_document = NULL
 * 
 *         if self.css_parser:             # <<<<<<<<<<<<<<
 *             destroy_css_parser(self.css_memory, self.css_parser)
 *             self.css_parser = NULL
 */
  __pyx_t_1 = (__pyx_v_self->css_parser != 0);
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1719
 * 
 *         if self.css_parser:
 *             destroy_css_parser(self.css_memory, self.css_parser)             # <<<<<<<<<<<<<<
 *             self.css_parser = NULL
 *             self.css_memory = NULL
 */
    __pyx_f_15resiliparse_dom_5parse_4html_destroy_css_parser(__pyx_v_self->css_memory, __pyx_v_self->css_parser);

    /* "resiliparse_dom/parse/html.pyx":1720
 *         if self.css_parser:
 *             destroy_css_parser(self.css_memory, self.css_parser)
 *             self.css_parser = NULL             # <<<<<<<<<<<<<<
 *             self.css_memory = NULL
 * 
 */
    __pyx_v_self->css_parser = NULL;

    /* "resiliparse_dom/parse/html.pyx":1721
 *             destroy_css_parser(self.css_memory, self.css_parser)
 *             self.css_parser = NULL
 *             self.css_memory = NULL             # <<<<<<<<<<<<<<
 * 
 *     # noinspection PyAttributeOutsideInit
 */
    __pyx_v_self->css_memory = NULL;

    /* "resiliparse_dom/parse/html.pyx":1718
 *             self.dom_document = NULL
 * 
 *         if self.css_parser:             # <<<<<<<<<<<<<<
 *             destroy_css_parser(self.css_memory, self.css_parser)
 *             self.css_parser = NULL
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1713
 *         self.css_memory = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.dom_document:
 *             lxb_html_document_destroy(self.dom_document)
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":1724
 * 
 *     # noinspection PyAttributeOutsideInit
 *     cdef inline void init_css_parser(self) noexcept nogil:             # <<<<<<<<<<<<<<
 *         """
 *         Initialize CSS selector if not already initialized.
 */

static void __pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  int __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":1728
 *         Initialize CSS selector if not already initialized.
 *         """
 *         if not self.css_parser:             # <<<<<<<<<<<<<<
 *             create_css_parser(&self.css_memory, &self.css_parser)
 * 
 */
  __pyx_t_1 = (!(__pyx_v_self->css_parser != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1729
 *         """
 *         if not self.css_parser:
 *             create_css_parser(&self.css_memory, &self.css_parser)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_f_15resiliparse_dom_5parse_4html_create_css_parser((&__pyx_v_self->css_memory), (&__pyx_v_self->css_parser));

    /* "resiliparse_dom/parse/html.pyx":1728
 *         Initialize CSS selector if not already initialized.
 *         """
 *         if not self.css_parser:             # <<<<<<<<<<<<<<
 *             create_css_parser(&self.css_memory, &self.css_parser)
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1724
 * 
 *     # noinspection PyAttributeOutsideInit
 *     cdef inline void init_css_parser(self) noexcept nogil:             # <<<<<<<<<<<<<<
 *         """
 *         Initialize CSS selector if not already initialized.
 */

  /* function exit code */
}

/* "resiliparse_dom/parse/html.pyx":1732
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse(cls, str document):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_7parse(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_6parse, "\n        parse(self, document)\n        \n        Parse HTML from a Unicode string into a DOM tree.\n        \n        :param document: input HTML document\n        :return: HTML DOM tree\n        :rtype: HTMLTree\n        :raises ValueError: if HTML parsing fails for unknown reasons\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_7parse = {"parse", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_7parse, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_6parse};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_7parse(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_document = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_document,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_document)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "parse") < 0)) __PYX_ERR(0, 1732, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_document = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parse", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1732, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.parse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_document), (&PyUnicode_Type), 1, "document", 1))) __PYX_ERR(0, 1733, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_6parse(((PyTypeObject*)__pyx_v_cls), __pyx_v_document);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_6parse(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_document) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parse", 1);

  /* "resiliparse_dom/parse/html.pyx":1744
 *         :raises ValueError: if HTML parsing fails for unknown reasons
 *         """
 *         return create_html_tree(document.encode(), reencode=False)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_document == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1744, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_document, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3.__pyx_n = 1;
  __pyx_t_3.reencode = 0;
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_create_html_tree(((PyObject*)__pyx_t_1), &__pyx_t_3)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1732
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse(cls, str document):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.parse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1746
 *         return create_html_tree(document.encode(), reencode=False)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse_from_bytes(cls, bytes document, str encoding='utf-8', str errors='ignore'):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_9parse_from_bytes(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_8parse_from_bytes, "\n        parse_from_bytes(self, document, encoding='utf-8', errors='ignore')\n        \n        Decode a raw HTML byte string and parse it into a DOM tree.\n        \n        The decoding routine uses :func:`~.parse.encoding.bytes_to_str` to take care of decoding errors,\n        so it is sufficient if ``encoding`` is just a best guess of what the actual input encoding is.\n        The encoding name will be remapped according to the WHATWG specification by calling\n        :func:`~.parse.encoding.map_encoding_to_html5` before trying to decode the byte string with it.\n        \n        :param document: input byte string\n        :param encoding: encoding for decoding byte string\n        :param errors: decoding error policy (same as ``str.decode()``)\n        :return: HTML DOM tree\n        :rtype: HTMLTree\n        :raises ValueError: if HTML parsing fails for unknown reasons\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_9parse_from_bytes = {"parse_from_bytes", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_9parse_from_bytes, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_8parse_from_bytes};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_9parse_from_bytes(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_document = 0;
  PyObject *__pyx_v_encoding = 0;
  PyObject *__pyx_v_errors = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parse_from_bytes (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_document,&__pyx_n_s_encoding,&__pyx_n_s_errors,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject*)__pyx_kp_u_utf_8));
    values[2] = __Pyx_Arg_NewRef_FASTCALL(((PyObject*)__pyx_n_u_ignore));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_document)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_encoding);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_errors);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "parse_from_bytes") < 0)) __PYX_ERR(0, 1746, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_document = ((PyObject*)values[0]);
    __pyx_v_encoding = ((PyObject*)values[1]);
    __pyx_v_errors = ((PyObject*)values[2]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parse_from_bytes", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1746, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.parse_from_bytes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_document), (&PyBytes_Type), 1, "document", 1))) __PYX_ERR(0, 1747, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_encoding), (&PyUnicode_Type), 1, "encoding", 1))) __PYX_ERR(0, 1747, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_errors), (&PyUnicode_Type), 1, "errors", 1))) __PYX_ERR(0, 1747, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_8parse_from_bytes(((PyTypeObject*)__pyx_v_cls), __pyx_v_document, __pyx_v_encoding, __pyx_v_errors);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_8parse_from_bytes(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_document, PyObject *__pyx_v_encoding, PyObject *__pyx_v_errors) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parse_from_bytes", 1);

  /* "resiliparse_dom/parse/html.pyx":1765
 *         :raises ValueError: if HTML parsing fails for unknown reasons
 *         """
 *         return create_html_tree(document, True, encoding, errors)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 3;
  __pyx_t_2.reencode = 1;
  __pyx_t_2.encoding = __pyx_v_encoding;
  __pyx_t_2.errors = __pyx_v_errors;
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_create_html_tree(__pyx_v_document, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1765, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1746
 *         return create_html_tree(document.encode(), reencode=False)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse_from_bytes(cls, bytes document, str encoding='utf-8', str errors='ignore'):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.parse_from_bytes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1767
 *         return create_html_tree(document, True, encoding, errors)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def document(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_8document_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_8document_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_8document___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_8document___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":1774
 *         :type: DOMNode or None
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!(__pyx_v_self->dom_document != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1775
 *         """
 *         if not self.dom_document:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_node(self, <lxb_dom_node_t*>&self.dom_document.dom_document)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1774
 *         :type: DOMNode or None
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1777
 *             return None
 * 
 *         return _create_dom_node(self, <lxb_dom_node_t*>&self.dom_document.dom_document)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(__pyx_v_self, ((lxb_dom_node_t *)(&__pyx_v_self->dom_document->dom_document)))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1767
 *         return create_html_tree(document, True, encoding, errors)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def document(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.document.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1779
 *         return _create_dom_node(self, <lxb_dom_node_t*>&self.dom_document.dom_document)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def head(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_4head_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_4head_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4head___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4head___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":1786
 *         :type: DOMNode or None
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!(__pyx_v_self->dom_document != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1787
 *         """
 *         if not self.dom_document:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_head_element(self.dom_document))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1786
 *         :type: DOMNode or None
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1789
 *             return None
 * 
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_head_element(self.dom_document))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(__pyx_v_self, ((lxb_dom_node_t *)lxb_html_document_head_element(__pyx_v_self->dom_document)))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1779
 *         return _create_dom_node(self, <lxb_dom_node_t*>&self.dom_document.dom_document)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def head(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.head.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1791
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_head_element(self.dom_document))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def body(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_4body_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_4body_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4body___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_4body___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":1798
 *         :type: DOMNode or None
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (!(__pyx_v_self->dom_document != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1799
 *         """
 *         if not self.dom_document:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_body_element(self.dom_document))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1798
 *         :type: DOMNode or None
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1801
 *             return None
 * 
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_body_element(self.dom_document))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(__pyx_v_self, ((lxb_dom_node_t *)lxb_html_document_body_element(__pyx_v_self->dom_document)))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1791
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_head_element(self.dom_document))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def body(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.body.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1803
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_body_element(self.dom_document))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def title(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_5title_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_5title_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_5title___get__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_5title___get__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  size_t __pyx_v_title_len;
  lxb_char_t const *__pyx_v_title;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "resiliparse_dom/parse/html.pyx":1810
 *         :type: str or None
 *         """
 *         if not self.dom_document or not self.head:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_2 = (!(__pyx_v_self->dom_document != 0));
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_head); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1810, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = (!__pyx_t_2);
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1811
 *         """
 *         if not self.dom_document or not self.head:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t title_len = 0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1810
 *         :type: str or None
 *         """
 *         if not self.dom_document or not self.head:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1813
 *             return None
 * 
 *         cdef size_t title_len = 0             # <<<<<<<<<<<<<<
 *         cdef const lxb_char_t* title = lxb_html_document_title(self.dom_document, &title_len)
 *         if not title:
 */
  __pyx_v_title_len = 0;

  /* "resiliparse_dom/parse/html.pyx":1814
 * 
 *         cdef size_t title_len = 0
 *         cdef const lxb_char_t* title = lxb_html_document_title(self.dom_document, &title_len)             # <<<<<<<<<<<<<<
 *         if not title:
 *             return ''
 */
  __pyx_v_title = lxb_html_document_title(__pyx_v_self->dom_document, (&__pyx_v_title_len));

  /* "resiliparse_dom/parse/html.pyx":1815
 *         cdef size_t title_len = 0
 *         cdef const lxb_char_t* title = lxb_html_document_title(self.dom_document, &title_len)
 *         if not title:             # <<<<<<<<<<<<<<
 *             return ''
 *         return title[:title_len].decode()
 */
  __pyx_t_1 = (!(__pyx_v_title != 0));
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1816
 *         cdef const lxb_char_t* title = lxb_html_document_title(self.dom_document, &title_len)
 *         if not title:
 *             return ''             # <<<<<<<<<<<<<<
 *         return title[:title_len].decode()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_);
    __pyx_r = __pyx_kp_u_;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1815
 *         cdef size_t title_len = 0
 *         cdef const lxb_char_t* title = lxb_html_document_title(self.dom_document, &title_len)
 *         if not title:             # <<<<<<<<<<<<<<
 *             return ''
 *         return title[:title_len].decode()
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1817
 *         if not title:
 *             return ''
 *         return title[:title_len].decode()             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode create_element(self, str tag_name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_decode_c_string(((char const *)__pyx_v_title), 0, __pyx_v_title_len, NULL, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1803
 *         return _create_dom_node(self, <lxb_dom_node_t*>lxb_html_document_body_element(self.dom_document))
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def title(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.title.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1819
 *         return title[:title_len].decode()
 * 
 *     cpdef DOMNode create_element(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         create_element(self, tag_name)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_element(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_tag_name, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_tag_name_bytes = 0;
  lxb_dom_element_t *__pyx_v_element;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  lxb_char_t const *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_element", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_create_element); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1819, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_tag_name};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1819, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1819, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1830
 *         :rtype: DOMNode
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to create element in uninitialized document.')
 * 
 */
  __pyx_t_6 = (!(__pyx_v_self->dom_document != 0));
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1831
 *         """
 *         if not self.dom_document:
 *             raise RuntimeError('Trying to create element in uninitialized document.')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1831, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1830
 *         :rtype: DOMNode
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to create element in uninitialized document.')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1833
 *             raise RuntimeError('Trying to create element in uninitialized document.')
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_element_t* element = lxb_dom_document_create_element(
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>tag_name_bytes, len(tag_name_bytes), NULL)
 */
  if (unlikely(__pyx_v_tag_name == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1833, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_tag_name, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tag_name_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1835
 *         cdef bytes tag_name_bytes = tag_name.encode()
 *         cdef lxb_dom_element_t* element = lxb_dom_document_create_element(
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>tag_name_bytes, len(tag_name_bytes), NULL)             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)
 * 
 */
  if (unlikely(__pyx_v_tag_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1835, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_AsUString(__pyx_v_tag_name_bytes); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L1_error)
  if (unlikely(__pyx_v_tag_name_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1835, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_GET_SIZE(__pyx_v_tag_name_bytes); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1835, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1834
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()
 *         cdef lxb_dom_element_t* element = lxb_dom_document_create_element(             # <<<<<<<<<<<<<<
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>tag_name_bytes, len(tag_name_bytes), NULL)
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)
 */
  __pyx_v_element = lxb_dom_document_create_element(((lxb_dom_document_t *)__pyx_v_self->dom_document), ((lxb_char_t const *)__pyx_t_7), __pyx_t_8, NULL);

  /* "resiliparse_dom/parse/html.pyx":1836
 *         cdef lxb_dom_element_t* element = lxb_dom_document_create_element(
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>tag_name_bytes, len(tag_name_bytes), NULL)
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)             # <<<<<<<<<<<<<<
 * 
 *     cpdef DOMNode create_text_node(self, str text):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(__pyx_v_self, ((lxb_dom_node_t *)__pyx_v_element))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1819
 *         return title[:title_len].decode()
 * 
 *     cpdef DOMNode create_element(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         create_element(self, tag_name)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.create_element", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tag_name_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_10create_element, "\n        create_element(self, tag_name)\n        \n        Create a new DOM Element node.\n        \n        :param tag_name: element tag name\n        :type tag_name: str\n        :return: new Element node\n        :rtype: DOMNode\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element = {"create_element", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_10create_element};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_tag_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_element (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tag_name,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag_name)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1819, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_element") < 0)) __PYX_ERR(0, 1819, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_tag_name = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_element", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1819, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.create_element", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tag_name), (&PyUnicode_Type), 1, "tag_name", 1))) __PYX_ERR(0, 1819, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_10create_element(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self), __pyx_v_tag_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_10create_element(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_tag_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_element", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_element(__pyx_v_self, __pyx_v_tag_name, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.create_element", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1838
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)
 * 
 *     cpdef DOMNode create_text_node(self, str text):             # <<<<<<<<<<<<<<
 *         """
 *         create_text_node(self, text)
 */

static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_text_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_text, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_text_bytes = 0;
  lxb_dom_text_t *__pyx_v_node;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  lxb_char_t const *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_text_node", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_create_text_node); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1838, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node)) {
        __Pyx_XDECREF((PyObject *)__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_text};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1838, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1838, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "resiliparse_dom/parse/html.pyx":1849
 *         :rtype: DOMNode
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to create text node in uninitialized document.')
 * 
 */
  __pyx_t_6 = (!(__pyx_v_self->dom_document != 0));
  if (unlikely(__pyx_t_6)) {

    /* "resiliparse_dom/parse/html.pyx":1850
 *         """
 *         if not self.dom_document:
 *             raise RuntimeError('Trying to create text node in uninitialized document.')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes text_bytes = text.encode()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1850, __pyx_L1_error)

    /* "resiliparse_dom/parse/html.pyx":1849
 *         :rtype: DOMNode
 *         """
 *         if not self.dom_document:             # <<<<<<<<<<<<<<
 *             raise RuntimeError('Trying to create text node in uninitialized document.')
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1852
 *             raise RuntimeError('Trying to create text node in uninitialized document.')
 * 
 *         cdef bytes text_bytes = text.encode()             # <<<<<<<<<<<<<<
 *         cdef lxb_dom_text_t* node = lxb_dom_document_create_text_node(
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>text_bytes, len(text_bytes))
 */
  if (unlikely(__pyx_v_text == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1852, __pyx_L1_error)
  }
  __pyx_t_1 = PyUnicode_AsEncodedString(__pyx_v_text, NULL, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_text_bytes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1854
 *         cdef bytes text_bytes = text.encode()
 *         cdef lxb_dom_text_t* node = lxb_dom_document_create_text_node(
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>text_bytes, len(text_bytes))             # <<<<<<<<<<<<<<
 *         return _create_dom_node(self, <lxb_dom_node_t*>node)
 * 
 */
  if (unlikely(__pyx_v_text_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(0, 1854, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_AsUString(__pyx_v_text_bytes); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 1854, __pyx_L1_error)
  if (unlikely(__pyx_v_text_bytes == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 1854, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyBytes_GET_SIZE(__pyx_v_text_bytes); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1854, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1853
 * 
 *         cdef bytes text_bytes = text.encode()
 *         cdef lxb_dom_text_t* node = lxb_dom_document_create_text_node(             # <<<<<<<<<<<<<<
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>text_bytes, len(text_bytes))
 *         return _create_dom_node(self, <lxb_dom_node_t*>node)
 */
  __pyx_v_node = lxb_dom_document_create_text_node(((lxb_dom_document_t *)__pyx_v_self->dom_document), ((lxb_char_t const *)__pyx_t_7), __pyx_t_8);

  /* "resiliparse_dom/parse/html.pyx":1855
 *         cdef lxb_dom_text_t* node = lxb_dom_document_create_text_node(
 *             <lxb_dom_document_t*>self.dom_document, <const lxb_char_t*>text_bytes, len(text_bytes))
 *         return _create_dom_node(self, <lxb_dom_node_t*>node)             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(__pyx_v_self, ((lxb_dom_node_t *)__pyx_v_node))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1855, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1838
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)
 * 
 *     cpdef DOMNode create_text_node(self, str text):             # <<<<<<<<<<<<<<
 *         """
 *         create_text_node(self, text)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.create_text_node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_text_bytes);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_12create_text_node, "\n        create_text_node(self, text)\n\n        Create a new DOM Element node.\n\n        :param text: string contents of the new text element\n        :type text: str\n        :return: new text node\n        :rtype: DOMNode\n        ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node = {"create_text_node", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_12create_text_node};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_text = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_text_node (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_text)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1838, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_text_node") < 0)) __PYX_ERR(0, 1838, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_text = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_text_node", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1838, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.create_text_node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_text), (&PyUnicode_Type), 1, "text", 1))) __PYX_ERR(0, 1838, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_12create_text_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self), __pyx_v_text);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_12create_text_node(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, PyObject *__pyx_v_text) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_text_node", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_text_node(__pyx_v_self, __pyx_v_text, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.create_text_node", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1857
 *         return _create_dom_node(self, <lxb_dom_node_t*>node)
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         cdef DOMNode doc = self.document
 *         if doc is not None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_15__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_15__str__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_14__str__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_14__str__(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_doc = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 1);

  /* "resiliparse_dom/parse/html.pyx":1858
 * 
 *     def __str__(self):
 *         cdef DOMNode doc = self.document             # <<<<<<<<<<<<<<
 *         if doc is not None:
 *             return doc.html
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_document); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode))))) __PYX_ERR(0, 1858, __pyx_L1_error)
  __pyx_v_doc = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "resiliparse_dom/parse/html.pyx":1859
 *     def __str__(self):
 *         cdef DOMNode doc = self.document
 *         if doc is not None:             # <<<<<<<<<<<<<<
 *             return doc.html
 *         return ''
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_doc) != Py_None);
  if (__pyx_t_2) {

    /* "resiliparse_dom/parse/html.pyx":1860
 *         cdef DOMNode doc = self.document
 *         if doc is not None:
 *             return doc.html             # <<<<<<<<<<<<<<
 *         return ''
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_doc), __pyx_n_s_html); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1860, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1859
 *     def __str__(self):
 *         cdef DOMNode doc = self.document
 *         if doc is not None:             # <<<<<<<<<<<<<<
 *             return doc.html
 *         return ''
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1861
 *         if doc is not None:
 *             return doc.html
 *         return ''             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_kp_u_);
  __pyx_r = __pyx_kp_u_;
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1857
 *         return _create_dom_node(self, <lxb_dom_node_t*>node)
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         cdef DOMNode doc = self.document
 *         if doc is not None:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_doc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_17__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_17__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_17__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_17__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_16__reduce_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_19__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_19__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_19__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_19__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_18__setstate_cython__(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_8HTMLTree_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.HTMLTree.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1878
 *     :ivar int depth: the current traversal depth
 *     """
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.node = None
 *         self.depth = 0
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_10DOMContext_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_10DOMContext_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_10DOMContext_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_10DOMContext_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1878, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1878, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMContext.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_10DOMContext___init__(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_10DOMContext___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "resiliparse_dom/parse/html.pyx":1879
 *     """
 *     def __init__(self):
 *         self.node = None             # <<<<<<<<<<<<<<
 *         self.depth = 0
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_node, Py_None) < 0) __PYX_ERR(0, 1879, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1880
 *     def __init__(self):
 *         self.node = None
 *         self.depth = 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_depth, __pyx_int_0) < 0) __PYX_ERR(0, 1880, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1878
 *     :ivar int depth: the current traversal depth
 *     """
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.node = None
 *         self.depth = 0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("resiliparse_dom.parse.html.DOMContext.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1883
 * 
 * 
 * def traverse_dom(DOMNode base_node, start_callback, end_callback=None, context=None, bint elements_only=False):             # <<<<<<<<<<<<<<
 *     """
 *     traverse_dom(base_node, start_callback, end_callback=None, context=None, elements_only=False)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_1traverse_dom(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_15resiliparse_dom_5parse_4html_traverse_dom, "\n    traverse_dom(base_node, start_callback, end_callback=None, context=None, elements_only=False)\n\n    DOM traversal helper.\n\n    Traverses the DOM tree starting at ``base_node`` in pre-order and calls ``start_callback``\n    at each child node. If ``end_callback`` is not ``None``, it will be called each time\n    a DOM element's end tag is encountered.\n\n    The callbacks are expected to take exactly one :class:`DOMContext` context parameter,\n    which keeps track of the current node and traversal depth. The context object will be\n    the same throughout the whole traversal process, so it can be mutated with custom data.\n\n    :param base_node: root node of the traversal\n    :type base_node: DOMNode\n    :param start_callback: callback for each DOM node on the way (takes a :class:`DOMNode`\n                           and ``context`` as a parameter)\n    :type start_callback: t.Callable[[DOMContext], None]\n    :param end_callback: optional callback for element node end tags (takes a :class:`DOMNode`\n                         and ``context`` as a parameter)\n    :type end_callback: t.Callable[[DOMContext], None] or None\n    :param context: optional pre-initialized context object\n    :type context: DOMContext\n    :param elements_only: traverse only element nodes\n    :type elements_only: bool\n    ");
static PyMethodDef __pyx_mdef_15resiliparse_dom_5parse_4html_1traverse_dom = {"traverse_dom", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_1traverse_dom, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_traverse_dom};
static PyObject *__pyx_pw_15resiliparse_dom_5parse_4html_1traverse_dom(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_base_node = 0;
  PyObject *__pyx_v_start_callback = 0;
  PyObject *__pyx_v_end_callback = 0;
  PyObject *__pyx_v_context = 0;
  int __pyx_v_elements_only;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("traverse_dom (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_base_node,&__pyx_n_s_start_callback,&__pyx_n_s_end_callback,&__pyx_n_s_context,&__pyx_n_s_elements_only,0};
    values[2] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    values[3] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_base_node)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1883, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_start_callback)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1883, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("traverse_dom", 0, 2, 5, 1); __PYX_ERR(0, 1883, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_end_callback);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1883, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_context);
          if (value) { values[3] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1883, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_elements_only);
          if (value) { values[4] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1883, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "traverse_dom") < 0)) __PYX_ERR(0, 1883, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_base_node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)values[0]);
    __pyx_v_start_callback = values[1];
    __pyx_v_end_callback = values[2];
    __pyx_v_context = values[3];
    if (values[4]) {
      __pyx_v_elements_only = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_elements_only == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1883, __pyx_L3_error)
    } else {
      __pyx_v_elements_only = ((int)((int)0));
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("traverse_dom", 0, 2, 5, __pyx_nargs); __PYX_ERR(0, 1883, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("resiliparse_dom.parse.html.traverse_dom", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_base_node), __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, 1, "base_node", 0))) __PYX_ERR(0, 1883, __pyx_L1_error)
  __pyx_r = __pyx_pf_15resiliparse_dom_5parse_4html_traverse_dom(__pyx_self, __pyx_v_base_node, __pyx_v_start_callback, __pyx_v_end_callback, __pyx_v_context, __pyx_v_elements_only);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15resiliparse_dom_5parse_4html_traverse_dom(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *__pyx_v_base_node, PyObject *__pyx_v_start_callback, PyObject *__pyx_v_end_callback, PyObject *__pyx_v_context, int __pyx_v_elements_only) {
  lxb_dom_node_t *__pyx_v_node;
  size_t __pyx_v_depth;
  int __pyx_v_is_end_tag;
  int *__pyx_v_is_end_tag_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  lxb_dom_node_t *__pyx_t_1;
  int *__pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_element_node __pyx_t_10;
  struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("traverse_dom", 0);
  __Pyx_INCREF(__pyx_v_context);

  /* "resiliparse_dom/parse/html.pyx":1911
 *     """
 * 
 *     cdef lxb_dom_node_t* node = base_node.node             # <<<<<<<<<<<<<<
 *     cdef size_t depth = 0
 *     cdef bint is_end_tag = False
 */
  __pyx_t_1 = __pyx_v_base_node->node;
  __pyx_v_node = __pyx_t_1;

  /* "resiliparse_dom/parse/html.pyx":1912
 * 
 *     cdef lxb_dom_node_t* node = base_node.node
 *     cdef size_t depth = 0             # <<<<<<<<<<<<<<
 *     cdef bint is_end_tag = False
 *     cdef bint* is_end_tag_ptr = &is_end_tag if end_callback is not None else NULL
 */
  __pyx_v_depth = 0;

  /* "resiliparse_dom/parse/html.pyx":1913
 *     cdef lxb_dom_node_t* node = base_node.node
 *     cdef size_t depth = 0
 *     cdef bint is_end_tag = False             # <<<<<<<<<<<<<<
 *     cdef bint* is_end_tag_ptr = &is_end_tag if end_callback is not None else NULL
 * 
 */
  __pyx_v_is_end_tag = 0;

  /* "resiliparse_dom/parse/html.pyx":1914
 *     cdef size_t depth = 0
 *     cdef bint is_end_tag = False
 *     cdef bint* is_end_tag_ptr = &is_end_tag if end_callback is not None else NULL             # <<<<<<<<<<<<<<
 * 
 *     if elements_only and base_node.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 */
  __pyx_t_3 = (__pyx_v_end_callback != Py_None);
  if (__pyx_t_3) {
    __pyx_t_2 = (&__pyx_v_is_end_tag);
  } else {
    __pyx_t_2 = NULL;
  }
  __pyx_v_is_end_tag_ptr = __pyx_t_2;

  /* "resiliparse_dom/parse/html.pyx":1916
 *     cdef bint* is_end_tag_ptr = &is_end_tag if end_callback is not None else NULL
 * 
 *     if elements_only and base_node.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *         return
 * 
 */
  if (__pyx_v_elements_only) {
  } else {
    __pyx_t_3 = __pyx_v_elements_only;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__pyx_v_base_node->node->type != LXB_DOM_NODE_TYPE_ELEMENT);
  __pyx_t_3 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "resiliparse_dom/parse/html.pyx":1917
 * 
 *     if elements_only and base_node.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *         return             # <<<<<<<<<<<<<<
 * 
 *     context = context or DOMContext()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1916
 *     cdef bint* is_end_tag_ptr = &is_end_tag if end_callback is not None else NULL
 * 
 *     if elements_only and base_node.node.type != LXB_DOM_NODE_TYPE_ELEMENT:             # <<<<<<<<<<<<<<
 *         return
 * 
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1919
 *         return
 * 
 *     context = context or DOMContext()             # <<<<<<<<<<<<<<
 * 
 *     while node:
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_context); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 1919, __pyx_L1_error)
  if (!__pyx_t_3) {
  } else {
    __Pyx_INCREF(__pyx_v_context);
    __pyx_t_5 = __pyx_v_context;
    goto __pyx_L6_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_DOMContext); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  __pyx_t_9 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_9 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, NULL};
    __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1919, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_INCREF(__pyx_t_6);
  __pyx_t_5 = __pyx_t_6;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_L6_bool_binop_done:;
  __Pyx_DECREF_SET(__pyx_v_context, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "resiliparse_dom/parse/html.pyx":1921
 *     context = context or DOMContext()
 * 
 *     while node:             # <<<<<<<<<<<<<<
 *         context.node = _create_dom_node(base_node.tree, node)
 *         context.depth = depth
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_node != 0);
    if (!__pyx_t_3) break;

    /* "resiliparse_dom/parse/html.pyx":1922
 * 
 *     while node:
 *         context.node = _create_dom_node(base_node.tree, node)             # <<<<<<<<<<<<<<
 *         context.depth = depth
 * 
 */
    __pyx_t_5 = ((PyObject *)__pyx_v_base_node->tree);
    __Pyx_INCREF(__pyx_t_5);
    __pyx_t_6 = ((PyObject *)__pyx_f_15resiliparse_dom_5parse_4html__create_dom_node(((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)__pyx_t_5), __pyx_v_node)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_context, __pyx_n_s_node, __pyx_t_6) < 0) __PYX_ERR(0, 1922, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "resiliparse_dom/parse/html.pyx":1923
 *     while node:
 *         context.node = _create_dom_node(base_node.tree, node)
 *         context.depth = depth             # <<<<<<<<<<<<<<
 * 
 *         if not is_end_tag:
 */
    __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_v_depth); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_context, __pyx_n_s_depth, __pyx_t_6) < 0) __PYX_ERR(0, 1923, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "resiliparse_dom/parse/html.pyx":1925
 *         context.depth = depth
 * 
 *         if not is_end_tag:             # <<<<<<<<<<<<<<
 *             start_callback(context)
 *         else:
 */
    __pyx_t_3 = (!__pyx_v_is_end_tag);
    if (__pyx_t_3) {

      /* "resiliparse_dom/parse/html.pyx":1926
 * 
 *         if not is_end_tag:
 *             start_callback(context)             # <<<<<<<<<<<<<<
 *         else:
 *             end_callback(context)
 */
      __Pyx_INCREF(__pyx_v_start_callback);
      __pyx_t_5 = __pyx_v_start_callback; __pyx_t_7 = NULL;
      __pyx_t_9 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_9 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_context};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1926, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "resiliparse_dom/parse/html.pyx":1925
 *         context.depth = depth
 * 
 *         if not is_end_tag:             # <<<<<<<<<<<<<<
 *             start_callback(context)
 *         else:
 */
      goto __pyx_L10;
    }

    /* "resiliparse_dom/parse/html.pyx":1928
 *             start_callback(context)
 *         else:
 *             end_callback(context)             # <<<<<<<<<<<<<<
 * 
 *         if elements_only:
 */
    /*else*/ {
      __Pyx_INCREF(__pyx_v_end_callback);
      __pyx_t_5 = __pyx_v_end_callback; __pyx_t_7 = NULL;
      __pyx_t_9 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_9 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_context};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1928, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_L10:;

    /* "resiliparse_dom/parse/html.pyx":1930
 *             end_callback(context)
 * 
 *         if elements_only:             # <<<<<<<<<<<<<<
 *             node = next_element_node(base_node.node, node, &depth, is_end_tag_ptr)
 *         else:
 */
    if (__pyx_v_elements_only) {

      /* "resiliparse_dom/parse/html.pyx":1931
 * 
 *         if elements_only:
 *             node = next_element_node(base_node.node, node, &depth, is_end_tag_ptr)             # <<<<<<<<<<<<<<
 *         else:
 *             node = next_node(base_node.node, node, &depth, is_end_tag_ptr)
 */
      __pyx_t_10.__pyx_n = 2;
      __pyx_t_10.depth = (&__pyx_v_depth);
      __pyx_t_10.end_tag = __pyx_v_is_end_tag_ptr;
      __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_next_element_node(__pyx_v_base_node->node, __pyx_v_node, &__pyx_t_10); 
      __pyx_v_node = __pyx_t_1;

      /* "resiliparse_dom/parse/html.pyx":1930
 *             end_callback(context)
 * 
 *         if elements_only:             # <<<<<<<<<<<<<<
 *             node = next_element_node(base_node.node, node, &depth, is_end_tag_ptr)
 *         else:
 */
      goto __pyx_L11;
    }

    /* "resiliparse_dom/parse/html.pyx":1933
 *             node = next_element_node(base_node.node, node, &depth, is_end_tag_ptr)
 *         else:
 *             node = next_node(base_node.node, node, &depth, is_end_tag_ptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else*/ {
      __pyx_t_11.__pyx_n = 2;
      __pyx_t_11.depth = (&__pyx_v_depth);
      __pyx_t_11.end_tag = __pyx_v_is_end_tag_ptr;
      __pyx_t_1 = __pyx_f_15resiliparse_dom_5parse_4html_next_node(__pyx_v_base_node->node, __pyx_v_node, &__pyx_t_11); 
      __pyx_v_node = __pyx_t_1;
    }
    __pyx_L11:;
  }

  /* "resiliparse_dom/parse/html.pyx":1883
 * 
 * 
 * def traverse_dom(DOMNode base_node, start_callback, end_callback=None, context=None, bint elements_only=False):             # <<<<<<<<<<<<<<
 *     """
 *     traverse_dom(base_node, start_callback, end_callback=None, context=None, elements_only=False)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("resiliparse_dom.parse.html.traverse_dom", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_context);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "resiliparse_dom/parse/html.pyx":1938
 * cdef unordered_set[lxb_tag_id_t] BLOCK_ELEMENT_SET
 * 
 * cdef inline void _init_block_element_set() noexcept nogil:             # <<<<<<<<<<<<<<
 *     if not BLOCK_ELEMENT_SET.empty():
 *         return
 */

static CYTHON_INLINE void __pyx_f_15resiliparse_dom_5parse_4html__init_block_element_set(void) {
  size_t __pyx_v_i;
  int __pyx_t_1;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save;
  #endif

  /* "resiliparse_dom/parse/html.pyx":1939
 * 
 * cdef inline void _init_block_element_set() noexcept nogil:
 *     if not BLOCK_ELEMENT_SET.empty():             # <<<<<<<<<<<<<<
 *         return
 *     cdef size_t i
 */
  __pyx_t_1 = (!__pyx_v_15resiliparse_dom_5parse_4html_BLOCK_ELEMENT_SET.empty());
  if (__pyx_t_1) {

    /* "resiliparse_dom/parse/html.pyx":1940
 * cdef inline void _init_block_element_set() noexcept nogil:
 *     if not BLOCK_ELEMENT_SET.empty():
 *         return             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     for i in range(NUM_BLOCK_ELEMENTS):
 */
    goto __pyx_L0;

    /* "resiliparse_dom/parse/html.pyx":1939
 * 
 * cdef inline void _init_block_element_set() noexcept nogil:
 *     if not BLOCK_ELEMENT_SET.empty():             # <<<<<<<<<<<<<<
 *         return
 *     cdef size_t i
 */
  }

  /* "resiliparse_dom/parse/html.pyx":1942
 *         return
 *     cdef size_t i
 *     for i in range(NUM_BLOCK_ELEMENTS):             # <<<<<<<<<<<<<<
 *         BLOCK_ELEMENT_SET.insert(BLOCK_ELEMENTS[i])
 * 
 */
  __pyx_t_2 = NUM_BLOCK_ELEMENTS;
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "resiliparse_dom/parse/html.pyx":1943
 *     cdef size_t i
 *     for i in range(NUM_BLOCK_ELEMENTS):
 *         BLOCK_ELEMENT_SET.insert(BLOCK_ELEMENTS[i])             # <<<<<<<<<<<<<<
 * 
 * _init_block_element_set()
 */
    try {
      __pyx_v_15resiliparse_dom_5parse_4html_BLOCK_ELEMENT_SET.insert((BLOCK_ELEMENTS[__pyx_v_i]));
    } catch(...) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
      #endif
      __Pyx_CppExn2PyErr();
      #ifdef WITH_THREAD
      __Pyx_PyGILState_Release(__pyx_gilstate_save);
      #endif
      __PYX_ERR(0, 1943, __pyx_L1_error)
    }
  }

  /* "resiliparse_dom/parse/html.pyx":1938
 * cdef unordered_set[lxb_tag_id_t] BLOCK_ELEMENT_SET
 * 
 * cdef inline void _init_block_element_set() noexcept nogil:             # <<<<<<<<<<<<<<
 *     if not BLOCK_ELEMENT_SET.empty():
 *         return
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  #ifdef WITH_THREAD
  __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_WriteUnraisable("resiliparse_dom.parse.html._init_block_element_set", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  __pyx_L0:;
}

/* "resiliparse_dom/parse/html.pyx":1948
 * 
 * 
 * cdef inline bint is_block_element(lxb_tag_id_t tag_id) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Check whether an element is a block-level element.
 */

static CYTHON_INLINE int __pyx_f_15resiliparse_dom_5parse_4html_is_block_element(lxb_tag_id_t __pyx_v_tag_id) {
  int __pyx_r;

  /* "resiliparse_dom/parse/html.pyx":1952
 *     Check whether an element is a block-level element.
 *     """
 *     return BLOCK_ELEMENT_SET.find(tag_id) != BLOCK_ELEMENT_SET.end()             # <<<<<<<<<<<<<<
 */
  __pyx_r = (__pyx_v_15resiliparse_dom_5parse_4html_BLOCK_ELEMENT_SET.find(__pyx_v_tag_id) != __pyx_v_15resiliparse_dom_5parse_4html_BLOCK_ELEMENT_SET.end());
  goto __pyx_L0;

  /* "resiliparse_dom/parse/html.pyx":1948
 * 
 * 
 * cdef inline bint is_block_element(lxb_tag_id_t tag_id) noexcept nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Check whether an element is a block-level element.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMElementClassList __pyx_vtable_15resiliparse_dom_5parse_4html_DOMElementClassList;

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMElementClassList(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)o);
  p->__pyx_vtab = __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMElementClassList;
  p->node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMElementClassList(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMElementClassList) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->node);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMElementClassList(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)o;
  if (p->node) {
    e = (*v)(((PyObject *)p->node), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMElementClassList(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)o;
  tmp = ((PyObject*)p->node);
  p->node = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_15resiliparse_dom_5parse_4html_DOMElementClassList(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_tp_richcompare_15resiliparse_dom_5parse_4html_DOMElementClassList(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_11__eq__(o1, o2);
    }
    case Py_NE: {
      PyObject *ret;
      ret = __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_11__eq__(o1, o2);
      if (likely(ret && ret != Py_NotImplemented)) {
        int b = __Pyx_PyObject_IsTrue(ret);
        Py_DECREF(ret);
        if (unlikely(b < 0)) return NULL;
        ret = (b) ? Py_False : Py_True;
        Py_INCREF(ret);
      }
      return ret;
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_specialmethod___pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__(PyObject *self, CYTHON_UNUSED PyObject *arg) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__(self);
}

static PyMethodDef __pyx_methods_15resiliparse_dom_5parse_4html_DOMElementClassList[] = {
  {"__repr__", (PyCFunction)__pyx_specialmethod___pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__, METH_NOARGS|METH_COEXIST, __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_21__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_23__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {Py_tp_repr, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__},
  {Py_sq_length, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_13__len__},
  {Py_sq_item, (void *)__pyx_sq_item_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {Py_sq_contains, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_7__contains__},
  {Py_mp_length, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_13__len__},
  {Py_mp_subscript, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_9__getitem__},
  {Py_tp_str, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_19__str__},
  {Py_tp_doc, (void *)PyDoc_STR("Class name list of an Element DOM node.")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {Py_tp_clear, (void *)__pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {Py_tp_richcompare, (void *)__pyx_tp_richcompare_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {Py_tp_iter, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_15__iter__},
  {Py_tp_methods, (void *)__pyx_methods_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMElementClassList},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList_spec = {
  "resiliparse_dom.parse.html.DOMElementClassList",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList_slots,
};
#else

static PySequenceMethods __pyx_tp_as_sequence_DOMElementClassList = {
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_13__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_15resiliparse_dom_5parse_4html_DOMElementClassList, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_7__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DOMElementClassList = {
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_13__len__, /*mp_length*/
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_9__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""DOMElementClassList", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMElementClassList, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_17__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_DOMElementClassList, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DOMElementClassList, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_19__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("Class name list of an Element DOM node."), /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMElementClassList, /*tp_traverse*/
  __pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMElementClassList, /*tp_clear*/
  __pyx_tp_richcompare_15resiliparse_dom_5parse_4html_DOMElementClassList, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_15resiliparse_dom_5parse_4html_19DOMElementClassList_15__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_15resiliparse_dom_5parse_4html_DOMElementClassList, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html_DOMElementClassList, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMNode __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode;

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMNode(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)o);
  p->__pyx_vtab = __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode;
  p->tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)Py_None); Py_INCREF(Py_None);
  p->class_list_singleton = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMNode(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMNode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->tree);
  Py_CLEAR(p->class_list_singleton);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMNode(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)o;
  if (p->tree) {
    e = (*v)(((PyObject *)p->tree), a); if (e) return e;
  }
  if (p->class_list_singleton) {
    e = (*v)(((PyObject *)p->class_list_singleton), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMNode(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)o;
  tmp = ((PyObject*)p->tree);
  p->tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->class_list_singleton);
  p->class_list_singleton = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_15resiliparse_dom_5parse_4html_DOMNode(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_15resiliparse_dom_5parse_4html_DOMNode(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_16__setitem__(o, i, v);
  }
  else {
    return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_20__delitem__(o, i);
  }
}

static PyObject *__pyx_tp_richcompare_15resiliparse_dom_5parse_4html_DOMNode(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_50__eq__(o1, o2);
    }
    case Py_NE: {
      PyObject *ret;
      ret = __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_50__eq__(o1, o2);
      if (likely(ret && ret != Py_NotImplemented)) {
        int b = __Pyx_PyObject_IsTrue(ret);
        Py_DECREF(ret);
        if (unlikely(b < 0)) return NULL;
        ret = (b) ? Py_False : Py_True;
        Py_INCREF(ret);
      }
      return ret;
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4type_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_tag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_3tag_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_first_child(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_11first_child_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_last_child(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10last_child_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_first_element_child(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_19first_element_child_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_last_element_child(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_18last_element_child_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_child_nodes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_11child_nodes_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_parent(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_6parent_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_next(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4next_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_prev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4prev_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_next_element(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12next_element_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_prev_element(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12prev_element_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_value(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5value_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_text(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4text_1__get__(o);
}

static int __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_text(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4text_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_html(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4html_1__get__(o);
}

static int __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_html(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_4html_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_2id_1__get__(o);
}

static int __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_2id_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_class_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_1__get__(o);
}

static int __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_class_name(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_name_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_class_list(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_10class_list_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_attrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5attrs_1__get__(o);
}

static PyObject *__pyx_specialmethod___pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__(PyObject *self, CYTHON_UNUSED PyObject *arg) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__(self);
}

static PyMethodDef __pyx_methods_15resiliparse_dom_5parse_4html_DOMNode[] = {
  {"__repr__", (PyCFunction)__pyx_specialmethod___pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_54__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_56__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_15resiliparse_dom_5parse_4html_DOMNode[] = {
  {(char *)"type", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_type, 0, (char *)PyDoc_STR("\n        DOM node type.\n\n        :type: NodeType\n        "), 0},
  {(char *)"tag", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_tag, 0, (char *)PyDoc_STR("\n        DOM element tag or node name.\n\n        :type: str or None\n        "), 0},
  {(char *)"first_child", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_first_child, 0, (char *)PyDoc_STR("\n        First child element of this DOM node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"last_child", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_last_child, 0, (char *)PyDoc_STR("\n        Last child element of this DOM node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"first_element_child", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_first_element_child, 0, (char *)PyDoc_STR("\n        First element child of this DOM node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"last_element_child", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_last_element_child, 0, (char *)PyDoc_STR("\n        Last element child element of this DOM node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"child_nodes", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_child_nodes, 0, (char *)PyDoc_STR("\n        List of child nodes.\n\n        :type: t.List[DOMNode]\n        "), 0},
  {(char *)"parent", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_parent, 0, (char *)PyDoc_STR("\n        Parent of this node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"next", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_next, 0, (char *)PyDoc_STR("\n        Next sibling node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"prev", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_prev, 0, (char *)PyDoc_STR("\n        Previous sibling node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"next_element", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_next_element, 0, (char *)PyDoc_STR("\n        Next sibling element node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"prev_element", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_prev_element, 0, (char *)PyDoc_STR("\n        Previous sibling element node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"value", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_value, 0, (char *)PyDoc_STR("\n        Node text value.\n\n        :type: str or None\n        "), 0},
  {(char *)"text", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_text, __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_text, (char *)PyDoc_STR("\n        Text contents of this DOM node and its children.\n\n        The DOM node's inner text can be modified by assigning to this property.\n\n        :type: str\n        "), 0},
  {(char *)"html", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_html, __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_html, (char *)PyDoc_STR("\n        HTML contents of this DOM node and its children.\n\n        The DOM node's inner HTML can be modified by assigning to this property.\n\n        :type: str\n        "), 0},
  {(char *)"id", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_id, __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_id, (char *)PyDoc_STR("\n        ID attribute of this Element node (empty string if unset).\n\n        :type: str\n        "), 0},
  {(char *)"class_name", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_class_name, __pyx_setprop_15resiliparse_dom_5parse_4html_7DOMNode_class_name, (char *)PyDoc_STR("\n        Class name attribute of this Element node (empty string if unset).\n\n        :type: str\n        "), 0},
  {(char *)"class_list", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_class_list, 0, (char *)PyDoc_STR("\n        List of class names set on this Element node.\n\n        :type: DOMElementClassList\n        "), 0},
  {(char *)"attrs", __pyx_getprop_15resiliparse_dom_5parse_4html_7DOMNode_attrs, 0, (char *)PyDoc_STR("\n        List of attribute names if node is an Element node.\n\n        :type: t.List[str] or None\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html_DOMNode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_repr, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__},
  {Py_sq_item, (void *)__pyx_sq_item_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_mp_subscript, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12__getitem__},
  {Py_mp_ass_subscript, (void *)__pyx_mp_ass_subscript_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_hash, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_52__hash__},
  {Py_tp_str, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_48__str__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    __init__(self)\n\n    DOM node.\n\n    A DOM node is only valid as long as the owning :class:`HTMLTree` is alive\n    and the DOM tree hasn't been modified. Do not access :class:`DOMNode` instances\n    after any sort of DOM tree manipulation.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_clear, (void *)__pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_richcompare, (void *)__pyx_tp_richcompare_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_iter, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5__iter__},
  {Py_tp_methods, (void *)__pyx_methods_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_getset, (void *)__pyx_getsets_15resiliparse_dom_5parse_4html_DOMNode},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMNode},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html_DOMNode_spec = {
  "resiliparse_dom.parse.html.DOMNode",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_15resiliparse_dom_5parse_4html_DOMNode_slots,
};
#else

static PySequenceMethods __pyx_tp_as_sequence_DOMNode = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_15resiliparse_dom_5parse_4html_DOMNode, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DOMNode = {
  0, /*mp_length*/
  __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_12__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_15resiliparse_dom_5parse_4html_DOMNode, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html_DOMNode = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""DOMNode", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMNode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_46__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_DOMNode, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DOMNode, /*tp_as_mapping*/
  __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_52__hash__, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_48__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    __init__(self)\n\n    DOM node.\n\n    A DOM node is only valid as long as the owning :class:`HTMLTree` is alive\n    and the DOM tree hasn't been modified. Do not access :class:`DOMNode` instances\n    after any sort of DOM tree manipulation.\n    "), /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMNode, /*tp_traverse*/
  __pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMNode, /*tp_clear*/
  __pyx_tp_richcompare_15resiliparse_dom_5parse_4html_DOMNode, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_15resiliparse_dom_5parse_4html_7DOMNode_5__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_15resiliparse_dom_5parse_4html_DOMNode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_15resiliparse_dom_5parse_4html_DOMNode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html_DOMNode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_DOMCollection __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection;

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMCollection(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)o);
  p->__pyx_vtab = __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection;
  p->tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMCollection(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMCollection) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->tree);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMCollection(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)o;
  if (p->tree) {
    e = (*v)(((PyObject *)p->tree), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMCollection(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *)o;
  tmp = ((PyObject*)p->tree);
  p->tree = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_15resiliparse_dom_5parse_4html_DOMCollection(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_specialmethod___pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__(PyObject *self, CYTHON_UNUSED PyObject *arg) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__(self);
}

static PyMethodDef __pyx_methods_15resiliparse_dom_5parse_4html_DOMCollection[] = {
  {"__repr__", (PyCFunction)__pyx_specialmethod___pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_30__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_32__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html_DOMCollection_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMCollection},
  {Py_tp_repr, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__},
  {Py_sq_length, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_22__len__},
  {Py_sq_item, (void *)__pyx_sq_item_15resiliparse_dom_5parse_4html_DOMCollection},
  {Py_mp_length, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_22__len__},
  {Py_mp_subscript, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_24__getitem__},
  {Py_tp_str, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_28__str__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    __init__(self)\n\n    Collection of DOM nodes that are the result set of an element matching operation.\n\n    A node collection is only valid for as long as the owning :class:`HTMLTree` is alive\n    and the DOM tree hasn't been modified. Do not access :class:`DOMCollection` instances\n    after any sort of DOM tree manipulation.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMCollection},
  {Py_tp_clear, (void *)__pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMCollection},
  {Py_tp_iter, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_19__iter__},
  {Py_tp_methods, (void *)__pyx_methods_15resiliparse_dom_5parse_4html_DOMCollection},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html_DOMCollection},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html_DOMCollection_spec = {
  "resiliparse_dom.parse.html.DOMCollection",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_15resiliparse_dom_5parse_4html_DOMCollection_slots,
};
#else

static PySequenceMethods __pyx_tp_as_sequence_DOMCollection = {
  __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_22__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_15resiliparse_dom_5parse_4html_DOMCollection, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DOMCollection = {
  __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_22__len__, /*mp_length*/
  __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_24__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html_DOMCollection = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""DOMCollection", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_DOMCollection, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_26__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_DOMCollection, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DOMCollection, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_28__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    __init__(self)\n\n    Collection of DOM nodes that are the result set of an element matching operation.\n\n    A node collection is only valid for as long as the owning :class:`HTMLTree` is alive\n    and the DOM tree hasn't been modified. Do not access :class:`DOMCollection` instances\n    after any sort of DOM tree manipulation.\n    "), /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html_DOMCollection, /*tp_traverse*/
  __pyx_tp_clear_15resiliparse_dom_5parse_4html_DOMCollection, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_15resiliparse_dom_5parse_4html_13DOMCollection_19__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_15resiliparse_dom_5parse_4html_DOMCollection, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html_DOMCollection, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_15resiliparse_dom_5parse_4html_HTMLTree __pyx_vtable_15resiliparse_dom_5parse_4html_HTMLTree;

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html_HTMLTree(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)o);
  p->__pyx_vtab = __pyx_vtabptr_15resiliparse_dom_5parse_4html_HTMLTree;
  p->encoding = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_3__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_HTMLTree(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_HTMLTree) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_5__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->encoding);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_document(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_8document_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_head(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_4head_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_body(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_4body_1__get__(o);
}

static PyObject *__pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_title(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_5title_1__get__(o);
}

static PyMethodDef __pyx_methods_15resiliparse_dom_5parse_4html_HTMLTree[] = {
  {"parse", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_7parse, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_6parse},
  {"parse_from_bytes", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_9parse_from_bytes, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_15resiliparse_dom_5parse_4html_8HTMLTree_8parse_from_bytes},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_17__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_19__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_15resiliparse_dom_5parse_4html_HTMLTree[] = {
  {(char *)"document", __pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_document, 0, (char *)PyDoc_STR("\n        Document root node.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"head", __pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_head, 0, (char *)PyDoc_STR("\n        HTML head element or ``None`` if document has no head.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"body", __pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_body, 0, (char *)PyDoc_STR("\n        HTML body element or ``None`` if document has no body.\n\n        :type: DOMNode or None\n        "), 0},
  {(char *)"title", __pyx_getprop_15resiliparse_dom_5parse_4html_8HTMLTree_title, 0, (char *)PyDoc_STR("\n        The HTML document title.\n\n        :type: str or None\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html_HTMLTree_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html_HTMLTree},
  {Py_tp_str, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_15__str__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    __init__(self)\n\n    HTML DOM tree parser.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_15resiliparse_dom_5parse_4html_HTMLTree},
  {Py_tp_getset, (void *)__pyx_getsets_15resiliparse_dom_5parse_4html_HTMLTree},
  {Py_tp_init, (void *)__pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html_HTMLTree},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html_HTMLTree_spec = {
  "resiliparse_dom.parse.html.HTMLTree",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_15resiliparse_dom_5parse_4html_HTMLTree_slots,
};
#else

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html_HTMLTree = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""HTMLTree", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html_HTMLTree, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_15__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    __init__(self)\n\n    HTML DOM tree parser.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_15resiliparse_dom_5parse_4html_HTMLTree, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_15resiliparse_dom_5parse_4html_HTMLTree, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_15resiliparse_dom_5parse_4html_8HTMLTree_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html_HTMLTree, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__[8];
static int __pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ = 0;
#endif

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__)))) {
    o = (PyObject*)__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__[--__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__];
    memset(o, 0, sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__)))) {
    __pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__[__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__++] = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter___slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter___spec = {
  "resiliparse_dom.parse.html.__pyx_scope_struct____iter__",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter___slots,
};
#else

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""__pyx_scope_struct____iter__", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__[8];
static int __pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ = 0;
#endif

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__)))) {
    o = (PyObject*)__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__[--__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__];
    memset(o, 0, sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__)))) {
    __pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__[__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__++] = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr___slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__},
  {Py_tp_clear, (void *)__pyx_tp_clear_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr___spec = {
  "resiliparse_dom.parse.html.__pyx_scope_struct_1___repr__",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr___slots,
};
#else

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""__pyx_scope_struct_1___repr__", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__, /*tp_traverse*/
  __pyx_tp_clear_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr[8];
static int __pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr = 0;
#endif

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr)))) {
    o = (PyObject*)__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr[--__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_genexpr_arg_0);
  Py_CLEAR(p->__pyx_v_a);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr)))) {
    __pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr[__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr++] = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_genexpr_arg_0) {
    e = (*v)(p->__pyx_genexpr_arg_0, a); if (e) return e;
  }
  if (p->__pyx_v_a) {
    e = (*v)(p->__pyx_v_a, a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr_spec = {
  "resiliparse_dom.parse.html.__pyx_scope_struct_2_genexpr",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""__pyx_scope_struct_2_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__[8];
static int __pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ = 0;
#endif

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__)))) {
    o = (PyObject*)__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__[--__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__];
    memset(o, 0, sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__)))) {
    __pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__[__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__++] = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter___slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter___spec = {
  "resiliparse_dom.parse.html.__pyx_scope_struct_3___iter__",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter___slots,
};
#else

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""__pyx_scope_struct_3___iter__", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr[8];
static int __pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr = 0;
#endif

static PyObject *__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr)))) {
    o = (PyObject*)__pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr[--__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr(PyObject *o) {
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_genexpr_arg_0);
  Py_CLEAR(p->__pyx_v_n);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr)))) {
    __pyx_freelist_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr[__pyx_freecount_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr++] = ((struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr *)o;
  if (p->__pyx_genexpr_arg_0) {
    e = (*v)(((PyObject *)p->__pyx_genexpr_arg_0), a); if (e) return e;
  }
  if (p->__pyx_v_n) {
    e = (*v)(p->__pyx_v_n, a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr_spec = {
  "resiliparse_dom.parse.html.__pyx_scope_struct_4_genexpr",
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""__pyx_scope_struct_4_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static int __pyx_tp_traverse___Pyx_EnumMeta(PyObject *o, visitproc v, void *a) {
  int e;
  if (!(&PyType_Type)->tp_traverse); else { e = (&PyType_Type)->tp_traverse(o,v,a); if (e) return e; }
  return 0;
}

static int __pyx_tp_clear___Pyx_EnumMeta(PyObject *o) {
  if (!(&PyType_Type)->tp_clear); else (&PyType_Type)->tp_clear(o);
  return 0;
}
static PyObject *__pyx_sq_item___Pyx_EnumMeta(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods___Pyx_EnumMeta[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __Pyx_EnumMeta_slots[] = {
  {Py_sq_item, (void *)__pyx_sq_item___Pyx_EnumMeta},
  {Py_mp_subscript, (void *)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_5__getitem__},
  {Py_tp_traverse, (void *)__pyx_tp_traverse___Pyx_EnumMeta},
  {Py_tp_clear, (void *)__pyx_tp_clear___Pyx_EnumMeta},
  {Py_tp_iter, (void *)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_3__iter__},
  {Py_tp_methods, (void *)__pyx_methods___Pyx_EnumMeta},
  {Py_tp_init, (void *)__pyx_pw_8EnumBase_14__Pyx_EnumMeta_1__init__},
  {0, 0},
};
static PyType_Spec __Pyx_EnumMeta_spec = {
  "resiliparse_dom.parse.html.__Pyx_EnumMeta",
  sizeof(struct __pyx_obj___Pyx_EnumMeta),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __Pyx_EnumMeta_slots,
};
#else

static PySequenceMethods __pyx_tp_as_sequence___Pyx_EnumMeta = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item___Pyx_EnumMeta, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___Pyx_EnumMeta = {
  0, /*mp_length*/
  __pyx_pw_8EnumBase_14__Pyx_EnumMeta_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __Pyx_EnumMeta = {
  PyVarObject_HEAD_INIT(0, 0)
  "resiliparse_dom.parse.html.""__Pyx_EnumMeta", /*tp_name*/
  sizeof(struct __pyx_obj___Pyx_EnumMeta), /*tp_basicsize*/
  0, /*tp_itemsize*/
  0, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence___Pyx_EnumMeta, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___Pyx_EnumMeta, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse___Pyx_EnumMeta, /*tp_traverse*/
  __pyx_tp_clear___Pyx_EnumMeta, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_8EnumBase_14__Pyx_EnumMeta_3__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods___Pyx_EnumMeta, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_8EnumBase_14__Pyx_EnumMeta_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  0, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_b_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 0, 0},
    {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
    {&__pyx_kp_u_, __pyx_k_, sizeof(__pyx_k_), 0, 1, 0, 0},
    {&__pyx_n_s_ATTRIBUTE, __pyx_k_ATTRIBUTE, sizeof(__pyx_k_ATTRIBUTE), 0, 0, 1, 1},
    {&__pyx_n_u_ATTRIBUTE, __pyx_k_ATTRIBUTE, sizeof(__pyx_k_ATTRIBUTE), 0, 1, 0, 1},
    {&__pyx_kp_u_Append_operation_on_uninitialize, __pyx_k_Append_operation_on_uninitialize, sizeof(__pyx_k_Append_operation_on_uninitialize), 0, 1, 0, 0},
    {&__pyx_n_s_CDATA_SECTION, __pyx_k_CDATA_SECTION, sizeof(__pyx_k_CDATA_SECTION), 0, 0, 1, 1},
    {&__pyx_n_u_CDATA_SECTION, __pyx_k_CDATA_SECTION, sizeof(__pyx_k_CDATA_SECTION), 0, 1, 0, 1},
    {&__pyx_n_s_COMMENT, __pyx_k_COMMENT, sizeof(__pyx_k_COMMENT), 0, 0, 1, 1},
    {&__pyx_n_u_COMMENT, __pyx_k_COMMENT, sizeof(__pyx_k_COMMENT), 0, 1, 0, 1},
    {&__pyx_kp_u_CSS_parser_error, __pyx_k_CSS_parser_error, sizeof(__pyx_k_CSS_parser_error), 0, 1, 0, 0},
    {&__pyx_kp_u_Cannot_create_instance_directly, __pyx_k_Cannot_create_instance_directly, sizeof(__pyx_k_Cannot_create_instance_directly), 0, 1, 0, 0},
    {&__pyx_kp_u_DOCTYPE_html, __pyx_k_DOCTYPE_html, sizeof(__pyx_k_DOCTYPE_html), 0, 1, 0, 0},
    {&__pyx_n_s_DOCUMENT, __pyx_k_DOCUMENT, sizeof(__pyx_k_DOCUMENT), 0, 0, 1, 1},
    {&__pyx_n_u_DOCUMENT, __pyx_k_DOCUMENT, sizeof(__pyx_k_DOCUMENT), 0, 1, 0, 1},
    {&__pyx_n_s_DOCUMENT_FRAGMENT, __pyx_k_DOCUMENT_FRAGMENT, sizeof(__pyx_k_DOCUMENT_FRAGMENT), 0, 0, 1, 1},
    {&__pyx_n_u_DOCUMENT_FRAGMENT, __pyx_k_DOCUMENT_FRAGMENT, sizeof(__pyx_k_DOCUMENT_FRAGMENT), 0, 1, 0, 1},
    {&__pyx_n_s_DOCUMENT_TYPE, __pyx_k_DOCUMENT_TYPE, sizeof(__pyx_k_DOCUMENT_TYPE), 0, 0, 1, 1},
    {&__pyx_n_u_DOCUMENT_TYPE, __pyx_k_DOCUMENT_TYPE, sizeof(__pyx_k_DOCUMENT_TYPE), 0, 1, 0, 1},
    {&__pyx_n_s_DOMCollection, __pyx_k_DOMCollection, sizeof(__pyx_k_DOMCollection), 0, 0, 1, 1},
    {&__pyx_n_u_DOMCollection, __pyx_k_DOMCollection, sizeof(__pyx_k_DOMCollection), 0, 1, 0, 1},
    {&__pyx_n_s_DOMCollection___iter, __pyx_k_DOMCollection___iter, sizeof(__pyx_k_DOMCollection___iter), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection___reduce_cython, __pyx_k_DOMCollection___reduce_cython, sizeof(__pyx_k_DOMCollection___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection___setstate_cython, __pyx_k_DOMCollection___setstate_cython, sizeof(__pyx_k_DOMCollection___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_get_element_by_id, __pyx_k_DOMCollection_get_element_by_id, sizeof(__pyx_k_DOMCollection_get_element_by_id), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_get_elements_by_at, __pyx_k_DOMCollection_get_elements_by_at, sizeof(__pyx_k_DOMCollection_get_elements_by_at), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_get_elements_by_cl, __pyx_k_DOMCollection_get_elements_by_cl, sizeof(__pyx_k_DOMCollection_get_elements_by_cl), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_get_elements_by_ta, __pyx_k_DOMCollection_get_elements_by_ta, sizeof(__pyx_k_DOMCollection_get_elements_by_ta), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_matches, __pyx_k_DOMCollection_matches, sizeof(__pyx_k_DOMCollection_matches), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_query_selector, __pyx_k_DOMCollection_query_selector, sizeof(__pyx_k_DOMCollection_query_selector), 0, 0, 1, 1},
    {&__pyx_n_s_DOMCollection_query_selector_all, __pyx_k_DOMCollection_query_selector_all, sizeof(__pyx_k_DOMCollection_query_selector_all), 0, 0, 1, 1},
    {&__pyx_n_s_DOMContext, __pyx_k_DOMContext, sizeof(__pyx_k_DOMContext), 0, 0, 1, 1},
    {&__pyx_n_u_DOMContext, __pyx_k_DOMContext, sizeof(__pyx_k_DOMContext), 0, 1, 0, 1},
    {&__pyx_n_s_DOMContext___init, __pyx_k_DOMContext___init, sizeof(__pyx_k_DOMContext___init), 0, 0, 1, 1},
    {&__pyx_n_s_DOMElementClassList, __pyx_k_DOMElementClassList, sizeof(__pyx_k_DOMElementClassList), 0, 0, 1, 1},
    {&__pyx_n_u_DOMElementClassList, __pyx_k_DOMElementClassList, sizeof(__pyx_k_DOMElementClassList), 0, 1, 0, 1},
    {&__pyx_n_s_DOMElementClassList___reduce_cyt, __pyx_k_DOMElementClassList___reduce_cyt, sizeof(__pyx_k_DOMElementClassList___reduce_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_DOMElementClassList___setstate_c, __pyx_k_DOMElementClassList___setstate_c, sizeof(__pyx_k_DOMElementClassList___setstate_c), 0, 0, 1, 1},
    {&__pyx_n_s_DOMElementClassList_add, __pyx_k_DOMElementClassList_add, sizeof(__pyx_k_DOMElementClassList_add), 0, 0, 1, 1},
    {&__pyx_n_s_DOMElementClassList_remove, __pyx_k_DOMElementClassList_remove, sizeof(__pyx_k_DOMElementClassList_remove), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode, __pyx_k_DOMNode, sizeof(__pyx_k_DOMNode), 0, 0, 1, 1},
    {&__pyx_n_u_DOMNode, __pyx_k_DOMNode, sizeof(__pyx_k_DOMNode), 0, 1, 0, 1},
    {&__pyx_n_s_DOMNode___iter, __pyx_k_DOMNode___iter, sizeof(__pyx_k_DOMNode___iter), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode___reduce_cython, __pyx_k_DOMNode___reduce_cython, sizeof(__pyx_k_DOMNode___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode___setstate_cython, __pyx_k_DOMNode___setstate_cython, sizeof(__pyx_k_DOMNode___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_append_child, __pyx_k_DOMNode_append_child, sizeof(__pyx_k_DOMNode_append_child), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_decompose, __pyx_k_DOMNode_decompose, sizeof(__pyx_k_DOMNode_decompose), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_delattr, __pyx_k_DOMNode_delattr, sizeof(__pyx_k_DOMNode_delattr), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_get_element_by_id, __pyx_k_DOMNode_get_element_by_id, sizeof(__pyx_k_DOMNode_get_element_by_id), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_get_elements_by_attr, __pyx_k_DOMNode_get_elements_by_attr, sizeof(__pyx_k_DOMNode_get_elements_by_attr), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_get_elements_by_class_na, __pyx_k_DOMNode_get_elements_by_class_na, sizeof(__pyx_k_DOMNode_get_elements_by_class_na), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_get_elements_by_tag_name, __pyx_k_DOMNode_get_elements_by_tag_name, sizeof(__pyx_k_DOMNode_get_elements_by_tag_name), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_getattr, __pyx_k_DOMNode_getattr, sizeof(__pyx_k_DOMNode_getattr), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_hasattr, __pyx_k_DOMNode_hasattr, sizeof(__pyx_k_DOMNode_hasattr), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_insert_before, __pyx_k_DOMNode_insert_before, sizeof(__pyx_k_DOMNode_insert_before), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_matches, __pyx_k_DOMNode_matches, sizeof(__pyx_k_DOMNode_matches), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_query_selector, __pyx_k_DOMNode_query_selector, sizeof(__pyx_k_DOMNode_query_selector), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_query_selector_all, __pyx_k_DOMNode_query_selector_all, sizeof(__pyx_k_DOMNode_query_selector_all), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_remove_child, __pyx_k_DOMNode_remove_child, sizeof(__pyx_k_DOMNode_remove_child), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_replace_child, __pyx_k_DOMNode_replace_child, sizeof(__pyx_k_DOMNode_replace_child), 0, 0, 1, 1},
    {&__pyx_n_s_DOMNode_setattr, __pyx_k_DOMNode_setattr, sizeof(__pyx_k_DOMNode_setattr), 0, 0, 1, 1},
    {&__pyx_kp_u_Decompose_operation_on_uninitial, __pyx_k_Decompose_operation_on_uninitial, sizeof(__pyx_k_Decompose_operation_on_uninitial), 0, 1, 0, 0},
    {&__pyx_n_s_ELEMENT, __pyx_k_ELEMENT, sizeof(__pyx_k_ELEMENT), 0, 0, 1, 1},
    {&__pyx_n_u_ELEMENT, __pyx_k_ELEMENT, sizeof(__pyx_k_ELEMENT), 0, 1, 0, 1},
    {&__pyx_n_s_ENTITY, __pyx_k_ENTITY, sizeof(__pyx_k_ENTITY), 0, 0, 1, 1},
    {&__pyx_n_u_ENTITY, __pyx_k_ENTITY, sizeof(__pyx_k_ENTITY), 0, 1, 0, 1},
    {&__pyx_n_s_ENTITY_REFERENCE, __pyx_k_ENTITY_REFERENCE, sizeof(__pyx_k_ENTITY_REFERENCE), 0, 0, 1, 1},
    {&__pyx_n_u_ENTITY_REFERENCE, __pyx_k_ENTITY_REFERENCE, sizeof(__pyx_k_ENTITY_REFERENCE), 0, 1, 0, 1},
    {&__pyx_kp_u_Element, __pyx_k_Element, sizeof(__pyx_k_Element), 0, 1, 0, 0},
    {&__pyx_n_s_EnumBase, __pyx_k_EnumBase, sizeof(__pyx_k_EnumBase), 0, 0, 1, 1},
    {&__pyx_n_s_EnumType, __pyx_k_EnumType, sizeof(__pyx_k_EnumType), 0, 0, 1, 1},
    {&__pyx_kp_u_Failed_to_allocate_HTML_document, __pyx_k_Failed_to_allocate_HTML_document, sizeof(__pyx_k_Failed_to_allocate_HTML_document), 0, 1, 0, 0},
    {&__pyx_kp_u_Failed_to_create_DOM_collection, __pyx_k_Failed_to_create_DOM_collection, sizeof(__pyx_k_Failed_to_create_DOM_collection), 0, 1, 0, 0},
    {&__pyx_kp_u_Failed_to_match_elements_by_CSS, __pyx_k_Failed_to_match_elements_by_CSS, sizeof(__pyx_k_Failed_to_match_elements_by_CSS), 0, 1, 0, 0},
    {&__pyx_kp_u_Failed_to_parse_HTML_document, __pyx_k_Failed_to_parse_HTML_document, sizeof(__pyx_k_Failed_to_parse_HTML_document), 0, 1, 0, 0},
    {&__pyx_n_s_HTMLTree, __pyx_k_HTMLTree, sizeof(__pyx_k_HTMLTree), 0, 0, 1, 1},
    {&__pyx_n_u_HTMLTree, __pyx_k_HTMLTree, sizeof(__pyx_k_HTMLTree), 0, 1, 0, 1},
    {&__pyx_n_s_HTMLTree___reduce_cython, __pyx_k_HTMLTree___reduce_cython, sizeof(__pyx_k_HTMLTree___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_HTMLTree___setstate_cython, __pyx_k_HTMLTree___setstate_cython, sizeof(__pyx_k_HTMLTree___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_HTMLTree_create_element, __pyx_k_HTMLTree_create_element, sizeof(__pyx_k_HTMLTree_create_element), 0, 0, 1, 1},
    {&__pyx_n_s_HTMLTree_create_text_node, __pyx_k_HTMLTree_create_text_node, sizeof(__pyx_k_HTMLTree_create_text_node), 0, 0, 1, 1},
    {&__pyx_n_s_HTMLTree_parse, __pyx_k_HTMLTree_parse, sizeof(__pyx_k_HTMLTree_parse), 0, 0, 1, 1},
    {&__pyx_n_s_HTMLTree_parse_from_bytes, __pyx_k_HTMLTree_parse_from_bytes, sizeof(__pyx_k_HTMLTree_parse_from_bytes), 0, 0, 1, 1},
    {&__pyx_kp_u_HTML_Document, __pyx_k_HTML_Document, sizeof(__pyx_k_HTML_Document), 0, 1, 0, 0},
    {&__pyx_kp_u_INVALID_ELEMENT, __pyx_k_INVALID_ELEMENT, sizeof(__pyx_k_INVALID_ELEMENT), 0, 1, 0, 0},
    {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_k_Incompatible_checksums_0x_x_vs_0, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0), 0, 0, 1, 0},
    {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
    {&__pyx_kp_u_Index_out_of_range, __pyx_k_Index_out_of_range, sizeof(__pyx_k_Index_out_of_range), 0, 1, 0, 0},
    {&__pyx_kp_u_Insert_operation_on_uninitialize, __pyx_k_Insert_operation_on_uninitialize, sizeof(__pyx_k_Insert_operation_on_uninitialize), 0, 1, 0, 0},
    {&__pyx_n_s_IntEnum, __pyx_k_IntEnum, sizeof(__pyx_k_IntEnum), 0, 0, 1, 1},
    {&__pyx_n_s_IntFlag, __pyx_k_IntFlag, sizeof(__pyx_k_IntFlag), 0, 0, 1, 1},
    {&__pyx_kp_u_Invalid_key_type, __pyx_k_Invalid_key_type, sizeof(__pyx_k_Invalid_key_type), 0, 1, 0, 0},
    {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
    {&__pyx_n_s_LAST_ENTRY, __pyx_k_LAST_ENTRY, sizeof(__pyx_k_LAST_ENTRY), 0, 0, 1, 1},
    {&__pyx_n_u_LAST_ENTRY, __pyx_k_LAST_ENTRY, sizeof(__pyx_k_LAST_ENTRY), 0, 1, 0, 1},
    {&__pyx_n_s_NOTATION, __pyx_k_NOTATION, sizeof(__pyx_k_NOTATION), 0, 0, 1, 1},
    {&__pyx_n_u_NOTATION, __pyx_k_NOTATION, sizeof(__pyx_k_NOTATION), 0, 1, 0, 1},
    {&__pyx_kp_u_No_such_attribute, __pyx_k_No_such_attribute, sizeof(__pyx_k_No_such_attribute), 0, 1, 0, 0},
    {&__pyx_n_s_NodeType, __pyx_k_NodeType, sizeof(__pyx_k_NodeType), 0, 0, 1, 1},
    {&__pyx_n_u_NodeType, __pyx_k_NodeType, sizeof(__pyx_k_NodeType), 0, 1, 0, 1},
    {&__pyx_kp_u_Node_is_not_a_child_of_the_curre, __pyx_k_Node_is_not_a_child_of_the_curre, sizeof(__pyx_k_Node_is_not_a_child_of_the_curre), 0, 1, 0, 0},
    {&__pyx_kp_u_Node_ist_not_an_Element_node, __pyx_k_Node_ist_not_an_Element_node, sizeof(__pyx_k_Node_ist_not_an_Element_node), 0, 1, 0, 0},
    {&__pyx_kp_u_Node_ist_not_an_element_node, __pyx_k_Node_ist_not_an_element_node, sizeof(__pyx_k_Node_ist_not_an_element_node), 0, 1, 0, 0},
    {&__pyx_kp_u_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 1, 0, 0},
    {&__pyx_n_s_OrderedDict, __pyx_k_OrderedDict, sizeof(__pyx_k_OrderedDict), 0, 0, 1, 1},
    {&__pyx_n_s_PROCESSING_INSTRUCTION, __pyx_k_PROCESSING_INSTRUCTION, sizeof(__pyx_k_PROCESSING_INSTRUCTION), 0, 0, 1, 1},
    {&__pyx_n_u_PROCESSING_INSTRUCTION, __pyx_k_PROCESSING_INSTRUCTION, sizeof(__pyx_k_PROCESSING_INSTRUCTION), 0, 1, 0, 1},
    {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_EnumBase, __pyx_k_Pyx_EnumBase, sizeof(__pyx_k_Pyx_EnumBase), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_EnumBase___new, __pyx_k_Pyx_EnumBase___new, sizeof(__pyx_k_Pyx_EnumBase___new), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_EnumBase___repr, __pyx_k_Pyx_EnumBase___repr, sizeof(__pyx_k_Pyx_EnumBase___repr), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_EnumBase___str, __pyx_k_Pyx_EnumBase___str, sizeof(__pyx_k_Pyx_EnumBase___str), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_EnumMeta___reduce_cython, __pyx_k_Pyx_EnumMeta___reduce_cython, sizeof(__pyx_k_Pyx_EnumMeta___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_EnumMeta___setstate_cython, __pyx_k_Pyx_EnumMeta___setstate_cython, sizeof(__pyx_k_Pyx_EnumMeta___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_FlagBase, __pyx_k_Pyx_FlagBase, sizeof(__pyx_k_Pyx_FlagBase), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_FlagBase___new, __pyx_k_Pyx_FlagBase___new, sizeof(__pyx_k_Pyx_FlagBase___new), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_FlagBase___repr, __pyx_k_Pyx_FlagBase___repr, sizeof(__pyx_k_Pyx_FlagBase___repr), 0, 0, 1, 1},
    {&__pyx_n_s_Pyx_FlagBase___str, __pyx_k_Pyx_FlagBase___str, sizeof(__pyx_k_Pyx_FlagBase___str), 0, 0, 1, 1},
    {&__pyx_kp_u_Reference_node_must_be_a_child_n, __pyx_k_Reference_node_must_be_a_child_n, sizeof(__pyx_k_Reference_node_must_be_a_child_n), 0, 1, 0, 0},
    {&__pyx_kp_u_Remove_operation_on_uninitialize, __pyx_k_Remove_operation_on_uninitialize, sizeof(__pyx_k_Remove_operation_on_uninitialize), 0, 1, 0, 0},
    {&__pyx_kp_u_Replace_operation_on_uninitializ, __pyx_k_Replace_operation_on_uninitializ, sizeof(__pyx_k_Replace_operation_on_uninitializ), 0, 1, 0, 0},
    {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
    {&__pyx_n_s_SyntaxError, __pyx_k_SyntaxError, sizeof(__pyx_k_SyntaxError), 0, 0, 1, 1},
    {&__pyx_n_s_TEXT, __pyx_k_TEXT, sizeof(__pyx_k_TEXT), 0, 0, 1, 1},
    {&__pyx_n_u_TEXT, __pyx_k_TEXT, sizeof(__pyx_k_TEXT), 0, 1, 0, 1},
    {&__pyx_kp_u_Trying_to_append_child_to_itself, __pyx_k_Trying_to_append_child_to_itself, sizeof(__pyx_k_Trying_to_append_child_to_itself), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_create_element_in_unin, __pyx_k_Trying_to_create_element_in_unin, sizeof(__pyx_k_Trying_to_create_element_in_unin), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_create_text_node_in_un, __pyx_k_Trying_to_create_text_node_in_un, sizeof(__pyx_k_Trying_to_create_text_node_in_un), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_get_item_of_uninitiali, __pyx_k_Trying_to_get_item_of_uninitiali, sizeof(__pyx_k_Trying_to_get_item_of_uninitiali), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_insert_node_as_its_own, __pyx_k_Trying_to_insert_node_as_its_own, sizeof(__pyx_k_Trying_to_insert_node_as_its_own), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_select_items_from_unin, __pyx_k_Trying_to_select_items_from_unin, sizeof(__pyx_k_Trying_to_select_items_from_unin), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_set_HTML_contents_of_u, __pyx_k_Trying_to_set_HTML_contents_of_u, sizeof(__pyx_k_Trying_to_set_HTML_contents_of_u), 0, 1, 0, 0},
    {&__pyx_kp_u_Trying_to_set_text_contents_of_u, __pyx_k_Trying_to_set_text_contents_of_u, sizeof(__pyx_k_Trying_to_set_text_contents_of_u), 0, 1, 0, 0},
    {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
    {&__pyx_kp_s_Unknown_enum_value_s, __pyx_k_Unknown_enum_value_s, sizeof(__pyx_k_Unknown_enum_value_s), 0, 0, 1, 0},
    {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
    {&__pyx_n_s__113, __pyx_k__113, sizeof(__pyx_k__113), 0, 0, 1, 1},
    {&__pyx_kp_u__20, __pyx_k__20, sizeof(__pyx_k__20), 0, 1, 0, 0},
    {&__pyx_kp_u__21, __pyx_k__21, sizeof(__pyx_k__21), 0, 1, 0, 0},
    {&__pyx_kp_u__22, __pyx_k__22, sizeof(__pyx_k__22), 0, 1, 0, 0},
    {&__pyx_kp_u__23, __pyx_k__23, sizeof(__pyx_k__23), 0, 1, 0, 0},
    {&__pyx_kp_u__27, __pyx_k__27, sizeof(__pyx_k__27), 0, 1, 0, 0},
    {&__pyx_kp_u__28, __pyx_k__28, sizeof(__pyx_k__28), 0, 1, 0, 0},
    {&__pyx_kp_u__29, __pyx_k__29, sizeof(__pyx_k__29), 0, 1, 0, 0},
    {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},
    {&__pyx_kp_b__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 0, 0},
    {&__pyx_kp_u__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0, 0},
    {&__pyx_n_s__50, __pyx_k__50, sizeof(__pyx_k__50), 0, 0, 1, 1},
    {&__pyx_n_s_add, __pyx_k_add, sizeof(__pyx_k_add), 0, 0, 1, 1},
    {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
    {&__pyx_n_s_append_child, __pyx_k_append_child, sizeof(__pyx_k_append_child), 0, 0, 1, 1},
    {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_attr_name, __pyx_k_attr_name, sizeof(__pyx_k_attr_name), 0, 0, 1, 1},
    {&__pyx_n_s_attr_value, __pyx_k_attr_value, sizeof(__pyx_k_attr_value), 0, 0, 1, 1},
    {&__pyx_n_s_attrs, __pyx_k_attrs, sizeof(__pyx_k_attrs), 0, 0, 1, 1},
    {&__pyx_n_s_base_node, __pyx_k_base_node, sizeof(__pyx_k_base_node), 0, 0, 1, 1},
    {&__pyx_n_b_by_attr, __pyx_k_by_attr, sizeof(__pyx_k_by_attr), 0, 0, 0, 1},
    {&__pyx_n_b_by_class, __pyx_k_by_class, sizeof(__pyx_k_by_class), 0, 0, 0, 1},
    {&__pyx_n_b_by_tag, __pyx_k_by_tag, sizeof(__pyx_k_by_tag), 0, 0, 0, 1},
    {&__pyx_n_s_case_insensitive, __pyx_k_case_insensitive, sizeof(__pyx_k_case_insensitive), 0, 0, 1, 1},
    {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
    {&__pyx_n_s_class_getitem, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
    {&__pyx_n_s_class_name, __pyx_k_class_name, sizeof(__pyx_k_class_name), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
    {&__pyx_n_s_cls, __pyx_k_cls, sizeof(__pyx_k_cls), 0, 0, 1, 1},
    {&__pyx_n_s_collections, __pyx_k_collections, sizeof(__pyx_k_collections), 0, 0, 1, 1},
    {&__pyx_n_s_context, __pyx_k_context, sizeof(__pyx_k_context), 0, 0, 1, 1},
    {&__pyx_n_s_create_element, __pyx_k_create_element, sizeof(__pyx_k_create_element), 0, 0, 1, 1},
    {&__pyx_n_s_create_text_node, __pyx_k_create_text_node, sizeof(__pyx_k_create_text_node), 0, 0, 1, 1},
    {&__pyx_n_s_dct, __pyx_k_dct, sizeof(__pyx_k_dct), 0, 0, 1, 1},
    {&__pyx_n_s_decompose, __pyx_k_decompose, sizeof(__pyx_k_decompose), 0, 0, 1, 1},
    {&__pyx_n_s_default_value, __pyx_k_default_value, sizeof(__pyx_k_default_value), 0, 0, 1, 1},
    {&__pyx_n_s_delattr, __pyx_k_delattr, sizeof(__pyx_k_delattr), 0, 0, 1, 1},
    {&__pyx_n_s_depth, __pyx_k_depth, sizeof(__pyx_k_depth), 0, 0, 1, 1},
    {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
    {&__pyx_n_s_dict_2, __pyx_k_dict_2, sizeof(__pyx_k_dict_2), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
    {&__pyx_n_s_document, __pyx_k_document, sizeof(__pyx_k_document), 0, 0, 1, 1},
    {&__pyx_n_s_element_id, __pyx_k_element_id, sizeof(__pyx_k_element_id), 0, 0, 1, 1},
    {&__pyx_n_s_elements_only, __pyx_k_elements_only, sizeof(__pyx_k_elements_only), 0, 0, 1, 1},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
    {&__pyx_n_s_encoding, __pyx_k_encoding, sizeof(__pyx_k_encoding), 0, 0, 1, 1},
    {&__pyx_n_s_end_callback, __pyx_k_end_callback, sizeof(__pyx_k_end_callback), 0, 0, 1, 1},
    {&__pyx_n_s_enum, __pyx_k_enum, sizeof(__pyx_k_enum), 0, 0, 1, 1},
    {&__pyx_n_s_errors, __pyx_k_errors, sizeof(__pyx_k_errors), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
    {&__pyx_n_s_get_element_by_id, __pyx_k_get_element_by_id, sizeof(__pyx_k_get_element_by_id), 0, 0, 1, 1},
    {&__pyx_n_s_get_elements_by_attr, __pyx_k_get_elements_by_attr, sizeof(__pyx_k_get_elements_by_attr), 0, 0, 1, 1},
    {&__pyx_n_s_get_elements_by_class_name, __pyx_k_get_elements_by_class_name, sizeof(__pyx_k_get_elements_by_class_name), 0, 0, 1, 1},
    {&__pyx_n_s_get_elements_by_tag_name, __pyx_k_get_elements_by_tag_name, sizeof(__pyx_k_get_elements_by_tag_name), 0, 0, 1, 1},
    {&__pyx_n_s_getattr, __pyx_k_getattr, sizeof(__pyx_k_getattr), 0, 0, 1, 1},
    {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
    {&__pyx_n_s_hasattr, __pyx_k_hasattr, sizeof(__pyx_k_hasattr), 0, 0, 1, 1},
    {&__pyx_n_s_head, __pyx_k_head, sizeof(__pyx_k_head), 0, 0, 1, 1},
    {&__pyx_n_s_html, __pyx_k_html, sizeof(__pyx_k_html), 0, 0, 1, 1},
    {&__pyx_n_u_ignore, __pyx_k_ignore, sizeof(__pyx_k_ignore), 0, 1, 0, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
    {&__pyx_kp_s_init___DOM_node_traversal_con, __pyx_k_init___DOM_node_traversal_con, sizeof(__pyx_k_init___DOM_node_traversal_con), 0, 0, 1, 0},
    {&__pyx_n_s_init_subclass, __pyx_k_init_subclass, sizeof(__pyx_k_init_subclass), 0, 0, 1, 1},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_s_insert_before, __pyx_k_insert_before, sizeof(__pyx_k_insert_before), 0, 0, 1, 1},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_n_s_is_end_tag, __pyx_k_is_end_tag, sizeof(__pyx_k_is_end_tag), 0, 0, 1, 1},
    {&__pyx_n_s_is_end_tag_ptr, __pyx_k_is_end_tag_ptr, sizeof(__pyx_k_is_end_tag_ptr), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
    {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
    {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_matches, __pyx_k_matches, sizeof(__pyx_k_matches), 0, 0, 1, 1},
    {&__pyx_n_s_member_names, __pyx_k_member_names, sizeof(__pyx_k_member_names), 0, 0, 1, 1},
    {&__pyx_n_s_members, __pyx_k_members, sizeof(__pyx_k_members), 0, 0, 1, 1},
    {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
    {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
    {&__pyx_n_s_module_2, __pyx_k_module_2, sizeof(__pyx_k_module_2), 0, 0, 1, 1},
    {&__pyx_n_s_mro_entries, __pyx_k_mro_entries, sizeof(__pyx_k_mro_entries), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
    {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
    {&__pyx_n_s_new_child, __pyx_k_new_child, sizeof(__pyx_k_new_child), 0, 0, 1, 1},
    {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
    {&__pyx_n_s_node, __pyx_k_node, sizeof(__pyx_k_node), 0, 0, 1, 1},
    {&__pyx_n_s_old_child, __pyx_k_old_child, sizeof(__pyx_k_old_child), 0, 0, 1, 1},
    {&__pyx_n_s_parents, __pyx_k_parents, sizeof(__pyx_k_parents), 0, 0, 1, 1},
    {&__pyx_n_s_parse, __pyx_k_parse, sizeof(__pyx_k_parse), 0, 0, 1, 1},
    {&__pyx_n_s_parse_from_bytes, __pyx_k_parse_from_bytes, sizeof(__pyx_k_parse_from_bytes), 0, 0, 1, 1},
    {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
    {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle___Pyx_EnumMeta, __pyx_k_pyx_unpickle___Pyx_EnumMeta, sizeof(__pyx_k_pyx_unpickle___Pyx_EnumMeta), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
    {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
    {&__pyx_n_s_query_selector, __pyx_k_query_selector, sizeof(__pyx_k_query_selector), 0, 0, 1, 1},
    {&__pyx_n_s_query_selector_all, __pyx_k_query_selector_all, sizeof(__pyx_k_query_selector_all), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
    {&__pyx_n_s_reference, __pyx_k_reference, sizeof(__pyx_k_reference), 0, 0, 1, 1},
    {&__pyx_n_s_remove, __pyx_k_remove, sizeof(__pyx_k_remove), 0, 0, 1, 1},
    {&__pyx_n_s_remove_child, __pyx_k_remove_child, sizeof(__pyx_k_remove_child), 0, 0, 1, 1},
    {&__pyx_n_s_replace_child, __pyx_k_replace_child, sizeof(__pyx_k_replace_child), 0, 0, 1, 1},
    {&__pyx_n_s_repr, __pyx_k_repr, sizeof(__pyx_k_repr), 0, 0, 1, 1},
    {&__pyx_n_s_repr___locals_genexpr, __pyx_k_repr___locals_genexpr, sizeof(__pyx_k_repr___locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_res, __pyx_k_res, sizeof(__pyx_k_res), 0, 0, 1, 1},
    {&__pyx_n_s_resiliparse_dom_parse_html, __pyx_k_resiliparse_dom_parse_html, sizeof(__pyx_k_resiliparse_dom_parse_html), 0, 0, 1, 1},
    {&__pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_k_resiliparse_dom_parse_html_pyx, sizeof(__pyx_k_resiliparse_dom_parse_html_pyx), 0, 0, 1, 0},
    {&__pyx_kp_s_s_s, __pyx_k_s_s, sizeof(__pyx_k_s_s), 0, 0, 1, 0},
    {&__pyx_kp_s_s_s_d, __pyx_k_s_s_d, sizeof(__pyx_k_s_s_d), 0, 0, 1, 0},
    {&__pyx_n_s_selector, __pyx_k_selector, sizeof(__pyx_k_selector), 0, 0, 1, 1},
    {&__pyx_n_b_selector_all, __pyx_k_selector_all, sizeof(__pyx_k_selector_all), 0, 0, 0, 1},
    {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
    {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
    {&__pyx_n_s_set_name, __pyx_k_set_name, sizeof(__pyx_k_set_name), 0, 0, 1, 1},
    {&__pyx_n_s_setattr, __pyx_k_setattr, sizeof(__pyx_k_setattr), 0, 0, 1, 1},
    {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
    {&__pyx_n_s_start_callback, __pyx_k_start_callback, sizeof(__pyx_k_start_callback), 0, 0, 1, 1},
    {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
    {&__pyx_n_s_step, __pyx_k_step, sizeof(__pyx_k_step), 0, 0, 1, 1},
    {&__pyx_n_s_stop, __pyx_k_stop, sizeof(__pyx_k_stop), 0, 0, 1, 1},
    {&__pyx_n_s_str, __pyx_k_str, sizeof(__pyx_k_str), 0, 0, 1, 1},
    {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
    {&__pyx_n_s_strip, __pyx_k_strip, sizeof(__pyx_k_strip), 0, 0, 1, 1},
    {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
    {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
    {&__pyx_n_s_tag, __pyx_k_tag, sizeof(__pyx_k_tag), 0, 0, 1, 1},
    {&__pyx_n_s_tag_name, __pyx_k_tag_name, sizeof(__pyx_k_tag_name), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
    {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
    {&__pyx_n_s_traverse_dom, __pyx_k_traverse_dom, sizeof(__pyx_k_traverse_dom), 0, 0, 1, 1},
    {&__pyx_n_u_traverse_dom, __pyx_k_traverse_dom, sizeof(__pyx_k_traverse_dom), 0, 1, 0, 1},
    {&__pyx_n_s_tree, __pyx_k_tree, sizeof(__pyx_k_tree), 0, 0, 1, 1},
    {&__pyx_n_s_typing, __pyx_k_typing, sizeof(__pyx_k_typing), 0, 0, 1, 1},
    {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
    {&__pyx_n_s_use_setstate, __pyx_k_use_setstate, sizeof(__pyx_k_use_setstate), 0, 0, 1, 1},
    {&__pyx_kp_u_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 1, 0, 0},
    {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
    {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
    {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 111, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 288, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 416, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(0, 955, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(0, 1627, __pyx_L1_error)
  __pyx_builtin_SyntaxError = __Pyx_GetBuiltinName(__pyx_n_s_SyntaxError); if (!__pyx_builtin_SyntaxError) __PYX_ERR(0, 1704, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_tuple__2 = PyTuple_Pack(3, __pyx_int_238750788, __pyx_int_228825662, __pyx_int_222419149); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "resiliparse_dom/parse/html.pyx":288
 *     if not coll:
 *         with gil:
 *             raise RuntimeError('Failed to create DOM collection')             # <<<<<<<<<<<<<<
 * 
 *     cdef lxb_status_t status = lxb_dom_elements_by_tag_name(<lxb_dom_element_t*>node,
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u_Failed_to_create_DOM_collection); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "resiliparse_dom/parse/html.pyx":764
 *     def text(self, str text):
 *         if not check_node(self):
 *             raise RuntimeError('Trying to set text contents of uninitialized DOM node')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes text_bytes = text.encode()
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_set_text_contents_of_u); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "resiliparse_dom/parse/html.pyx":790
 *     def html(self, str html):
 *         if not check_node(self):
 *             raise RuntimeError('Trying to set HTML contents of uninitialized DOM node')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes html_bytes = html.encode()
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_set_HTML_contents_of_u); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "resiliparse_dom/parse/html.pyx":886
 *         """
 *         if not check_node(self) or self.node.type != LXB_DOM_NODE_TYPE_ELEMENT:
 *             raise ValueError('Node ist not an Element node.')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes attr_name_bytes = attr_name.encode()
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_Node_ist_not_an_Element_node); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "resiliparse_dom/parse/html.pyx":909
 *             attr_out_len[0] = 0
 *             with gil:
 *                 raise ValueError('Node ist not an element node.')             # <<<<<<<<<<<<<<
 * 
 *         if not lxb_dom_element_has_attribute(<lxb_dom_element_t*>self.node,
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_u_Node_ist_not_an_element_node); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 909, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "resiliparse_dom/parse/html.pyx":1103
 *                                                                   <const char*>selector_bytes, len(selector_bytes))
 *         if not coll:
 *             raise RuntimeError('Failed to match elements by CSS selector')             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_collection(self.tree, coll)
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_u_Failed_to_match_elements_by_CSS); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "resiliparse_dom/parse/html.pyx":1227
 *         """
 *         if not check_node(self) or not check_node(node):
 *             raise RuntimeError('Append operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node == self.node:
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_u_Append_operation_on_uninitialize); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "resiliparse_dom/parse/html.pyx":1230
 * 
 *         if node.node == self.node:
 *             raise ValueError('Trying to append child to itself')             # <<<<<<<<<<<<<<
 * 
 *         if node.node.parent:
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_append_child_to_itself); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 1230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "resiliparse_dom/parse/html.pyx":1254
 *         """
 *         if not check_node(self) or not check_node(node) or not check_node(reference):
 *             raise RuntimeError('Insert operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node == self.node:
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_u_Insert_operation_on_uninitialize); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 1254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "resiliparse_dom/parse/html.pyx":1257
 * 
 *         if node.node == self.node:
 *             raise ValueError('Trying to insert node as its own child')             # <<<<<<<<<<<<<<
 * 
 *         if reference.node.parent != self.node:
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_insert_node_as_its_own); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 1257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "resiliparse_dom/parse/html.pyx":1260
 * 
 *         if reference.node.parent != self.node:
 *             raise ValueError('Reference node must be a child node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node.parent:
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_u_Reference_node_must_be_a_child_n); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 1260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "resiliparse_dom/parse/html.pyx":1282
 *         """
 *         if not check_node(self) or not check_node(new_child) or not check_node(old_child):
 *             raise RuntimeError('Replace operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if old_child.node.parent != self.node:
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_u_Replace_operation_on_uninitializ); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "resiliparse_dom/parse/html.pyx":1285
 * 
 *         if old_child.node.parent != self.node:
 *             raise ValueError('Node is not a child of the current node')             # <<<<<<<<<<<<<<
 * 
 *         if new_child.node == old_child.node:
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_u_Node_is_not_a_child_of_the_curre); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "resiliparse_dom/parse/html.pyx":1310
 *         """
 *         if not check_node(self) or not check_node(node):
 *             raise RuntimeError('Remove operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         if node.node.parent != self.node:
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_u_Remove_operation_on_uninitialize); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 1310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "resiliparse_dom/parse/html.pyx":1326
 *         """
 *         if not check_node(self):
 *             raise RuntimeError('Decompose operation on uninitialized node')             # <<<<<<<<<<<<<<
 * 
 *         lxb_dom_node_destroy_deep(self.node)
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_u_Decompose_operation_on_uninitial); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 1326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "resiliparse_dom/parse/html.pyx":1413
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to select items from uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         if not lxb_dom_collection_length(self.coll):
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_select_items_from_unin); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "resiliparse_dom/parse/html.pyx":1596
 *         """
 *         if self.tree is None or not self.coll:
 *             raise RuntimeError('Trying to get item of uninitialized collection')             # <<<<<<<<<<<<<<
 * 
 *         cdef size_t i = 0
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_get_item_of_uninitiali); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "resiliparse_dom/parse/html.pyx":1661
 * 
 *         if key >= coll_len:
 *             raise IndexError('Index out of range')             # <<<<<<<<<<<<<<
 * 
 *         return _create_dom_node(self.tree, lxb_dom_collection_node(self.coll, self._wrap_idx(key)))
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_u_Index_out_of_range); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 1661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "resiliparse_dom/parse/html.pyx":1692
 *         status = lxb_html_document_parse(tree.dom_document, html, html_len)
 *     if status != LXB_STATUS_OK:
 *         raise ValueError('Failed to parse HTML document')             # <<<<<<<<<<<<<<
 *     return tree
 * 
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_Failed_to_parse_HTML_document); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 1692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "resiliparse_dom/parse/html.pyx":1704
 * 
 *     def __init__(self, *args, **kwargs):
 *         raise SyntaxError('Cannot create instance directly. Use HTMLParser.parse() or HTMLParser.parse_from_bytes()')             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self):
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_u_Cannot_create_instance_directly); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "resiliparse_dom/parse/html.pyx":1709
 *         self.dom_document = lxb_html_document_create()
 *         if not self.dom_document:
 *             raise RuntimeError('Failed to allocate HTML document')             # <<<<<<<<<<<<<<
 *         self.css_parser = NULL
 *         self.css_memory = NULL
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_u_Failed_to_allocate_HTML_document); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "resiliparse_dom/parse/html.pyx":1831
 *         """
 *         if not self.dom_document:
 *             raise RuntimeError('Trying to create element in uninitialized document.')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes tag_name_bytes = tag_name.encode()
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_create_element_in_unin); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "resiliparse_dom/parse/html.pyx":1850
 *         """
 *         if not self.dom_document:
 *             raise RuntimeError('Trying to create text node in uninitialized document.')             # <<<<<<<<<<<<<<
 * 
 *         cdef bytes text_bytes = text.encode()
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_u_Trying_to_create_text_node_in_un); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__35 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);
  __pyx_codeobj__36 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__35, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__36)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle___Pyx_EnumMeta__set_state(self, __pyx_state)
 */
  __pyx_tuple__37 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "EnumBase":28
 * cdef object __Pyx_EnumBase
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */
  __pyx_tuple__39 = PyTuple_Pack(5, __pyx_n_s_cls, __pyx_n_s_value, __pyx_n_s_name, __pyx_n_s_v, __pyx_n_s_res); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_new, 28, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(1, 28, __pyx_L1_error)
  __pyx_tuple__41 = PyTuple_Pack(1, Py_None); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "EnumBase":39
 *         cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_repr, 39, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(1, 39, __pyx_L1_error)

  /* "EnumBase":41
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_str, 41, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) __PYX_ERR(1, 41, __pyx_L1_error)

  /* "EnumBase":49
 * cdef object __Pyx_FlagBase
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_new, 49, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(1, 49, __pyx_L1_error)

  /* "EnumBase":62
 *             cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_repr, 62, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(1, 62, __pyx_L1_error)

  /* "EnumBase":64
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_str, 64, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(1, 64, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle___Pyx_EnumMeta(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__48 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle___Pyx_EnumMeta, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":437
 *         return class_name[:class_name_len]
 * 
 *     cpdef void add(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         add(self, class_name)
 */
  __pyx_tuple__51 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_class_name); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_add, 437, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(0, 437, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":460
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>new_class_name, len(new_class_name))
 * 
 *     cpdef void remove(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         remove(self, class_name)
 */
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_remove, 460, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 460, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":874
 *         return attrs
 * 
 *     cpdef bint hasattr(self, str attr_name) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         hasattr(self, attr_name)
 */
  __pyx_tuple__56 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_attr_name); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_hasattr, 874, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(0, 874, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":921
 *         return True
 * 
 *     cpdef str getattr(self, str attr_name, str default_value=None):             # <<<<<<<<<<<<<<
 *         """
 *         getattr(self, attr_name, default_value=None)
 */
  __pyx_tuple__58 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_attr_name, __pyx_n_s_default_value); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_getattr, 921, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(0, 921, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":985
 *         return True
 * 
 *     cpdef setattr(self, str attr_name, str attr_value):             # <<<<<<<<<<<<<<
 *         """
 *         setattr(self, attr_name, attr_value)
 */
  __pyx_tuple__60 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_attr_name, __pyx_n_s_attr_value); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 985, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_setattr, 985, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 985, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1040
 *         return True
 * 
 *     cpdef delattr(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         delattr(self, attr_name)
 */
  __pyx_codeobj__62 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_delattr, 1040, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__62)) __PYX_ERR(0, 1040, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1069
 *             raise KeyError(f'No such attribute: {attr_name}')
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */
  __pyx_tuple__63 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_selector); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_query_selector, 1069, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 1069, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1088
 *         return _create_dom_node(self.tree, node)
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_query_selector_all, 1088, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(0, 1088, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1107
 *         return _create_dom_collection(self.tree, coll)
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_matches, 1107, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 1107, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1123
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */
  __pyx_tuple__67 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_attr_name, __pyx_n_s_attr_value, __pyx_n_s_case_insensitive); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__67, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_elements_by_attr, 1123, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __pyx_tuple__69 = PyTuple_Pack(1, Py_False); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "resiliparse_dom/parse/html.pyx":1150
 *                                                                 10, case_insensitive))
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */
  __pyx_tuple__70 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_element_id, __pyx_n_s_case_insensitive); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_element_by_id, 1150, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __pyx_tuple__72 = PyTuple_Pack(1, Py_False); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);

  /* "resiliparse_dom/parse/html.pyx":1174
 *         return _create_dom_node(self.tree, result_node)
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */
  __pyx_tuple__73 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_class_name, __pyx_n_s_case_insensitive); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_elements_by_class_name, 1174, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __pyx_tuple__75 = PyTuple_Pack(1, Py_False); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "resiliparse_dom/parse/html.pyx":1195
 *                                                                                  len(class_name_bytes), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */
  __pyx_tuple__76 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_tag_name); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_elements_by_tag_name, 1195, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(0, 1195, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1214
 *                                                                                len(tag_name_bytes)))
 * 
 *     cpdef DOMNode append_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         append_child(self, node)
 */
  __pyx_tuple__78 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_node); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 1214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_append_child, 1214, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(0, 1214, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1237
 *         return node
 * 
 *     cpdef DOMNode insert_before(self, DOMNode node, DOMNode reference):             # <<<<<<<<<<<<<<
 *         """
 *         insert_before(self, node, reference)
 */
  __pyx_tuple__80 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_node, __pyx_n_s_reference); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__80, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_insert_before, 1237, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) __PYX_ERR(0, 1237, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1267
 *         return node
 * 
 *     cpdef DOMNode replace_child(self, DOMNode new_child, DOMNode old_child):             # <<<<<<<<<<<<<<
 *         """
 *         replace_child(self, new_child, old_child)
 */
  __pyx_tuple__82 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_new_child, __pyx_n_s_old_child); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__82, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_replace_child, 1267, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(0, 1267, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1297
 *         return old_child
 * 
 *     cpdef DOMNode remove_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         remove_child(self, node)
 */
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_remove_child, 1297, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 1297, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1319
 * 
 *     # noinspection PyAttributeOutsideInit
 *     cpdef decompose(self):             # <<<<<<<<<<<<<<
 *         """
 *         decompose(self)
 */
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_decompose, 1319, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(0, 1319, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1444
 *         return _create_dom_collection(self.tree, joined_coll)
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */
  __pyx_codeobj__88 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_element_by_id, 1444, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__88)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __pyx_tuple__89 = PyTuple_Pack(1, Py_False); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "resiliparse_dom/parse/html.pyx":1472
 *         return None
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */
  __pyx_codeobj__90 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__67, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_elements_by_attr, 1472, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__90)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __pyx_tuple__91 = PyTuple_Pack(1, Py_False); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);

  /* "resiliparse_dom/parse/html.pyx":1491
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_elements_by_class_name, 1491, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(0, 1491, __pyx_L1_error)
  __pyx_tuple__93 = PyTuple_Pack(1, Py_False); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 1491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);

  /* "resiliparse_dom/parse/html.pyx":1507
 *         return self._forward_collection_match(b'by_class', (class_name.encode(), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_get_elements_by_tag_name, 1507, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 1507, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1521
 *         return self._forward_collection_match(b'by_tag', (tag_name.encode(),))
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_query_selector, 1521, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 1521, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1548
 *         return None
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_query_selector_all, 1548, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 1548, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1562
 *         return self._forward_collection_match(b'selector_all', (selector.encode(),))
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_matches, 1562, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(0, 1562, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1732
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse(cls, str document):
 *         """
 */
  __pyx_tuple__100 = PyTuple_Pack(2, __pyx_n_s_cls, __pyx_n_s_document); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_parse, 1732, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(0, 1732, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1746
 *         return create_html_tree(document.encode(), reencode=False)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse_from_bytes(cls, bytes document, str encoding='utf-8', str errors='ignore'):
 *         """
 */
  __pyx_tuple__102 = PyTuple_Pack(4, __pyx_n_s_cls, __pyx_n_s_document, __pyx_n_s_encoding, __pyx_n_s_errors); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_parse_from_bytes, 1746, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 1746, __pyx_L1_error)
  __pyx_tuple__104 = PyTuple_Pack(2, __pyx_kp_u_utf_8, __pyx_n_u_ignore); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);

  /* "resiliparse_dom/parse/html.pyx":1819
 *         return title[:title_len].decode()
 * 
 *     cpdef DOMNode create_element(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         create_element(self, tag_name)
 */
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_create_element, 1819, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(0, 1819, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1838
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)
 * 
 *     cpdef DOMNode create_text_node(self, str text):             # <<<<<<<<<<<<<<
 *         """
 *         create_text_node(self, text)
 */
  __pyx_tuple__106 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_text); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_create_text_node, 1838, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(0, 1838, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1878
 *     :ivar int depth: the current traversal depth
 *     """
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.node = None
 *         self.depth = 0
 */
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_init, 1878, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(0, 1878, __pyx_L1_error)

  /* "resiliparse_dom/parse/html.pyx":1883
 * 
 * 
 * def traverse_dom(DOMNode base_node, start_callback, end_callback=None, context=None, bint elements_only=False):             # <<<<<<<<<<<<<<
 *     """
 *     traverse_dom(base_node, start_callback, end_callback=None, context=None, elements_only=False)
 */
  __pyx_tuple__111 = PyTuple_Pack(9, __pyx_n_s_base_node, __pyx_n_s_start_callback, __pyx_n_s_end_callback, __pyx_n_s_context, __pyx_n_s_elements_only, __pyx_n_s_node, __pyx_n_s_depth, __pyx_n_s_is_end_tag, __pyx_n_s_is_end_tag_ptr); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__111, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_resiliparse_dom_parse_html_pyx, __pyx_n_s_traverse_dom, 1883, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_get.method_name = &__pyx_n_s_get;
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_222419149 = PyInt_FromLong(222419149L); if (unlikely(!__pyx_int_222419149)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_228825662 = PyInt_FromLong(228825662L); if (unlikely(!__pyx_int_228825662)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_238750788 = PyInt_FromLong(238750788L); if (unlikely(!__pyx_int_238750788)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_OrderedDict = Py_None; Py_INCREF(Py_None);
  __Pyx_EnumBase = Py_None; Py_INCREF(Py_None);
  __Pyx_FlagBase = Py_None; Py_INCREF(Py_None);
  __Pyx_globals = ((PyObject*)Py_None); Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("create_css_parser", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_create_css_parser, "void (lxb_css_memory_t **, lxb_css_parser_t **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("destroy_css_parser", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_destroy_css_parser, "void (lxb_css_memory_t *, lxb_css_parser_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("create_css_selectors", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_create_css_selectors, "void (lxb_css_parser_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("destroy_css_selectors", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_destroy_css_selectors, "void (lxb_css_parser_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("parse_css_selectors", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_parse_css_selectors, "lxb_css_selector_list_t *(lxb_css_parser_t *, lxb_char_t const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("next_node", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_next_node, "lxb_dom_node_t *(lxb_dom_node_t const *, lxb_dom_node_t *, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_next_node *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("get_node_text", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_get_node_text, "std::string (lxb_dom_node_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("get_element_by_id_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_get_element_by_id_impl, "lxb_dom_node_t *(lxb_dom_node_t *, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_element_by_id_impl *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("get_elements_by_attr_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl, "lxb_dom_collection_t *(lxb_dom_node_t *, char const *, size_t, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_attr_impl *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("get_elements_by_class_name_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl, "lxb_dom_collection_t *(lxb_dom_node_t *, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_get_elements_by_class_name_impl *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("get_elements_by_tag_name_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_get_elements_by_tag_name_impl, "lxb_dom_collection_t *(lxb_dom_node_t *, char const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("query_selector_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_query_selector_impl, "lxb_dom_node_t *(lxb_dom_node_t *, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, char const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("query_selector_all_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_query_selector_all_impl, "lxb_dom_collection_t *(lxb_dom_node_t *, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, char const *, size_t, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_query_selector_all_impl *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("matches_impl", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_matches_impl, "int (lxb_dom_node_t *, struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, char const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("create_html_tree", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_create_html_tree, "struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *(PyObject *, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_create_html_tree *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("is_block_element", (void (*)(void))__pyx_f_15resiliparse_dom_5parse_4html_is_block_element, "int (lxb_tag_id_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMElementClassList = &__pyx_vtable_15resiliparse_dom_5parse_4html_DOMElementClassList;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMElementClassList._create_list = (PyObject *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *))__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__create_list;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMElementClassList._class_name_bytes = (PyObject *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *))__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList__class_name_bytes;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMElementClassList.add = (void (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_add;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMElementClassList.remove = (void (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMElementClassList *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_19DOMElementClassList_remove;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList_spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList)) __PYX_ERR(0, 398, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList_spec, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList = &__pyx_type_15resiliparse_dom_5parse_4html_DOMElementClassList;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__contains__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_6__contains__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_8__getitem__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__eq__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_10__eq__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__len__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_12__len__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__iter__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_14__iter__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__repr__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_16__repr__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, "__str__"); if (unlikely(!wrapper)) __PYX_ERR(0, 398, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_19DOMElementClassList_18__str__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMElementClassList) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_DOMElementClassList, (PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  #endif
  __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode = &__pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.hasattr = (int (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_hasattr;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode._getattr_impl = (int (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, char const *, size_t, char const **, size_t *))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__getattr_impl;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.getattr = (PyObject *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_getattr *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_getattr;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode._setattr_impl = (int (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, char const *, size_t, char const *, size_t))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__setattr_impl;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.setattr = (PyObject *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_setattr;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode._delattr_impl = (int (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, char const *, size_t))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode__delattr_impl;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.delattr = (PyObject *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_delattr;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.get_element_by_id = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_element_by_id;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.get_elements_by_attr = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_attr;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.get_elements_by_class_name = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_class_name;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.get_elements_by_tag_name = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_get_elements_by_tag_name;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.query_selector = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.query_selector_all = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_query_selector_all;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.matches = (int (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_matches;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.append_child = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_append_child;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.insert_before = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_insert_before;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.replace_child = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_replace_child;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.remove_child = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_remove_child;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMNode.decompose = (PyObject *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_7DOMNode_decompose;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html_DOMNode_spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode)) __PYX_ERR(0, 520, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html_DOMNode_spec, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode = &__pyx_type_15resiliparse_dom_5parse_4html_DOMNode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, "__iter__"); if (unlikely(!wrapper)) __PYX_ERR(0, 520, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_4__iter__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(0, 520, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_11__getitem__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, "__setitem__"); if (unlikely(!wrapper)) __PYX_ERR(0, 520, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_15__setitem__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, "__delitem__"); if (unlikely(!wrapper)) __PYX_ERR(0, 520, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_7DOMNode_19__delitem__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMNode) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_DOMNode, (PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #endif
  __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection = &__pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection._wrap_idx = (size_t (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, Py_ssize_t))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__wrap_idx;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection._forward_collection_match = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, PyObject *))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection__forward_collection_match;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.get_element_by_id = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_element_by_id;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.get_elements_by_attr = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_attr;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.get_elements_by_class_name = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name *__pyx_optional_args))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_class_name;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.get_elements_by_tag_name = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_get_elements_by_tag_name;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.query_selector = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.query_selector_all = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_query_selector_all;
  __pyx_vtable_15resiliparse_dom_5parse_4html_DOMCollection.matches = (int (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMCollection *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_13DOMCollection_matches;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection_spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection)) __PYX_ERR(0, 1378, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection_spec, __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection = &__pyx_type_15resiliparse_dom_5parse_4html_DOMCollection;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, "__iter__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1378, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_18__iter__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, "__len__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1378, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_21__len__;
    }
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1378, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__.doc = __pyx_doc_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_15resiliparse_dom_5parse_4html_13DOMCollection_23__getitem__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_vtabptr_15resiliparse_dom_5parse_4html_DOMCollection) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_DOMCollection, (PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
  #endif
  __pyx_vtabptr_15resiliparse_dom_5parse_4html_HTMLTree = &__pyx_vtable_15resiliparse_dom_5parse_4html_HTMLTree;
  __pyx_vtable_15resiliparse_dom_5parse_4html_HTMLTree.create_element = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_element;
  __pyx_vtable_15resiliparse_dom_5parse_4html_HTMLTree.create_text_node = (struct __pyx_obj_15resiliparse_dom_5parse_4html_DOMNode *(*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *, PyObject *, int __pyx_skip_dispatch))__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_create_text_node;
  __pyx_vtable_15resiliparse_dom_5parse_4html_HTMLTree.init_css_parser = (void (*)(struct __pyx_obj_15resiliparse_dom_5parse_4html_HTMLTree *))__pyx_f_15resiliparse_dom_5parse_4html_8HTMLTree_init_css_parser;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree_spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree)) __PYX_ERR(0, 1696, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree_spec, __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree = &__pyx_type_15resiliparse_dom_5parse_4html_HTMLTree;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_vtabptr_15resiliparse_dom_5parse_4html_HTMLTree) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_HTMLTree, (PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter___spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__)) __PYX_ERR(0, 548, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter___spec, __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__) < 0) __PYX_ERR(0, 548, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__ = &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__) < 0) __PYX_ERR(0, 548, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct____iter__->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr___spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__)) __PYX_ERR(0, 1332, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr___spec, __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__) < 0) __PYX_ERR(0, 1332, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__ = &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__) < 0) __PYX_ERR(0, 1332, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_1___repr__->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr)) __PYX_ERR(0, 1337, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr_spec, __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 1337, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr = &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 1337, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_2_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter___spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__)) __PYX_ERR(0, 1587, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter___spec, __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__ = &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_3___iter__->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr)) __PYX_ERR(0, 1666, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr_spec, __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr) < 0) __PYX_ERR(0, 1666, __pyx_L1_error)
  #else
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr = &__pyx_type_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr) < 0) __PYX_ERR(0, 1666, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr->tp_dictoffset && __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_15resiliparse_dom_5parse_4html___pyx_scope_struct_4_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)(&PyType_Type)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype___Pyx_EnumMeta = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__Pyx_EnumMeta_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype___Pyx_EnumMeta)) __PYX_ERR(1, 16, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__Pyx_EnumMeta_spec, __pyx_ptype___Pyx_EnumMeta) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  #else
  __pyx_ptype___Pyx_EnumMeta = &__Pyx_EnumMeta;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype___Pyx_EnumMeta->tp_dealloc = (&PyType_Type)->tp_dealloc;
  __pyx_ptype___Pyx_EnumMeta->tp_base = (&PyType_Type);
  __pyx_ptype___Pyx_EnumMeta->tp_new = (&PyType_Type)->tp_new;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype___Pyx_EnumMeta) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype___Pyx_EnumMeta->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype___Pyx_EnumMeta->tp_dictoffset && __pyx_ptype___Pyx_EnumMeta->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype___Pyx_EnumMeta->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype___Pyx_EnumMeta) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType_3_0_10(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_10(PyTypeObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_10(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_10(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_0_10); if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("resiliparse_dom.parse.encoding"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector = __Pyx_ImportType_3_0_10(__pyx_t_1, "resiliparse_dom.parse.encoding", "EncodingDetector", sizeof(struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector), __PYX_GET_STRUCT_ALIGNMENT_3_0_10(struct __pyx_obj_15resiliparse_dom_5parse_8encoding_EncodingDetector),__Pyx_ImportType_CheckSize_Warn_3_0_10); if (!__pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector) __PYX_ERR(3, 19, __pyx_L1_error)
  __pyx_vtabptr_15resiliparse_dom_5parse_8encoding_EncodingDetector = (struct __pyx_vtabstruct_15resiliparse_dom_5parse_8encoding_EncodingDetector*)__Pyx_GetVtable(__pyx_ptype_15resiliparse_dom_5parse_8encoding_EncodingDetector); if (unlikely(!__pyx_vtabptr_15resiliparse_dom_5parse_8encoding_EncodingDetector)) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __pyx_t_1 = PyImport_ImportModule("resiliparse_dom.parse.encoding"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_ImportFunction_3_0_10(__pyx_t_1, "bytes_to_str", (void (**)(void))&__pyx_f_15resiliparse_dom_5parse_8encoding_bytes_to_str, "PyObject *(PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_bytes_to_str *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_10(__pyx_t_1, "map_encoding_to_html5", (void (**)(void))&__pyx_f_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5, "PyObject *(PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_15resiliparse_dom_5parse_8encoding_map_encoding_to_html5 *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_html(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_html},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "html",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC inithtml(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC inithtml(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_html(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_html(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_html(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'html' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("html", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "html" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = __Pyx_PyImport_AddModuleRef((const char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_html(void)", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_resiliparse_dom__parse__html) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "resiliparse_dom.parse.html")) {
      if (unlikely((PyDict_SetItemString(modules, "resiliparse_dom.parse.html", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  if (unlikely((__Pyx_modinit_function_export_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  if (unlikely((__Pyx_modinit_function_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "EnumBase":10
 * cdef object __Pyx_OrderedDict
 * 
 * if PY_VERSION_HEX >= 0x03060000:             # <<<<<<<<<<<<<<
 *     __Pyx_OrderedDict = dict
 * else:
 */
  __pyx_t_2 = (PY_VERSION_HEX >= 0x03060000);
  if (__pyx_t_2) {

    /* "EnumBase":11
 * 
 * if PY_VERSION_HEX >= 0x03060000:
 *     __Pyx_OrderedDict = dict             # <<<<<<<<<<<<<<
 * else:
 *     from collections import OrderedDict as __Pyx_OrderedDict
 */
    __Pyx_INCREF((PyObject *)(&PyDict_Type));
    __Pyx_XGOTREF(__Pyx_OrderedDict);
    __Pyx_DECREF_SET(__Pyx_OrderedDict, ((PyObject *)(&PyDict_Type)));
    __Pyx_GIVEREF((PyObject *)(&PyDict_Type));

    /* "EnumBase":10
 * cdef object __Pyx_OrderedDict
 * 
 * if PY_VERSION_HEX >= 0x03060000:             # <<<<<<<<<<<<<<
 *     __Pyx_OrderedDict = dict
 * else:
 */
    goto __pyx_L2;
  }

  /* "EnumBase":13
 *     __Pyx_OrderedDict = dict
 * else:
 *     from collections import OrderedDict as __Pyx_OrderedDict             # <<<<<<<<<<<<<<
 * 
 * @cython.internal
 */
  /*else*/ {
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_OrderedDict);
    __Pyx_GIVEREF(__pyx_n_s_OrderedDict);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_OrderedDict)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_collections, __pyx_t_3, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_OrderedDict); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_XGOTREF(__Pyx_OrderedDict);
    __Pyx_DECREF_SET(__Pyx_OrderedDict, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L2:;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_EnumMeta_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Pyx_EnumMeta___reduce_cython, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__36)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype___Pyx_EnumMeta, __pyx_n_s_reduce_cython, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  PyType_Modified(__pyx_ptype___Pyx_EnumMeta);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle___Pyx_EnumMeta, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle___Pyx_EnumMeta__set_state(self, __pyx_state)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_EnumMeta_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Pyx_EnumMeta___setstate_cython, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype___Pyx_EnumMeta, __pyx_n_s_setstate_cython, __pyx_t_4) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  PyType_Modified(__pyx_ptype___Pyx_EnumMeta);

  /* "EnumBase":27
 * 
 * cdef object __Pyx_EnumBase
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):             # <<<<<<<<<<<<<<
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 */
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF((PyObject *)(&PyInt_Type));
  __Pyx_GIVEREF((PyObject *)(&PyInt_Type));
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)(&PyInt_Type)))) __PYX_ERR(1, 27, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_Py3MetaclassPrepare(((PyObject *)__pyx_ptype___Pyx_EnumMeta), __pyx_t_3, __pyx_n_s_Pyx_EnumBase, __pyx_n_s_Pyx_EnumBase, __pyx_t_5, __pyx_n_s_EnumBase, (PyObject *) NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_3 != __pyx_t_4) {
    if (unlikely((PyDict_SetItemString(__pyx_t_6, "__orig_bases__", __pyx_t_4) < 0))) __PYX_ERR(1, 27, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "EnumBase":28
 * cdef object __Pyx_EnumBase
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_EnumBase_1__new__, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_Pyx_EnumBase___new, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__40)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_tuple__41);
  if (__Pyx_SetNewInClass(__pyx_t_6, __pyx_n_s_new, __pyx_t_4) < 0) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "EnumBase":39
 *         cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_EnumBase_3__repr__, 0, __pyx_n_s_Pyx_EnumBase___repr, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__43)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_6, __pyx_n_s_repr, __pyx_t_4) < 0) __PYX_ERR(1, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "EnumBase":41
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_EnumBase_5__str__, 0, __pyx_n_s_Pyx_EnumBase___str, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__44)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_6, __pyx_n_s_str, __pyx_t_4) < 0) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "EnumBase":27
 * 
 * cdef object __Pyx_EnumBase
 * class __Pyx_EnumBase(int, metaclass=__Pyx_EnumMeta):             # <<<<<<<<<<<<<<
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject *)__pyx_ptype___Pyx_EnumMeta), __pyx_n_s_Pyx_EnumBase, __pyx_t_3, __pyx_t_6, __pyx_t_5, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_XGOTREF(__Pyx_EnumBase);
  __Pyx_DECREF_SET(__Pyx_EnumBase, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "EnumBase":44
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 * if PY_VERSION_HEX >= 0x03040000:             # <<<<<<<<<<<<<<
 *     from enum import IntEnum as __Pyx_EnumBase
 * 
 */
  __pyx_t_2 = (PY_VERSION_HEX >= 0x03040000);
  if (__pyx_t_2) {

    /* "EnumBase":45
 * 
 * if PY_VERSION_HEX >= 0x03040000:
 *     from enum import IntEnum as __Pyx_EnumBase             # <<<<<<<<<<<<<<
 * 
 * cdef object __Pyx_FlagBase
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_IntEnum);
    __Pyx_GIVEREF(__pyx_n_s_IntEnum);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_IntEnum)) __PYX_ERR(1, 45, __pyx_L1_error);
    __pyx_t_5 = __Pyx_Import(__pyx_n_s_enum, __pyx_t_3, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_5, __pyx_n_s_IntEnum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_XGOTREF(__Pyx_EnumBase);
    __Pyx_DECREF_SET(__Pyx_EnumBase, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "EnumBase":44
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 * if PY_VERSION_HEX >= 0x03040000:             # <<<<<<<<<<<<<<
 *     from enum import IntEnum as __Pyx_EnumBase
 * 
 */
  }

  /* "EnumBase":48
 * 
 * cdef object __Pyx_FlagBase
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):             # <<<<<<<<<<<<<<
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 */
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF((PyObject *)(&PyInt_Type));
  __Pyx_GIVEREF((PyObject *)(&PyInt_Type));
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)(&PyInt_Type)))) __PYX_ERR(1, 48, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(((PyObject *)__pyx_ptype___Pyx_EnumMeta), __pyx_t_3, __pyx_n_s_Pyx_FlagBase, __pyx_n_s_Pyx_FlagBase, __pyx_t_6, __pyx_n_s_EnumBase, (PyObject *) NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_t_5) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_t_5) < 0))) __PYX_ERR(1, 48, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "EnumBase":49
 * cdef object __Pyx_FlagBase
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):
 *     def __new__(cls, value, name=None):             # <<<<<<<<<<<<<<
 *         for v in cls:
 *             if v == value:
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_FlagBase_1__new__, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_Pyx_FlagBase___new, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_tuple__41);
  if (__Pyx_SetNewInClass(__pyx_t_4, __pyx_n_s_new, __pyx_t_5) < 0) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "EnumBase":62
 *             cls.__members__[name] = res
 *         return res
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_FlagBase_3__repr__, 0, __pyx_n_s_Pyx_FlagBase___repr, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__46)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_repr, __pyx_t_5) < 0) __PYX_ERR(1, 62, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "EnumBase":64
 *     def __repr__(self):
 *         return "<%s.%s: %d>" % (self.__class__.__name__, self.name, self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_14__Pyx_FlagBase_5__str__, 0, __pyx_n_s_Pyx_FlagBase___str, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__47)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_str, __pyx_t_5) < 0) __PYX_ERR(1, 64, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "EnumBase":48
 * 
 * cdef object __Pyx_FlagBase
 * class __Pyx_FlagBase(int, metaclass=__Pyx_EnumMeta):             # <<<<<<<<<<<<<<
 *     def __new__(cls, value, name=None):
 *         for v in cls:
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(((PyObject *)__pyx_ptype___Pyx_EnumMeta), __pyx_n_s_Pyx_FlagBase, __pyx_t_3, __pyx_t_4, __pyx_t_6, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XGOTREF(__Pyx_FlagBase);
  __Pyx_DECREF_SET(__Pyx_FlagBase, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "EnumBase":67
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 * if PY_VERSION_HEX >= 0x03060000:             # <<<<<<<<<<<<<<
 *     from enum import IntFlag as __Pyx_FlagBase
 * 
 */
  __pyx_t_2 = (PY_VERSION_HEX >= 0x03060000);
  if (__pyx_t_2) {

    /* "EnumBase":68
 * 
 * if PY_VERSION_HEX >= 0x03060000:
 *     from enum import IntFlag as __Pyx_FlagBase             # <<<<<<<<<<<<<<
 * 
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_IntFlag);
    __Pyx_GIVEREF(__pyx_n_s_IntFlag);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_IntFlag)) __PYX_ERR(1, 68, __pyx_L1_error);
    __pyx_t_6 = __Pyx_Import(__pyx_n_s_enum, __pyx_t_3, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_6, __pyx_n_s_IntFlag); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_XGOTREF(__Pyx_FlagBase);
    __Pyx_DECREF_SET(__Pyx_FlagBase, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumBase":67
 *         return "%s.%s" % (self.__class__.__name__, self.name)
 * 
 * if PY_VERSION_HEX >= 0x03060000:             # <<<<<<<<<<<<<<
 *     from enum import IntFlag as __Pyx_FlagBase
 * 
 */
  }

  /* "(tree fragment)":1
 * def __pyx_unpickle___Pyx_EnumMeta(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_8EnumBase_1__pyx_unpickle___Pyx_EnumMeta, 0, __pyx_n_s_pyx_unpickle___Pyx_EnumMeta, NULL, __pyx_n_s_EnumBase, __pyx_d, ((PyObject *)__pyx_codeobj__49)); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle___Pyx_EnumMeta, __pyx_t_6) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "EnumType":76
 *     object __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NodeType value)
 * 
 * cdef dict __Pyx_globals = globals()             # <<<<<<<<<<<<<<
 * if PY_VERSION_HEX >= 0x03060000:
 * 
 */
  __pyx_t_6 = __Pyx_Globals(); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (!(likely(PyDict_CheckExact(__pyx_t_6))||((__pyx_t_6) == Py_None) || __Pyx_RaiseUnexpectedTypeError("dict", __pyx_t_6))) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_XGOTREF(__Pyx_globals);
  __Pyx_DECREF_SET(__Pyx_globals, ((PyObject*)__pyx_t_6));
  __Pyx_GIVEREF(__pyx_t_6);
  __pyx_t_6 = 0;

  /* "EnumType":77
 * 
 * cdef dict __Pyx_globals = globals()
 * if PY_VERSION_HEX >= 0x03060000:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = (PY_VERSION_HEX >= 0x03060000);
  if (__pyx_t_2) {

    /* "EnumType":81
 * 
 *     NodeType = __Pyx_FlagBase('NodeType', [
 *         ('ELEMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT)),             # <<<<<<<<<<<<<<
 *         ('ATTRIBUTE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE)),
 *         ('TEXT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ELEMENT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_ELEMENT);
    __Pyx_GIVEREF(__pyx_n_s_ELEMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_ELEMENT)) __PYX_ERR(1, 81, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6)) __PYX_ERR(1, 81, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":82
 *     NodeType = __Pyx_FlagBase('NodeType', [
 *         ('ELEMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT)),
 *         ('ATTRIBUTE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE)),             # <<<<<<<<<<<<<<
 *         ('TEXT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT)),
 *         ('CDATA_SECTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ATTRIBUTE); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_n_s_ATTRIBUTE);
    __Pyx_GIVEREF(__pyx_n_s_ATTRIBUTE);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_ATTRIBUTE)) __PYX_ERR(1, 82, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6)) __PYX_ERR(1, 82, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":83
 *         ('ELEMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT)),
 *         ('ATTRIBUTE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE)),
 *         ('TEXT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT)),             # <<<<<<<<<<<<<<
 *         ('CDATA_SECTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION)),
 *         ('ENTITY_REFERENCE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_TEXT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_n_s_TEXT);
    __Pyx_GIVEREF(__pyx_n_s_TEXT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_TEXT)) __PYX_ERR(1, 83, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6)) __PYX_ERR(1, 83, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":84
 *         ('ATTRIBUTE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE)),
 *         ('TEXT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT)),
 *         ('CDATA_SECTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION)),             # <<<<<<<<<<<<<<
 *         ('ENTITY_REFERENCE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE)),
 *         ('ENTITY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_CDATA_SECTION); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_n_s_CDATA_SECTION);
    __Pyx_GIVEREF(__pyx_n_s_CDATA_SECTION);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_n_s_CDATA_SECTION)) __PYX_ERR(1, 84, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_6)) __PYX_ERR(1, 84, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":85
 *         ('TEXT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT)),
 *         ('CDATA_SECTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION)),
 *         ('ENTITY_REFERENCE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE)),             # <<<<<<<<<<<<<<
 *         ('ENTITY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY)),
 *         ('PROCESSING_INSTRUCTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ENTITY_REFERENCE); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 85, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 85, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_n_s_ENTITY_REFERENCE);
    __Pyx_GIVEREF(__pyx_n_s_ENTITY_REFERENCE);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_n_s_ENTITY_REFERENCE)) __PYX_ERR(1, 85, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_6)) __PYX_ERR(1, 85, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":86
 *         ('CDATA_SECTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION)),
 *         ('ENTITY_REFERENCE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE)),
 *         ('ENTITY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY)),             # <<<<<<<<<<<<<<
 *         ('PROCESSING_INSTRUCTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION)),
 *         ('COMMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ENTITY); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_n_s_ENTITY);
    __Pyx_GIVEREF(__pyx_n_s_ENTITY);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_n_s_ENTITY)) __PYX_ERR(1, 86, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_6)) __PYX_ERR(1, 86, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":87
 *         ('ENTITY_REFERENCE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE)),
 *         ('ENTITY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY)),
 *         ('PROCESSING_INSTRUCTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION)),             # <<<<<<<<<<<<<<
 *         ('COMMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT)),
 *         ('DOCUMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_PROCESSING_INSTRUCTION); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 87, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 87, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(__pyx_n_s_PROCESSING_INSTRUCTION);
    __Pyx_GIVEREF(__pyx_n_s_PROCESSING_INSTRUCTION);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_n_s_PROCESSING_INSTRUCTION)) __PYX_ERR(1, 87, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_6)) __PYX_ERR(1, 87, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":88
 *         ('ENTITY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY)),
 *         ('PROCESSING_INSTRUCTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION)),
 *         ('COMMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT)),             # <<<<<<<<<<<<<<
 *         ('DOCUMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT)),
 *         ('DOCUMENT_TYPE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_COMMENT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_INCREF(__pyx_n_s_COMMENT);
    __Pyx_GIVEREF(__pyx_n_s_COMMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_n_s_COMMENT)) __PYX_ERR(1, 88, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_6)) __PYX_ERR(1, 88, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":89
 *         ('PROCESSING_INSTRUCTION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION)),
 *         ('COMMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT)),
 *         ('DOCUMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT)),             # <<<<<<<<<<<<<<
 *         ('DOCUMENT_TYPE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE)),
 *         ('DOCUMENT_FRAGMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 89, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = PyTuple_New(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(1, 89, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_INCREF(__pyx_n_s_DOCUMENT);
    __Pyx_GIVEREF(__pyx_n_s_DOCUMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_n_s_DOCUMENT)) __PYX_ERR(1, 89, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_6)) __PYX_ERR(1, 89, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":90
 *         ('COMMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT)),
 *         ('DOCUMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT)),
 *         ('DOCUMENT_TYPE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE)),             # <<<<<<<<<<<<<<
 *         ('DOCUMENT_FRAGMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT)),
 *         ('NOTATION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_TYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 90, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 90, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_INCREF(__pyx_n_s_DOCUMENT_TYPE);
    __Pyx_GIVEREF(__pyx_n_s_DOCUMENT_TYPE);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_n_s_DOCUMENT_TYPE)) __PYX_ERR(1, 90, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_t_6)) __PYX_ERR(1, 90, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":91
 *         ('DOCUMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT)),
 *         ('DOCUMENT_TYPE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE)),
 *         ('DOCUMENT_FRAGMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT)),             # <<<<<<<<<<<<<<
 *         ('NOTATION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION)),
 *         ('LAST_ENTRY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY)),
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_FRAGMENT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 91, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_n_s_DOCUMENT_FRAGMENT);
    __Pyx_GIVEREF(__pyx_n_s_DOCUMENT_FRAGMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_n_s_DOCUMENT_FRAGMENT)) __PYX_ERR(1, 91, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_6)) __PYX_ERR(1, 91, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":92
 *         ('DOCUMENT_TYPE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE)),
 *         ('DOCUMENT_FRAGMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT)),
 *         ('NOTATION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION)),             # <<<<<<<<<<<<<<
 *         ('LAST_ENTRY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY)),
 * 
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_NOTATION); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 92, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = PyTuple_New(2); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 92, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(__pyx_n_s_NOTATION);
    __Pyx_GIVEREF(__pyx_n_s_NOTATION);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_n_s_NOTATION)) __PYX_ERR(1, 92, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_6)) __PYX_ERR(1, 92, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":93
 *         ('DOCUMENT_FRAGMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT)),
 *         ('NOTATION', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION)),
 *         ('LAST_ENTRY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY)),             # <<<<<<<<<<<<<<
 * 
 *     ], module=__Pyx_globals.get("__module__", 'resiliparse_dom.parse.html'))
 */
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_LAST_ENTRY); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_INCREF(__pyx_n_s_LAST_ENTRY);
    __Pyx_GIVEREF(__pyx_n_s_LAST_ENTRY);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_n_s_LAST_ENTRY)) __PYX_ERR(1, 93, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_t_6)) __PYX_ERR(1, 93, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":80
 * 
 * 
 *     NodeType = __Pyx_FlagBase('NodeType', [             # <<<<<<<<<<<<<<
 *         ('ELEMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT)),
 *         ('ATTRIBUTE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE)),
 */
    __pyx_t_6 = PyList_New(13); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_3)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_5);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_7);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 3, __pyx_t_7)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_8);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 4, __pyx_t_8)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_9);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 5, __pyx_t_9)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_10);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 6, __pyx_t_10)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_11);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 7, __pyx_t_11)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_12);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 8, __pyx_t_12)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_13);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 9, __pyx_t_13)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_14);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 10, __pyx_t_14)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_15);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 11, __pyx_t_15)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_16);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 12, __pyx_t_16)) __PYX_ERR(1, 80, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_9 = 0;
    __pyx_t_10 = 0;
    __pyx_t_11 = 0;
    __pyx_t_12 = 0;
    __pyx_t_13 = 0;
    __pyx_t_14 = 0;
    __pyx_t_15 = 0;
    __pyx_t_16 = 0;
    __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_INCREF(__pyx_n_s_NodeType);
    __Pyx_GIVEREF(__pyx_n_s_NodeType);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_n_s_NodeType)) __PYX_ERR(1, 80, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_t_6)) __PYX_ERR(1, 80, __pyx_L1_error);
    __pyx_t_6 = 0;

    /* "EnumType":95
 *         ('LAST_ENTRY', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY)),
 * 
 *     ], module=__Pyx_globals.get("__module__", 'resiliparse_dom.parse.html'))             # <<<<<<<<<<<<<<
 * 
 *     if PY_VERSION_HEX >= 0x030B0000:
 */
    __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 95, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
      __PYX_ERR(1, 95, __pyx_L1_error)
    }
    __pyx_t_15 = __Pyx_PyDict_GetItemDefault(__Pyx_globals, __pyx_n_s_module, __pyx_n_s_resiliparse_dom_parse_html); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 95, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_module_2, __pyx_t_15) < 0) __PYX_ERR(1, 95, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":80
 * 
 * 
 *     NodeType = __Pyx_FlagBase('NodeType', [             # <<<<<<<<<<<<<<
 *         ('ELEMENT', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT)),
 *         ('ATTRIBUTE', __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE)),
 */
    __pyx_t_15 = __Pyx_PyObject_Call(__Pyx_FlagBase, __pyx_t_16, __pyx_t_6); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_NodeType, __pyx_t_15) < 0) __PYX_ERR(1, 80, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":97
 *     ], module=__Pyx_globals.get("__module__", 'resiliparse_dom.parse.html'))
 * 
 *     if PY_VERSION_HEX >= 0x030B0000:             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = (PY_VERSION_HEX >= 0x030B0000);
    if (__pyx_t_2) {

      /* "EnumType":102
 * 
 * 
 *         NodeType._member_names_ = list(NodeType.__members__)             # <<<<<<<<<<<<<<
 * 
 *     __Pyx_globals['ELEMENT'] = NodeType.ELEMENT
 */
      __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 102, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_members); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 102, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_15 = __Pyx_PySequence_ListKeepNew(__pyx_t_6); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 102, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 102, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_6, __pyx_n_s_member_names, __pyx_t_15) < 0) __PYX_ERR(1, 102, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "EnumType":97
 *     ], module=__Pyx_globals.get("__module__", 'resiliparse_dom.parse.html'))
 * 
 *     if PY_VERSION_HEX >= 0x030B0000:             # <<<<<<<<<<<<<<
 * 
 * 
 */
    }

    /* "EnumType":104
 *         NodeType._member_names_ = list(NodeType.__members__)
 * 
 *     __Pyx_globals['ELEMENT'] = NodeType.ELEMENT             # <<<<<<<<<<<<<<
 *     __Pyx_globals['ATTRIBUTE'] = NodeType.ATTRIBUTE
 *     __Pyx_globals['TEXT'] = NodeType.TEXT
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_ELEMENT); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 104, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ELEMENT, __pyx_t_15) < 0))) __PYX_ERR(1, 104, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":105
 * 
 *     __Pyx_globals['ELEMENT'] = NodeType.ELEMENT
 *     __Pyx_globals['ATTRIBUTE'] = NodeType.ATTRIBUTE             # <<<<<<<<<<<<<<
 *     __Pyx_globals['TEXT'] = NodeType.TEXT
 *     __Pyx_globals['CDATA_SECTION'] = NodeType.CDATA_SECTION
 */
    __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_ATTRIBUTE); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 105, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ATTRIBUTE, __pyx_t_6) < 0))) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":106
 *     __Pyx_globals['ELEMENT'] = NodeType.ELEMENT
 *     __Pyx_globals['ATTRIBUTE'] = NodeType.ATTRIBUTE
 *     __Pyx_globals['TEXT'] = NodeType.TEXT             # <<<<<<<<<<<<<<
 *     __Pyx_globals['CDATA_SECTION'] = NodeType.CDATA_SECTION
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType.ENTITY_REFERENCE
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_TEXT); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 106, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_TEXT, __pyx_t_15) < 0))) __PYX_ERR(1, 106, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":107
 *     __Pyx_globals['ATTRIBUTE'] = NodeType.ATTRIBUTE
 *     __Pyx_globals['TEXT'] = NodeType.TEXT
 *     __Pyx_globals['CDATA_SECTION'] = NodeType.CDATA_SECTION             # <<<<<<<<<<<<<<
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType.ENTITY_REFERENCE
 *     __Pyx_globals['ENTITY'] = NodeType.ENTITY
 */
    __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_CDATA_SECTION); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 107, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_CDATA_SECTION, __pyx_t_6) < 0))) __PYX_ERR(1, 107, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":108
 *     __Pyx_globals['TEXT'] = NodeType.TEXT
 *     __Pyx_globals['CDATA_SECTION'] = NodeType.CDATA_SECTION
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType.ENTITY_REFERENCE             # <<<<<<<<<<<<<<
 *     __Pyx_globals['ENTITY'] = NodeType.ENTITY
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType.PROCESSING_INSTRUCTION
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_ENTITY_REFERENCE); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 108, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ENTITY_REFERENCE, __pyx_t_15) < 0))) __PYX_ERR(1, 108, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":109
 *     __Pyx_globals['CDATA_SECTION'] = NodeType.CDATA_SECTION
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType.ENTITY_REFERENCE
 *     __Pyx_globals['ENTITY'] = NodeType.ENTITY             # <<<<<<<<<<<<<<
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType.PROCESSING_INSTRUCTION
 *     __Pyx_globals['COMMENT'] = NodeType.COMMENT
 */
    __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_ENTITY); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 109, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ENTITY, __pyx_t_6) < 0))) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":110
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType.ENTITY_REFERENCE
 *     __Pyx_globals['ENTITY'] = NodeType.ENTITY
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType.PROCESSING_INSTRUCTION             # <<<<<<<<<<<<<<
 *     __Pyx_globals['COMMENT'] = NodeType.COMMENT
 *     __Pyx_globals['DOCUMENT'] = NodeType.DOCUMENT
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_PROCESSING_INSTRUCTION); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 110, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_PROCESSING_INSTRUCTION, __pyx_t_15) < 0))) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":111
 *     __Pyx_globals['ENTITY'] = NodeType.ENTITY
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType.PROCESSING_INSTRUCTION
 *     __Pyx_globals['COMMENT'] = NodeType.COMMENT             # <<<<<<<<<<<<<<
 *     __Pyx_globals['DOCUMENT'] = NodeType.DOCUMENT
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType.DOCUMENT_TYPE
 */
    __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_COMMENT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 111, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_COMMENT, __pyx_t_6) < 0))) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":112
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType.PROCESSING_INSTRUCTION
 *     __Pyx_globals['COMMENT'] = NodeType.COMMENT
 *     __Pyx_globals['DOCUMENT'] = NodeType.DOCUMENT             # <<<<<<<<<<<<<<
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType.DOCUMENT_TYPE
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType.DOCUMENT_FRAGMENT
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_DOCUMENT); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 112, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_DOCUMENT, __pyx_t_15) < 0))) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":113
 *     __Pyx_globals['COMMENT'] = NodeType.COMMENT
 *     __Pyx_globals['DOCUMENT'] = NodeType.DOCUMENT
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType.DOCUMENT_TYPE             # <<<<<<<<<<<<<<
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType.DOCUMENT_FRAGMENT
 *     __Pyx_globals['NOTATION'] = NodeType.NOTATION
 */
    __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_DOCUMENT_TYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 113, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_DOCUMENT_TYPE, __pyx_t_6) < 0))) __PYX_ERR(1, 113, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":114
 *     __Pyx_globals['DOCUMENT'] = NodeType.DOCUMENT
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType.DOCUMENT_TYPE
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType.DOCUMENT_FRAGMENT             # <<<<<<<<<<<<<<
 *     __Pyx_globals['NOTATION'] = NodeType.NOTATION
 *     __Pyx_globals['LAST_ENTRY'] = NodeType.LAST_ENTRY
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_DOCUMENT_FRAGMENT); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 114, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_DOCUMENT_FRAGMENT, __pyx_t_15) < 0))) __PYX_ERR(1, 114, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":115
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType.DOCUMENT_TYPE
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType.DOCUMENT_FRAGMENT
 *     __Pyx_globals['NOTATION'] = NodeType.NOTATION             # <<<<<<<<<<<<<<
 *     __Pyx_globals['LAST_ENTRY'] = NodeType.LAST_ENTRY
 * else:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_NOTATION); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 115, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_NOTATION, __pyx_t_6) < 0))) __PYX_ERR(1, 115, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":116
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType.DOCUMENT_FRAGMENT
 *     __Pyx_globals['NOTATION'] = NodeType.NOTATION
 *     __Pyx_globals['LAST_ENTRY'] = NodeType.LAST_ENTRY             # <<<<<<<<<<<<<<
 * else:
 *     class NodeType(__Pyx_FlagBase):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_LAST_ENTRY); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 116, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_LAST_ENTRY, __pyx_t_15) < 0))) __PYX_ERR(1, 116, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

    /* "EnumType":77
 * 
 * cdef dict __Pyx_globals = globals()
 * if PY_VERSION_HEX >= 0x03060000:             # <<<<<<<<<<<<<<
 * 
 * 
 */
    goto __pyx_L5;
  }

  /* "EnumType":118
 *     __Pyx_globals['LAST_ENTRY'] = NodeType.LAST_ENTRY
 * else:
 *     class NodeType(__Pyx_FlagBase):             # <<<<<<<<<<<<<<
 *         pass
 *     __Pyx_globals['ELEMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT), 'ELEMENT')
 */
  /*else*/ {
    __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(__Pyx_FlagBase);
    __Pyx_GIVEREF(__Pyx_FlagBase);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_15, 0, __Pyx_FlagBase)) __PYX_ERR(1, 118, __pyx_L1_error);
    __pyx_t_6 = __Pyx_PEP560_update_bases(__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = __Pyx_CalculateMetaclass(NULL, __pyx_t_6); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = __Pyx_Py3MetaclassPrepare(__pyx_t_16, __pyx_t_6, __pyx_n_s_NodeType, __pyx_n_s_NodeType, (PyObject *) NULL, __pyx_n_s_EnumType, (PyObject *) NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__pyx_t_6 != __pyx_t_15) {
      if (unlikely((PyDict_SetItemString(__pyx_t_14, "__orig_bases__", __pyx_t_15) < 0))) __PYX_ERR(1, 118, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_15 = __Pyx_Py3ClassCreate(__pyx_t_16, __pyx_n_s_NodeType, __pyx_t_6, __pyx_t_14, NULL, 0, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_NodeType, __pyx_t_15) < 0) __PYX_ERR(1, 118, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":120
 *     class NodeType(__Pyx_FlagBase):
 *         pass
 *     __Pyx_globals['ELEMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT), 'ELEMENT')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['ATTRIBUTE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE), 'ATTRIBUTE')
 *     __Pyx_globals['TEXT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT), 'TEXT')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ELEMENT); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_16);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_16)) __PYX_ERR(1, 120, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_ELEMENT);
    __Pyx_GIVEREF(__pyx_n_s_ELEMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_n_s_ELEMENT)) __PYX_ERR(1, 120, __pyx_L1_error);
    __pyx_t_16 = 0;
    __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_14, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 120, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ELEMENT, __pyx_t_16) < 0))) __PYX_ERR(1, 120, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

    /* "EnumType":121
 *         pass
 *     __Pyx_globals['ELEMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT), 'ELEMENT')
 *     __Pyx_globals['ATTRIBUTE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE), 'ATTRIBUTE')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['TEXT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT), 'TEXT')
 *     __Pyx_globals['CDATA_SECTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION), 'CDATA_SECTION')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 121, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ATTRIBUTE); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 121, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 121, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_14);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_14)) __PYX_ERR(1, 121, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_ATTRIBUTE);
    __Pyx_GIVEREF(__pyx_n_s_ATTRIBUTE);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_ATTRIBUTE)) __PYX_ERR(1, 121, __pyx_L1_error);
    __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_6, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 121, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 121, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ATTRIBUTE, __pyx_t_14) < 0))) __PYX_ERR(1, 121, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "EnumType":122
 *     __Pyx_globals['ELEMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ELEMENT), 'ELEMENT')
 *     __Pyx_globals['ATTRIBUTE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE), 'ATTRIBUTE')
 *     __Pyx_globals['TEXT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT), 'TEXT')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['CDATA_SECTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION), 'CDATA_SECTION')
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE), 'ENTITY_REFERENCE')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_TEXT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_6)) __PYX_ERR(1, 122, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_TEXT);
    __Pyx_GIVEREF(__pyx_n_s_TEXT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_n_s_TEXT)) __PYX_ERR(1, 122, __pyx_L1_error);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_16, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 122, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_TEXT, __pyx_t_6) < 0))) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":123
 *     __Pyx_globals['ATTRIBUTE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ATTRIBUTE), 'ATTRIBUTE')
 *     __Pyx_globals['TEXT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT), 'TEXT')
 *     __Pyx_globals['CDATA_SECTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION), 'CDATA_SECTION')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE), 'ENTITY_REFERENCE')
 *     __Pyx_globals['ENTITY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY), 'ENTITY')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_CDATA_SECTION); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_16);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_16)) __PYX_ERR(1, 123, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_CDATA_SECTION);
    __Pyx_GIVEREF(__pyx_n_s_CDATA_SECTION);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_n_s_CDATA_SECTION)) __PYX_ERR(1, 123, __pyx_L1_error);
    __pyx_t_16 = 0;
    __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_14, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 123, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_CDATA_SECTION, __pyx_t_16) < 0))) __PYX_ERR(1, 123, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

    /* "EnumType":124
 *     __Pyx_globals['TEXT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(TEXT), 'TEXT')
 *     __Pyx_globals['CDATA_SECTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION), 'CDATA_SECTION')
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE), 'ENTITY_REFERENCE')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['ENTITY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY), 'ENTITY')
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION), 'PROCESSING_INSTRUCTION')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ENTITY_REFERENCE); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_14);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_14)) __PYX_ERR(1, 124, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_ENTITY_REFERENCE);
    __Pyx_GIVEREF(__pyx_n_s_ENTITY_REFERENCE);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_ENTITY_REFERENCE)) __PYX_ERR(1, 124, __pyx_L1_error);
    __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_6, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 124, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ENTITY_REFERENCE, __pyx_t_14) < 0))) __PYX_ERR(1, 124, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "EnumType":125
 *     __Pyx_globals['CDATA_SECTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(CDATA_SECTION), 'CDATA_SECTION')
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE), 'ENTITY_REFERENCE')
 *     __Pyx_globals['ENTITY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY), 'ENTITY')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION), 'PROCESSING_INSTRUCTION')
 *     __Pyx_globals['COMMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT), 'COMMENT')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_ENTITY); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_6)) __PYX_ERR(1, 125, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_ENTITY);
    __Pyx_GIVEREF(__pyx_n_s_ENTITY);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_n_s_ENTITY)) __PYX_ERR(1, 125, __pyx_L1_error);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_16, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 125, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_ENTITY, __pyx_t_6) < 0))) __PYX_ERR(1, 125, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":126
 *     __Pyx_globals['ENTITY_REFERENCE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY_REFERENCE), 'ENTITY_REFERENCE')
 *     __Pyx_globals['ENTITY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY), 'ENTITY')
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION), 'PROCESSING_INSTRUCTION')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['COMMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT), 'COMMENT')
 *     __Pyx_globals['DOCUMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT), 'DOCUMENT')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_PROCESSING_INSTRUCTION); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_16);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_16)) __PYX_ERR(1, 126, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_PROCESSING_INSTRUCTION);
    __Pyx_GIVEREF(__pyx_n_s_PROCESSING_INSTRUCTION);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_n_s_PROCESSING_INSTRUCTION)) __PYX_ERR(1, 126, __pyx_L1_error);
    __pyx_t_16 = 0;
    __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_14, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 126, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_PROCESSING_INSTRUCTION, __pyx_t_16) < 0))) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

    /* "EnumType":127
 *     __Pyx_globals['ENTITY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(ENTITY), 'ENTITY')
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION), 'PROCESSING_INSTRUCTION')
 *     __Pyx_globals['COMMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT), 'COMMENT')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['DOCUMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT), 'DOCUMENT')
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE), 'DOCUMENT_TYPE')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_COMMENT); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_14);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_14)) __PYX_ERR(1, 127, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_COMMENT);
    __Pyx_GIVEREF(__pyx_n_s_COMMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_COMMENT)) __PYX_ERR(1, 127, __pyx_L1_error);
    __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_6, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 127, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_COMMENT, __pyx_t_14) < 0))) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "EnumType":128
 *     __Pyx_globals['PROCESSING_INSTRUCTION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(PROCESSING_INSTRUCTION), 'PROCESSING_INSTRUCTION')
 *     __Pyx_globals['COMMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT), 'COMMENT')
 *     __Pyx_globals['DOCUMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT), 'DOCUMENT')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE), 'DOCUMENT_TYPE')
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT), 'DOCUMENT_FRAGMENT')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_6)) __PYX_ERR(1, 128, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_DOCUMENT);
    __Pyx_GIVEREF(__pyx_n_s_DOCUMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_n_s_DOCUMENT)) __PYX_ERR(1, 128, __pyx_L1_error);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_16, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 128, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_DOCUMENT, __pyx_t_6) < 0))) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":129
 *     __Pyx_globals['COMMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(COMMENT), 'COMMENT')
 *     __Pyx_globals['DOCUMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT), 'DOCUMENT')
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE), 'DOCUMENT_TYPE')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT), 'DOCUMENT_FRAGMENT')
 *     __Pyx_globals['NOTATION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION), 'NOTATION')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_TYPE); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_16);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_16)) __PYX_ERR(1, 129, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_DOCUMENT_TYPE);
    __Pyx_GIVEREF(__pyx_n_s_DOCUMENT_TYPE);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_n_s_DOCUMENT_TYPE)) __PYX_ERR(1, 129, __pyx_L1_error);
    __pyx_t_16 = 0;
    __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_14, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 129, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_DOCUMENT_TYPE, __pyx_t_16) < 0))) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

    /* "EnumType":130
 *     __Pyx_globals['DOCUMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT), 'DOCUMENT')
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE), 'DOCUMENT_TYPE')
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT), 'DOCUMENT_FRAGMENT')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['NOTATION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION), 'NOTATION')
 *     __Pyx_globals['LAST_ENTRY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY), 'LAST_ENTRY')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_DOCUMENT_FRAGMENT); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_14);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_14)) __PYX_ERR(1, 130, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_DOCUMENT_FRAGMENT);
    __Pyx_GIVEREF(__pyx_n_s_DOCUMENT_FRAGMENT);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_DOCUMENT_FRAGMENT)) __PYX_ERR(1, 130, __pyx_L1_error);
    __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_6, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 130, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_DOCUMENT_FRAGMENT, __pyx_t_14) < 0))) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "EnumType":131
 *     __Pyx_globals['DOCUMENT_TYPE'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_TYPE), 'DOCUMENT_TYPE')
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT), 'DOCUMENT_FRAGMENT')
 *     __Pyx_globals['NOTATION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION), 'NOTATION')             # <<<<<<<<<<<<<<
 *     __Pyx_globals['LAST_ENTRY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY), 'LAST_ENTRY')
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_NOTATION); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = PyTuple_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_GIVEREF(__pyx_t_6);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_NOTATION);
    __Pyx_GIVEREF(__pyx_n_s_NOTATION);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_n_s_NOTATION)) __PYX_ERR(1, 131, __pyx_L1_error);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_16, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 131, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_NOTATION, __pyx_t_6) < 0))) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "EnumType":132
 *     __Pyx_globals['DOCUMENT_FRAGMENT'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(DOCUMENT_FRAGMENT), 'DOCUMENT_FRAGMENT')
 *     __Pyx_globals['NOTATION'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(NOTATION), 'NOTATION')
 *     __Pyx_globals['LAST_ENTRY'] = NodeType(__Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(LAST_ENTRY), 'LAST_ENTRY')             # <<<<<<<<<<<<<<
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_NodeType); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_16 = __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(__pyx_e_15resiliparse_dom_5parse_4html_LAST_ENTRY); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_16);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_16)) __PYX_ERR(1, 132, __pyx_L1_error);
    __Pyx_INCREF(__pyx_n_s_LAST_ENTRY);
    __Pyx_GIVEREF(__pyx_n_s_LAST_ENTRY);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_n_s_LAST_ENTRY)) __PYX_ERR(1, 132, __pyx_L1_error);
    __pyx_t_16 = 0;
    __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_14, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(__Pyx_globals == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 132, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__Pyx_globals, __pyx_n_s_LAST_ENTRY, __pyx_t_16) < 0))) __PYX_ERR(1, 132, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  }
  __pyx_L5:;

  /* "resiliparse_dom/parse/html.pyx":17
 * # distutils: language = c++
 * 
 * import typing as t             # <<<<<<<<<<<<<<
 * 
 * cimport cython
 */
  __pyx_t_16 = __Pyx_ImportDottedModule(__pyx_n_s_typing, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_t, __pyx_t_16) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":27
 * from resiliparse_dom.parse.encoding cimport bytes_to_str, map_encoding_to_html5
 * 
 * __all__ = [             # <<<<<<<<<<<<<<
 *     'DOMCollection',
 *     'DOMContext',
 */
  __pyx_t_16 = PyList_New(20); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_INCREF(__pyx_n_u_DOMCollection);
  __Pyx_GIVEREF(__pyx_n_u_DOMCollection);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 0, __pyx_n_u_DOMCollection)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_DOMContext);
  __Pyx_GIVEREF(__pyx_n_u_DOMContext);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 1, __pyx_n_u_DOMContext)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_DOMElementClassList);
  __Pyx_GIVEREF(__pyx_n_u_DOMElementClassList);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 2, __pyx_n_u_DOMElementClassList)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_DOMNode);
  __Pyx_GIVEREF(__pyx_n_u_DOMNode);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 3, __pyx_n_u_DOMNode)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_HTMLTree);
  __Pyx_GIVEREF(__pyx_n_u_HTMLTree);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 4, __pyx_n_u_HTMLTree)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_traverse_dom);
  __Pyx_GIVEREF(__pyx_n_u_traverse_dom);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 5, __pyx_n_u_traverse_dom)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_NodeType);
  __Pyx_GIVEREF(__pyx_n_u_NodeType);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 6, __pyx_n_u_NodeType)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_ELEMENT);
  __Pyx_GIVEREF(__pyx_n_u_ELEMENT);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 7, __pyx_n_u_ELEMENT)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_ATTRIBUTE);
  __Pyx_GIVEREF(__pyx_n_u_ATTRIBUTE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 8, __pyx_n_u_ATTRIBUTE)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_TEXT);
  __Pyx_GIVEREF(__pyx_n_u_TEXT);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 9, __pyx_n_u_TEXT)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_CDATA_SECTION);
  __Pyx_GIVEREF(__pyx_n_u_CDATA_SECTION);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 10, __pyx_n_u_CDATA_SECTION)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_ENTITY_REFERENCE);
  __Pyx_GIVEREF(__pyx_n_u_ENTITY_REFERENCE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 11, __pyx_n_u_ENTITY_REFERENCE)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_ENTITY);
  __Pyx_GIVEREF(__pyx_n_u_ENTITY);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 12, __pyx_n_u_ENTITY)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_PROCESSING_INSTRUCTION);
  __Pyx_GIVEREF(__pyx_n_u_PROCESSING_INSTRUCTION);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 13, __pyx_n_u_PROCESSING_INSTRUCTION)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_COMMENT);
  __Pyx_GIVEREF(__pyx_n_u_COMMENT);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 14, __pyx_n_u_COMMENT)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_DOCUMENT);
  __Pyx_GIVEREF(__pyx_n_u_DOCUMENT);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 15, __pyx_n_u_DOCUMENT)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_DOCUMENT_TYPE);
  __Pyx_GIVEREF(__pyx_n_u_DOCUMENT_TYPE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 16, __pyx_n_u_DOCUMENT_TYPE)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_DOCUMENT_FRAGMENT);
  __Pyx_GIVEREF(__pyx_n_u_DOCUMENT_FRAGMENT);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 17, __pyx_n_u_DOCUMENT_FRAGMENT)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_NOTATION);
  __Pyx_GIVEREF(__pyx_n_u_NOTATION);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 18, __pyx_n_u_NOTATION)) __PYX_ERR(0, 27, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_u_LAST_ENTRY);
  __Pyx_GIVEREF(__pyx_n_u_LAST_ENTRY);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_16, 19, __pyx_n_u_LAST_ENTRY)) __PYX_ERR(0, 27, __pyx_L1_error);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_all, __pyx_t_16) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":437
 *         return class_name[:class_name_len]
 * 
 *     cpdef void add(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         add(self, class_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_3add, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMElementClassList_add, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__52)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, __pyx_n_s_add, __pyx_t_16) < 0) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList);

  /* "resiliparse_dom/parse/html.pyx":460
 *         self.node._setattr_impl(<const char*>b'class', 5, <const char*>new_class_name, len(new_class_name))
 * 
 *     cpdef void remove(self, str class_name):             # <<<<<<<<<<<<<<
 *         """
 *         remove(self, class_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_5remove, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMElementClassList_remove, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__53)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList, __pyx_n_s_remove, __pyx_t_16) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMElementClassList);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_21__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMElementClassList___reduce_cyt, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__54)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_16) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_19DOMElementClassList_23__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMElementClassList___setstate_c, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_16) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":874
 *         return attrs
 * 
 *     cpdef bint hasattr(self, str attr_name) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         hasattr(self, attr_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_8hasattr, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_hasattr, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_hasattr, __pyx_t_16) < 0) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":921
 *         return True
 * 
 *     cpdef str getattr(self, str attr_name, str default_value=None):             # <<<<<<<<<<<<<<
 *         """
 *         getattr(self, attr_name, default_value=None)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_10getattr, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_getattr, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__59)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__41);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_getattr, __pyx_t_16) < 0) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":985
 *         return True
 * 
 *     cpdef setattr(self, str attr_name, str attr_value):             # <<<<<<<<<<<<<<
 *         """
 *         setattr(self, attr_name, attr_value)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_14setattr, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_setattr, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 985, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_setattr, __pyx_t_16) < 0) __PYX_ERR(0, 985, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1040
 *         return True
 * 
 *     cpdef delattr(self, str attr_name):             # <<<<<<<<<<<<<<
 *         """
 *         delattr(self, attr_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_18delattr, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_delattr, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__62)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_delattr, __pyx_t_16) < 0) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1069
 *             raise KeyError(f'No such attribute: {attr_name}')
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_22query_selector, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_query_selector, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_query_selector, __pyx_t_16) < 0) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1088
 *         return _create_dom_node(self.tree, node)
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_24query_selector_all, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_query_selector_all, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__65)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_query_selector_all, __pyx_t_16) < 0) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1107
 *         return _create_dom_collection(self.tree, coll)
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_26matches, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_matches, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_matches, __pyx_t_16) < 0) __PYX_ERR(0, 1107, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1123
 *         return matches_impl(self.node, self.tree, <const char*>selector_bytes, len(selector_bytes))
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_28get_elements_by_attr, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_get_elements_by_attr, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__68)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__69);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_get_elements_by_attr, __pyx_t_16) < 0) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1150
 *                                                                 10, case_insensitive))
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_30get_element_by_id, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_get_element_by_id, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__71)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__72);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_get_element_by_id, __pyx_t_16) < 0) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1174
 *         return _create_dom_node(self.tree, result_node)
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_32get_elements_by_class_name, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_get_elements_by_class_na, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__74)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__75);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_get_elements_by_class_name, __pyx_t_16) < 0) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1195
 *                                                                                  len(class_name_bytes), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_34get_elements_by_tag_name, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_get_elements_by_tag_name, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__77)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_get_elements_by_tag_name, __pyx_t_16) < 0) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1214
 *                                                                                len(tag_name_bytes)))
 * 
 *     cpdef DOMNode append_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         append_child(self, node)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_36append_child, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_append_child, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__79)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_append_child, __pyx_t_16) < 0) __PYX_ERR(0, 1214, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1237
 *         return node
 * 
 *     cpdef DOMNode insert_before(self, DOMNode node, DOMNode reference):             # <<<<<<<<<<<<<<
 *         """
 *         insert_before(self, node, reference)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_38insert_before, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_insert_before, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__81)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_insert_before, __pyx_t_16) < 0) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1267
 *         return node
 * 
 *     cpdef DOMNode replace_child(self, DOMNode new_child, DOMNode old_child):             # <<<<<<<<<<<<<<
 *         """
 *         replace_child(self, new_child, old_child)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_40replace_child, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_replace_child, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__83)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_replace_child, __pyx_t_16) < 0) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1297
 *         return old_child
 * 
 *     cpdef DOMNode remove_child(self, DOMNode node):             # <<<<<<<<<<<<<<
 *         """
 *         remove_child(self, node)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_42remove_child, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_remove_child, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__84)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_remove_child, __pyx_t_16) < 0) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "resiliparse_dom/parse/html.pyx":1319
 * 
 *     # noinspection PyAttributeOutsideInit
 *     cpdef decompose(self):             # <<<<<<<<<<<<<<
 *         """
 *         decompose(self)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_44decompose, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode_decompose, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__85)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode, __pyx_n_s_decompose, __pyx_t_16) < 0) __PYX_ERR(0, 1319, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMNode);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_54__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode___reduce_cython, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__86)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_16) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_7DOMNode_56__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMNode___setstate_cython, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__87)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_16) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":1444
 *         return _create_dom_collection(self.tree, joined_coll)
 * 
 *     cpdef DOMNode get_element_by_id(self, str element_id, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_element_by_id(self, element_id, case_insensitive=False)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_5get_element_by_id, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_get_element_by_id, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__88)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__89);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_get_element_by_id, __pyx_t_16) < 0) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "resiliparse_dom/parse/html.pyx":1472
 *         return None
 * 
 *     cpdef DOMCollection get_elements_by_attr(self, str attr_name, str attr_value, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_attr(self, attr_name, attr_value, case_insensitive=False)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_7get_elements_by_attr, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_get_elements_by_at, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__90)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__91);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_get_elements_by_attr, __pyx_t_16) < 0) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "resiliparse_dom/parse/html.pyx":1491
 *                                               (attr_name.encode(), attr_value.encode(),  10, case_insensitive))
 * 
 *     cpdef DOMCollection get_elements_by_class_name(self, str class_name, bint case_insensitive=False):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_class_name(self, element_class, case_insensitive=False)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_9get_elements_by_class_name, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_get_elements_by_cl, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__92)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_tuple__93);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_get_elements_by_class_name, __pyx_t_16) < 0) __PYX_ERR(0, 1491, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "resiliparse_dom/parse/html.pyx":1507
 *         return self._forward_collection_match(b'by_class', (class_name.encode(), 10))
 * 
 *     cpdef DOMCollection get_elements_by_tag_name(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         get_elements_by_tag_name(self, tag_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_11get_elements_by_tag_name, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_get_elements_by_ta, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__94)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_get_elements_by_tag_name, __pyx_t_16) < 0) __PYX_ERR(0, 1507, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "resiliparse_dom/parse/html.pyx":1521
 *         return self._forward_collection_match(b'by_tag', (tag_name.encode(),))
 * 
 *     cpdef DOMNode query_selector(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector(self, selector)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_13query_selector, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_query_selector, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_query_selector, __pyx_t_16) < 0) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "resiliparse_dom/parse/html.pyx":1548
 *         return None
 * 
 *     cpdef DOMCollection query_selector_all(self, str selector):             # <<<<<<<<<<<<<<
 *         """
 *         query_selector_all(self, selector)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_15query_selector_all, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_query_selector_all, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__96)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_query_selector_all, __pyx_t_16) < 0) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "resiliparse_dom/parse/html.pyx":1562
 *         return self._forward_collection_match(b'selector_all', (selector.encode(),))
 * 
 *     cpdef bint matches(self, str selector) except -1:             # <<<<<<<<<<<<<<
 *         """
 *         matches(self, selector)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_17matches, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection_matches, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__97)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection, __pyx_n_s_matches, __pyx_t_16) < 0) __PYX_ERR(0, 1562, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_DOMCollection);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_30__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection___reduce_cython, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__98)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_16) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_13DOMCollection_32__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_DOMCollection___setstate_cython, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_16) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":1732
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse(cls, str document):
 *         """
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_7parse, __Pyx_CYFUNCTION_CLASSMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_HTMLTree_parse, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__101)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_parse, __pyx_t_16) < 0) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);
  __Pyx_GetNameInClass(__pyx_t_16, (PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_parse); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_14 = __Pyx_Method_ClassMethod(__pyx_t_16); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_parse, __pyx_t_14) < 0) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);

  /* "resiliparse_dom/parse/html.pyx":1746
 *         return create_html_tree(document.encode(), reencode=False)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def parse_from_bytes(cls, bytes document, str encoding='utf-8', str errors='ignore'):
 *         """
 */
  __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_9parse_from_bytes, __Pyx_CYFUNCTION_CLASSMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_HTMLTree_parse_from_bytes, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__104);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_parse_from_bytes, __pyx_t_14) < 0) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);
  __Pyx_GetNameInClass(__pyx_t_14, (PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_parse_from_bytes); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_16 = __Pyx_Method_ClassMethod(__pyx_t_14); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_parse_from_bytes, __pyx_t_16) < 0) __PYX_ERR(0, 1746, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);

  /* "resiliparse_dom/parse/html.pyx":1819
 *         return title[:title_len].decode()
 * 
 *     cpdef DOMNode create_element(self, str tag_name):             # <<<<<<<<<<<<<<
 *         """
 *         create_element(self, tag_name)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_11create_element, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_HTMLTree_create_element, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__105)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_create_element, __pyx_t_16) < 0) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);

  /* "resiliparse_dom/parse/html.pyx":1838
 *         return _create_dom_node(self, <lxb_dom_node_t*>element)
 * 
 *     cpdef DOMNode create_text_node(self, str text):             # <<<<<<<<<<<<<<
 *         """
 *         create_text_node(self, text)
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_13create_text_node, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_HTMLTree_create_text_node, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__107)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree, __pyx_n_s_create_text_node, __pyx_t_16) < 0) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
  PyType_Modified(__pyx_ptype_15resiliparse_dom_5parse_4html_HTMLTree);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_17__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_HTMLTree___reduce_cython, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__108)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_16) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_8HTMLTree_19__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_HTMLTree___setstate_cython, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_16) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":1864
 * 
 * 
 * class DOMContext:             # <<<<<<<<<<<<<<
 *     """
 *     __init__()
 */
  __pyx_t_16 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_DOMContext, __pyx_n_s_DOMContext, (PyObject *) NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_kp_s_init___DOM_node_traversal_con); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);

  /* "resiliparse_dom/parse/html.pyx":1878
 *     :ivar int depth: the current traversal depth
 *     """
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.node = None
 *         self.depth = 0
 */
  __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_10DOMContext_1__init__, 0, __pyx_n_s_DOMContext___init, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__110)); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  if (__Pyx_SetNameInClass(__pyx_t_16, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

  /* "resiliparse_dom/parse/html.pyx":1864
 * 
 * 
 * class DOMContext:             # <<<<<<<<<<<<<<
 *     """
 *     __init__()
 */
  __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_DOMContext, __pyx_empty_tuple, __pyx_t_16, NULL, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DOMContext, __pyx_t_14) < 0) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":1883
 * 
 * 
 * def traverse_dom(DOMNode base_node, start_callback, end_callback=None, context=None, bint elements_only=False):             # <<<<<<<<<<<<<<
 *     """
 *     traverse_dom(base_node, start_callback, end_callback=None, context=None, elements_only=False)
 */
  __pyx_t_16 = __Pyx_PyBool_FromLong(((int)0)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_14 = PyTuple_New(3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 0, Py_None)) __PYX_ERR(0, 1883, __pyx_L1_error);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 1, Py_None)) __PYX_ERR(0, 1883, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_16);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_14, 2, __pyx_t_16)) __PYX_ERR(0, 1883, __pyx_L1_error);
  __pyx_t_16 = 0;
  __pyx_t_16 = __Pyx_CyFunction_New(&__pyx_mdef_15resiliparse_dom_5parse_4html_1traverse_dom, 0, __pyx_n_s_traverse_dom, NULL, __pyx_n_s_resiliparse_dom_parse_html, __pyx_d, ((PyObject *)__pyx_codeobj__112)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_16, __pyx_t_14);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_traverse_dom, __pyx_t_16) < 0) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "resiliparse_dom/parse/html.pyx":1945
 *         BLOCK_ELEMENT_SET.insert(BLOCK_ELEMENTS[i])
 * 
 * _init_block_element_set()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_15resiliparse_dom_5parse_4html__init_block_element_set();

  /* "resiliparse_dom/parse/html.pyx":1
 * # Copyright 2021 Janek Bevendorff             # <<<<<<<<<<<<<<
 * #
 * # Licensed under the Apache License, Version 2.0 (the "License");
 */
  __pyx_t_16 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_16) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init resiliparse_dom.parse.html", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init resiliparse_dom.parse.html");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    #endif
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) < 0) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL
        #if PY_VERSION_HEX < 0x03090000
        vectorcallfunc f = _PyVectorcall_Function(func);
        #else
        vectorcallfunc f = PyVectorcall_Function(func);
        #endif
        if (f) {
            return f(func, args, (size_t)nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, (size_t)nargs, NULL);
        }
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs = PyTuple_GET_SIZE(kwnames);
    PyObject *dict;
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        Py_XDECREF(key); key = NULL;
        Py_XDECREF(value); value = NULL;
        if (kwds_is_tuple) {
            Py_ssize_t size;
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(kwds);
#else
            size = PyTuple_Size(kwds);
            if (size < 0) goto bad;
#endif
            if (pos >= size) break;
#if CYTHON_AVOID_BORROWED_REFS
            key = __Pyx_PySequence_ITEM(kwds, pos);
            if (!key) goto bad;
#elif CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kwds, pos);
#else
            key = PyTuple_GetItem(kwds, pos);
            if (!key) goto bad;
#endif
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
#endif
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(value);
            Py_DECREF(key);
#endif
            key = NULL;
            value = NULL;
            continue;
        }
#if !CYTHON_AVOID_BORROWED_REFS
        Py_INCREF(key);
#endif
        Py_INCREF(value);
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    Py_XDECREF(key);
    Py_XDECREF(value);
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    Py_XDECREF(key);
    Py_XDECREF(value);
    return -1;
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {
    PyObject *runerr = NULL;
    Py_ssize_t key_value;
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError,
            "cannot fit '" __Pyx_FMT_TYPENAME "' into an index-sized integer", index_type_name);
        __Pyx_DECREF_TypeName(index_type_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem_Slow(PyObject *obj, PyObject *key) {
    __Pyx_TypeName obj_type_name;
    if (likely(PyType_Check(obj))) {
        PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(obj, __pyx_n_s_class_getitem);
        if (!meth) {
            PyErr_Clear();
        } else {
            PyObject *result = __Pyx_PyObject_CallOneArg(meth, key);
            Py_DECREF(meth);
            return result;
        }
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is not subscriptable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key) {
    PyTypeObject *tp = Py_TYPE(obj);
    PyMappingMethods *mm = tp->tp_as_mapping;
    PySequenceMethods *sm = tp->tp_as_sequence;
    if (likely(mm && mm->mp_subscript)) {
        return mm->mp_subscript(obj, key);
    }
    if (likely(sm && sm->sq_item)) {
        return __Pyx_PyObject_GetIndex(obj, key);
    }
    return __Pyx_PyObject_GetItem_Slow(obj, key);
}
#endif

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kw,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kw, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kw))) {
        Py_ssize_t kwsize;
#if CYTHON_ASSUME_SAFE_MACROS
        kwsize = PyTuple_GET_SIZE(kw);
#else
        kwsize = PyTuple_Size(kw);
        if (kwsize < 0) return 0;
#endif
        if (unlikely(kwsize == 0))
            return 1;
        if (!kw_allowed) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, 0);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            goto invalid_keyword;
        }
#if PY_VERSION_HEX < 0x03090000
        for (pos = 0; pos < kwsize; pos++) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, pos);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
        }
#endif
        return 1;
    }
    while (PyDict_Next(kw, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if (!kw_allowed && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* GetAttr3 */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
#endif
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    int res = PyObject_GetOptionalAttr(o, n, &r);
    return (res != 0) ? r : __Pyx_NewRef(d);
#else
  #if CYTHON_USE_TYPE_SLOTS
    if (likely(PyString_Check(n))) {
        r = __Pyx_PyObject_GetAttrStrNoError(o, n);
        if (unlikely(!r) && likely(!PyErr_Occurred())) {
            r = __Pyx_NewRef(d);
        }
        return r;
    }
  #endif
    r = PyObject_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
#endif
}

/* RaiseUnexpectedTypeError */
static int
__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)
{
    __Pyx_TypeName obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError, "Expected %s, got " __Pyx_FMT_TYPENAME,
                 expected, obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.') != NULL) {
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__3);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* HasAttr */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (!r) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
    else state = (PyGILState_STATE)0;
#endif
    CYTHON_UNUSED_VAR(clineno);
    CYTHON_UNUSED_VAR(lineno);
    CYTHON_UNUSED_VAR(filename);
    CYTHON_MAYBE_UNUSED_VAR(nogil);
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* decode_c_bytes */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    if (unlikely((start < 0) | (stop < 0))) {
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (stop > length)
        stop = length;
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    __Pyx_TypeName type_name;
    __Pyx_TypeName obj_type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    type_name = __Pyx_PyType_GetName(type);
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected " __Pyx_FMT_TYPENAME
        ", got " __Pyx_FMT_TYPENAME ")", name, type_name, obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* decode_c_string */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        size_t slen = strlen(cstring);
        if (unlikely(slen > (size_t) PY_SSIZE_T_MAX)) {
            PyErr_SetString(PyExc_OverflowError,
                            "c-string too long to convert to Python");
            return NULL;
        }
        length = (Py_ssize_t) slen;
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* PyObjectCall2Args */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args[3] = {NULL, arg1, arg2};
    return __Pyx_PyObject_FastCall(function, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
#if !(CYTHON_VECTORCALL && __PYX_LIMITED_VERSION_HEX >= 0x030C00A2)
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
#endif
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
#if CYTHON_VECTORCALL && __PYX_LIMITED_VERSION_HEX >= 0x030C00A2
    PyObject *args[2] = {obj, arg};
    (void) __Pyx_PyObject_GetMethod;
    (void) __Pyx_PyObject_CallOneArg;
    (void) __Pyx_PyObject_Call2Args;
    return PyObject_VectorcallMethod(method_name, args, 2 | PY_VECTORCALL_ARGUMENTS_OFFSET, NULL);
#else
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
#endif
}

/* StringJoin */
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {
    (void) __Pyx_PyObject_CallMethod1;
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION < 3
    return _PyString_Join(sep, values);
#elif CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000
    return _PyBytes_Join(sep, values);
#else
    return __Pyx_PyObject_CallMethod1(sep, __pyx_n_s_join, values);
#endif
}

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* pep479 */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen) {
    PyObject *exc, *val, *tb, *cur_exc;
    __Pyx_PyThreadState_declare
    #ifdef __Pyx_StopAsyncIteration_USED
    int is_async_stopiteration = 0;
    #endif
    CYTHON_MAYBE_UNUSED_VAR(in_async_gen);
    cur_exc = PyErr_Occurred();
    if (likely(!__Pyx_PyErr_GivenExceptionMatches(cur_exc, PyExc_StopIteration))) {
        #ifdef __Pyx_StopAsyncIteration_USED
        if (in_async_gen && unlikely(__Pyx_PyErr_GivenExceptionMatches(cur_exc, __Pyx_PyExc_StopAsyncIteration))) {
            is_async_stopiteration = 1;
        } else
        #endif
            return;
    }
    __Pyx_PyThreadState_assign
    __Pyx_GetException(&exc, &val, &tb);
    Py_XDECREF(exc);
    Py_XDECREF(val);
    Py_XDECREF(tb);
    PyErr_SetString(PyExc_RuntimeError,
        #ifdef __Pyx_StopAsyncIteration_USED
        is_async_stopiteration ? "async generator raised StopAsyncIteration" :
        in_async_gen ? "async generator raised StopIteration" :
        #endif
        "generator raised StopIteration");
}

/* PyUnicode_Unicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj) {
    if (unlikely(obj == Py_None))
        obj = __pyx_kp_u_None;
    return __Pyx_NewRef(obj);
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    __Pyx_TypeName obj_type_name;
    __Pyx_TypeName type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    type_name = __Pyx_PyType_GetName(type);
    PyErr_Format(PyExc_TypeError,
                 "Cannot convert " __Pyx_FMT_TYPENAME " to " __Pyx_FMT_TYPENAME,
                 obj_type_name, type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    return 0;
}

/* RaiseUnboundLocalError */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* RaiseClosureNameError */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind, kind_shift;
    Py_ssize_t i, char_pos;
    void *result_udata;
    CYTHON_MAYBE_UNUSED_VAR(max_char);
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    kind_shift = (result_ukind == PyUnicode_4BYTE_KIND) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    kind_shift = (result_ukind == 4) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    assert(kind_shift == 2 || kind_shift == 1 || kind_shift == 0);
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely((PY_SSIZE_T_MAX >> kind_shift) - ulength < char_pos))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + (char_pos << kind_shift), udata, (size_t) (ulength << kind_shift));
        } else {
            #if PY_VERSION_HEX >= 0x030d0000
            if (unlikely(PyUnicode_CopyCharacters(result_uval, char_pos, uval, 0, ulength) < 0)) goto bad;
            #elif CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    CYTHON_UNUSED_VAR(max_char);
    CYTHON_UNUSED_VAR(result_ulength);
    CYTHON_UNUSED_VAR(value_count);
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* ModInt[Py_ssize_t] */
static CYTHON_INLINE Py_ssize_t __Pyx_mod_Py_ssize_t(Py_ssize_t a, Py_ssize_t b) {
    Py_ssize_t r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + (unsigned long)b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* py_abs */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *n) {
#if PY_VERSION_HEX >= 0x030C00A7
    if (likely(__Pyx_PyLong_IsCompact(n))) {
        return PyLong_FromSize_t(__Pyx_PyLong_CompactValueUnsigned(n));
    }
#else
    if (likely(Py_SIZE(n) == -1)) {
        return PyLong_FromUnsignedLong(__Pyx_PyLong_Digits(n)[0]);
    }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000
    {
        PyObject *copy = _PyLong_Copy((PyLongObject*)n);
        if (likely(copy)) {
            #if PY_VERSION_HEX >= 0x030C00A7
            ((PyLongObject*)copy)->long_value.lv_tag = ((PyLongObject*)copy)->long_value.lv_tag & ~_PyLong_SIGN_MASK;
            #else
            __Pyx_SET_SIZE(copy, -Py_SIZE(copy));
            #endif
        }
        return copy;
    }
#else
    return PyNumber_Negative(n);
#endif
}
#endif

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg[2] = {NULL, NULL};
    return __Pyx_PyObject_FastCall(func, arg + 1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n;
#if CYTHON_ASSUME_SAFE_MACROS
    n = PyTuple_GET_SIZE(bases);
#else
    n = PyTuple_Size(bases);
    if (n < 0) return -1;
#endif
    for (i = 1; i < n; i++)
    {
#if CYTHON_AVOID_BORROWED_REFS
        PyObject *b0 = PySequence_GetItem(bases, i);
        if (!b0) return -1;
#elif CYTHON_ASSUME_SAFE_MACROS
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *b0 = PyTuple_GetItem(bases, i);
        if (!b0) return -1;
#endif
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
        if (dictoffset == 0)
        {
            Py_ssize_t b_dictoffset = 0;
#if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
            b_dictoffset = b->tp_dictoffset;
#else
            PyObject *py_b_dictoffset = PyObject_GetAttrString((PyObject*)b, "__dictoffset__");
            if (!py_b_dictoffset) goto dictoffset_return;
            b_dictoffset = PyLong_AsSsize_t(py_b_dictoffset);
            Py_DECREF(py_b_dictoffset);
            if (b_dictoffset == -1 && PyErr_Occurred()) goto dictoffset_return;
#endif
            if (b_dictoffset) {
                {
                    __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
                    PyErr_Format(PyExc_TypeError,
                        "extension type '%.200s' has no __dict__ slot, "
                        "but base type '" __Pyx_FMT_TYPENAME "' has: "
                        "either add 'cdef dict __dict__' to the extension type "
                        "or add '__slots__ = [...]' to the base type",
                        type_name, b_name);
                    __Pyx_DECREF_TypeName(b_name);
                }
#if !(CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY)
              dictoffset_return:
#endif
#if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(b0);
#endif
                return -1;
            }
        }
#if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(b0);
#endif
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyTypeObject *type, void *vtable) {
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
    if (unlikely(!ob))
        goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(PyObject_SetAttr((PyObject *) type, __pyx_n_s_pyx_vtable, ob) < 0))
#else
    if (unlikely(PyDict_SetItem(type->tp_dict, __pyx_n_s_pyx_vtable, ob) < 0))
#endif
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* GetVTable */
static void* __Pyx_GetVtable(PyTypeObject *type) {
    void* ptr;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *ob = PyObject_GetAttr((PyObject *)type, __pyx_n_s_pyx_vtable);
#else
    PyObject *ob = PyObject_GetItem(type->tp_dict, __pyx_n_s_pyx_vtable);
#endif
    if (!ob)
        goto bad;
    ptr = PyCapsule_GetPointer(ob, 0);
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* MergeVTables */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type) {
    int i;
    void** base_vtables;
    __Pyx_TypeName tp_base_name;
    __Pyx_TypeName base_name;
    void* unknown = (void*)-1;
    PyObject* bases = type->tp_bases;
    int base_depth = 0;
    {
        PyTypeObject* base = type->tp_base;
        while (base) {
            base_depth += 1;
            base = base->tp_base;
        }
    }
    base_vtables = (void**) malloc(sizeof(void*) * (size_t)(base_depth + 1));
    base_vtables[0] = unknown;
    for (i = 1; i < PyTuple_GET_SIZE(bases); i++) {
        void* base_vtable = __Pyx_GetVtable(((PyTypeObject*)PyTuple_GET_ITEM(bases, i)));
        if (base_vtable != NULL) {
            int j;
            PyTypeObject* base = type->tp_base;
            for (j = 0; j < base_depth; j++) {
                if (base_vtables[j] == unknown) {
                    base_vtables[j] = __Pyx_GetVtable(base);
                    base_vtables[j + 1] = unknown;
                }
                if (base_vtables[j] == base_vtable) {
                    break;
                } else if (base_vtables[j] == NULL) {
                    goto bad;
                }
                base = base->tp_base;
            }
        }
    }
    PyErr_Clear();
    free(base_vtables);
    return 0;
bad:
    tp_base_name = __Pyx_PyType_GetName(type->tp_base);
    base_name = __Pyx_PyType_GetName((PyTypeObject*)PyTuple_GET_ITEM(bases, i));
    PyErr_Format(PyExc_TypeError,
        "multiple bases have vtable conflict: '" __Pyx_FMT_TYPENAME "' and '" __Pyx_FMT_TYPENAME "'", tp_base_name, base_name);
    __Pyx_DECREF_TypeName(tp_base_name);
    __Pyx_DECREF_TypeName(base_name);
    free(base_vtables);
    return -1;
}
#endif

/* SetupReduce */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_n_s_name_2);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}
#endif

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType_3_0_10
#define __PYX_HAVE_RT_ImportType_3_0_10
static PyTypeObject *__Pyx_ImportType_3_0_10(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_10 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_0_10 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_0_10 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef((char*) __PYX_ABI_MODULE_NAME);
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#elif PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyObject *py_name = NULL;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
    if (!py_name) return NULL;
    PyErr_Format(PyExc_TypeError, "%.200S() takes no keyword arguments",
                 py_name);
    Py_DECREF(py_name);
#else
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
#endif
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_MACROS
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(!argc) < 0) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* Py3UpdateBases */
static PyObject*
__Pyx_PEP560_update_bases(PyObject *bases)
{
    Py_ssize_t i, j, size_bases;
    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;
    size_bases = PyTuple_GET_SIZE(bases);
    for (i = 0; i < size_bases; i++) {
        base  = PyTuple_GET_ITEM(bases, i);
        if (PyType_Check(base)) {
            if (new_bases) {
                if (PyList_Append(new_bases, base) < 0) {
                    goto error;
                }
            }
            continue;
        }
        meth = __Pyx_PyObject_GetAttrStrNoError(base, __pyx_n_s_mro_entries);
        if (!meth && PyErr_Occurred()) {
            goto error;
        }
        if (!meth) {
            if (new_bases) {
                if (PyList_Append(new_bases, base) < 0) {
                    goto error;
                }
            }
            continue;
        }
        new_base = __Pyx_PyObject_CallOneArg(meth, bases);
        Py_DECREF(meth);
        if (!new_base) {
            goto error;
        }
        if (!PyTuple_Check(new_base)) {
            PyErr_SetString(PyExc_TypeError,
                            "__mro_entries__ must return a tuple");
            Py_DECREF(new_base);
            goto error;
        }
        if (!new_bases) {
            if (!(new_bases = PyList_New(i))) {
                goto error;
            }
            for (j = 0; j < i; j++) {
                base = PyTuple_GET_ITEM(bases, j);
                PyList_SET_ITEM(new_bases, j, base);
                Py_INCREF(base);
            }
        }
        j = PyList_GET_SIZE(new_bases);
        if (PyList_SetSlice(new_bases, j, j, new_base) < 0) {
            goto error;
        }
        Py_DECREF(new_base);
    }
    if (!new_bases) {
        Py_INCREF(bases);
        return bases;
    }
    result = PyList_AsTuple(new_bases);
    Py_DECREF(new_bases);
    return result;
error:
    Py_XDECREF(new_bases);
    return NULL;
}

/* SetNewInClass */
static int __Pyx_SetNewInClass(PyObject *ns, PyObject *name, PyObject *value) {
#ifdef __Pyx_CyFunction_USED
    int ret;
    if (__Pyx_CyFunction_Check(value)) {
        PyObject *staticnew = PyStaticMethod_New(value);
        if (unlikely(!staticnew)) return -1;
        ret = __Pyx_SetNameInClass(ns, name, staticnew);
        Py_DECREF(staticnew);
        return ret;
    }
#endif
    return __Pyx_SetNameInClass(ns, name, value);
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases;
#if CYTHON_ASSUME_SAFE_MACROS
    nbases = PyTuple_GET_SIZE(bases);
#else
    nbases = PyTuple_Size(bases);
    if (nbases < 0) return NULL;
#endif
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
#if CYTHON_ASSUME_SAFE_MACROS
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *tmp = PyTuple_GetItem(bases, i);
        if (!tmp) return NULL;
#endif
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* PyObjectLookupSpecial */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return with_error ? __Pyx_PyObject_GetAttrStr(obj, attr_name) : __Pyx_PyObject_GetAttrStrNoError(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else if (with_error) {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#endif

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStrNoError(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs[3] = {NULL, name, bases};
            ns = __Pyx_PyObject_FastCallDict(prep, pargs+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, mkw);
            Py_DECREF(prep);
        } else {
            if (unlikely(PyErr_Occurred()))
                return NULL;
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
#if PY_VERSION_HEX >= 0x03030000
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
#else
    CYTHON_MAYBE_UNUSED_VAR(qualname);
#endif
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
static int __Pyx_SetNamesPEP487(PyObject *type_obj) {
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *names_to_set, *key, *value, *set_name, *tmp;
    Py_ssize_t i = 0;
#if CYTHON_USE_TYPE_SLOTS
    names_to_set = PyDict_Copy(type->tp_dict);
#else
    {
        PyObject *d = PyObject_GetAttr(type_obj, __pyx_n_s_dict);
        names_to_set = NULL;
        if (likely(d)) {
            PyObject *names_to_set = PyDict_New();
            int ret = likely(names_to_set) ? PyDict_Update(names_to_set, d) : -1;
            Py_DECREF(d);
            if (unlikely(ret < 0))
                Py_CLEAR(names_to_set);
        }
    }
#endif
    if (unlikely(names_to_set == NULL))
        goto bad;
    while (PyDict_Next(names_to_set, &i, &key, &value)) {
        set_name = __Pyx_PyObject_LookupSpecialNoError(value, __pyx_n_s_set_name);
        if (unlikely(set_name != NULL)) {
            tmp = __Pyx_PyObject_Call2Args(set_name, type_obj, key);
            Py_DECREF(set_name);
            if (unlikely(tmp == NULL)) {
                __Pyx_TypeName value_type_name =
                    __Pyx_PyType_GetName(Py_TYPE(value));
                __Pyx_TypeName type_name = __Pyx_PyType_GetName(type);
                PyErr_Format(PyExc_RuntimeError,
#if PY_MAJOR_VERSION >= 3
                    "Error calling __set_name__ on '" __Pyx_FMT_TYPENAME "' instance %R " "in '" __Pyx_FMT_TYPENAME "'",
                    value_type_name, key, type_name);
#else
                    "Error calling __set_name__ on '" __Pyx_FMT_TYPENAME "' instance %.100s in '" __Pyx_FMT_TYPENAME "'",
                    value_type_name,
                    PyString_Check(key) ? PyString_AS_STRING(key) : "?",
                    type_name);
#endif
                goto bad;
            } else {
                Py_DECREF(tmp);
            }
        }
        else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
    Py_DECREF(names_to_set);
    return 0;
bad:
    Py_XDECREF(names_to_set);
    return -1;
}
static PyObject *__Pyx_InitSubclassPEP487(PyObject *type_obj, PyObject *mkw) {
#if CYTHON_USE_TYPE_SLOTS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *mro = type->tp_mro;
    Py_ssize_t i, nbases;
    if (unlikely(!mro)) goto done;
    (void) &__Pyx_GetBuiltinName;
    Py_INCREF(mro);
    nbases = PyTuple_GET_SIZE(mro);
    assert(PyTuple_GET_ITEM(mro, 0) == type_obj);
    for (i = 1; i < nbases-1; i++) {
        PyObject *base, *dict, *meth;
        base = PyTuple_GET_ITEM(mro, i);
        dict = ((PyTypeObject *)base)->tp_dict;
        meth = __Pyx_PyDict_GetItemStrWithError(dict, __pyx_n_s_init_subclass);
        if (unlikely(meth)) {
            descrgetfunc f = Py_TYPE(meth)->tp_descr_get;
            PyObject *res;
            Py_INCREF(meth);
            if (likely(f)) {
                res = f(meth, NULL, type_obj);
                Py_DECREF(meth);
                if (unlikely(!res)) goto bad;
                meth = res;
            }
            res = __Pyx_PyObject_FastCallDict(meth, NULL, 0, mkw);
            Py_DECREF(meth);
            if (unlikely(!res)) goto bad;
            Py_DECREF(res);
            goto done;
        } else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
done:
    Py_XDECREF(mro);
    return type_obj;
bad:
    Py_XDECREF(mro);
    Py_DECREF(type_obj);
    return NULL;
#else
    PyObject *super_type, *super, *func, *res;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    super_type = __Pyx_GetBuiltinName(__pyx_n_s_super);
#else
    super_type = (PyObject*) &PySuper_Type;
    (void) &__Pyx_GetBuiltinName;
#endif
    super = likely(super_type) ? __Pyx_PyObject_Call2Args(super_type, type_obj, type_obj) : NULL;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    Py_XDECREF(super_type);
#endif
    if (unlikely(!super)) {
        Py_CLEAR(type_obj);
        goto done;
    }
    func = __Pyx_PyObject_GetAttrStrNoError(super, __pyx_n_s_init_subclass);
    Py_DECREF(super);
    if (likely(!func)) {
        if (unlikely(PyErr_Occurred()))
            Py_CLEAR(type_obj);
        goto done;
    }
    res = __Pyx_PyObject_FastCallDict(func, NULL, 0, mkw);
    Py_DECREF(func);
    if (unlikely(!res))
        Py_CLEAR(type_obj);
    Py_XDECREF(res);
done:
    return type_obj;
#endif
}
#endif
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result;
    PyObject *owned_metaclass = NULL;
    PyObject *margs[4] = {NULL, name, bases, dict};
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    result = __Pyx_PyObject_FastCallDict(metaclass, margs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET,
#if PY_VERSION_HEX < 0x030600A4
        (metaclass == (PyObject*)&PyType_Type) ? NULL : mkw
#else
        mkw
#endif
    );
    Py_XDECREF(owned_metaclass);
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
    if (likely(result) && likely(PyType_Check(result))) {
        if (unlikely(__Pyx_SetNamesPEP487(result) < 0)) {
            Py_CLEAR(result);
        } else {
            result = __Pyx_InitSubclassPEP487(result, mkw);
        }
    }
#else
    (void) &__Pyx_GetBuiltinName;
#endif
    return result;
}

/* Globals */
static PyObject* __Pyx_Globals(void) {
    return __Pyx_NewRef(__pyx_d);
}

/* UnpackUnboundCMethod */
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
    PyObject *result;
    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
    if (unlikely(!selfless_args)) return NULL;
    result = PyObject_Call(method, selfless_args, kwargs);
    Py_DECREF(selfless_args);
    return result;
}
static PyMethodDef __Pyx_UnboundCMethod_Def = {
     "CythonUnboundCMethod",
     __PYX_REINTERPRET_FUNCION(PyCFunction, __Pyx_SelflessCall),
     METH_VARARGS | METH_KEYWORDS,
     NULL
};
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #else
    if (likely(!__Pyx_CyOrPyCFunction_Check(method)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    } else
#endif
#if CYTHON_COMPILING_IN_PYPY
#else
    if (PyCFunction_Check(method))
#endif
    {
        PyObject *self;
        int self_found;
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        self = PyObject_GetAttrString(method, "__self__");
        if (!self) {
            PyErr_Clear();
        }
#else
        self = PyCFunction_GET_SELF(method);
#endif
        self_found = (self && self != Py_None);
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        Py_XDECREF(self);
#endif
        if (self_found) {
            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);
            if (unlikely(!unbound_method)) return -1;
            Py_DECREF(method);
            target->method = unbound_method;
        }
    }
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if ((PY_VERSION_HEX >= 0x030600B1) && flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            #else
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            #endif
        } else if ((PY_VERSION_HEX >= 0x030700A0) && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* ImportDottedModule */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__50;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* ClassMethod */
static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method))
#else
    #if PY_MAJOR_VERSION == 2
    static PyTypeObject *methoddescr_type = NULL;
    if (unlikely(methoddescr_type == NULL)) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (unlikely(!meth)) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    #else
    PyTypeObject *methoddescr_type = &PyMethodDescr_Type;
    #endif
    if (__Pyx_TypeCheck(method, methoddescr_type))
#endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else {
        return PyClassMethod_New(method);
    }
}

/* GetNameInClass */
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    PyObject *dict;
    assert(PyType_Check(nmspace));
#if CYTHON_USE_TYPE_SLOTS
    dict = ((PyTypeObject*)nmspace)->tp_dict;
    Py_XINCREF(dict);
#else
    dict = PyObject_GetAttr(nmspace, __pyx_n_s_dict);
#endif
    if (likely(dict)) {
        result = PyObject_GetItem(dict, name);
        Py_DECREF(dict);
        if (result) {
            return result;
        }
    }
    PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result;
        result = PyObject_Call(replace, __pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    #if __PYX_LIMITED_VERSION_HEX < 0x030780000
    {
        PyObject *compiled = NULL, *result = NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "code", code))) return NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "type", (PyObject*)(&PyType_Type)))) return NULL;
        compiled = Py_CompileString(
            "out = type(code)(\n"
            "  code.co_argcount, code.co_kwonlyargcount, code.co_nlocals, code.co_stacksize,\n"
            "  code.co_flags, code.co_code, code.co_consts, code.co_names,\n"
            "  code.co_varnames, code.co_filename, co_name, co_firstlineno,\n"
            "  code.co_lnotab)\n", "<dummy>", Py_file_input);
        if (!compiled) return NULL;
        result = PyEval_EvalCode(compiled, scratch_dict, scratch_dict);
        Py_DECREF(compiled);
        if (!result) PyErr_Print();
        Py_DECREF(result);
        result = PyDict_GetItemString(scratch_dict, "out");
        if (result) Py_INCREF(result);
        return result;
    }
    #else
    return NULL;
    #endif
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
    if (unlikely(!code_object)) goto bad;
    py_py_line = PyLong_FromLong(py_line);
    if (unlikely(!py_py_line)) goto bad;
    py_funcname = PyUnicode_FromString(funcname);
    if (unlikely(!py_funcname)) goto bad;
    dict = PyDict_New();
    if (unlikely(!dict)) goto bad;
    {
        PyObject *old_code_object = code_object;
        code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
        Py_DECREF(old_code_object);
    }
    if (unlikely(!code_object)) goto bad;
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(size_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(size_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(size_t) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) >= 2 * PyLong_SHIFT)) {
                                return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(size_t) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) >= 3 * PyLong_SHIFT)) {
                                return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(size_t) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) >= 4 * PyLong_SHIFT)) {
                                return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(size_t) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(size_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                                return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(size_t) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                                return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                                return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(size_t) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                                return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT)) {
                                return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(size_t) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT)) {
                                return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(size_t) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(size_t) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (size_t) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (size_t) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (size_t) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (size_t) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (size_t) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(size_t) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((size_t) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(size_t) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((size_t) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((size_t) 1) << (sizeof(size_t) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPy */
static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const char neg_one = (char) -1, const_zero = (char) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(char) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(char, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (char) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(char, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(char) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) >= 2 * PyLong_SHIFT)) {
                                return (char) (((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(char) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) >= 3 * PyLong_SHIFT)) {
                                return (char) (((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(char) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) >= 4 * PyLong_SHIFT)) {
                                return (char) (((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (char) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(char) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(char, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(char) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(char, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(char, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(char) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) - 1 > 2 * PyLong_SHIFT)) {
                                return (char) (((char)-1)*(((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(char) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) - 1 > 2 * PyLong_SHIFT)) {
                                return (char) ((((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(char) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) - 1 > 3 * PyLong_SHIFT)) {
                                return (char) (((char)-1)*(((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(char) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) - 1 > 3 * PyLong_SHIFT)) {
                                return (char) ((((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(char) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) - 1 > 4 * PyLong_SHIFT)) {
                                return (char) (((char)-1)*(((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(char) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(char) - 1 > 4 * PyLong_SHIFT)) {
                                return (char) ((((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(char) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(char, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(char) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(char, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            char val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (char) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (char) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (char) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (char) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (char) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(char) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((char) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(char) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((char) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((char) 1) << (sizeof(char) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (char) -1;
        }
    } else {
        char val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (char) -1;
        val = __Pyx_PyInt_As_char(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to char");
    return (char) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to char");
    return (char) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_15resiliparse_dom_5parse_4html_NodeType(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType neg_one = (enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) -1, const_zero = (enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        return _PyLong_FromByteArray(bytes, sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType),
                                     little, !is_unsigned);
#else
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(enum __pyx_t_15resiliparse_dom_5parse_4html_NodeType));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
#else
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(int));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                                return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                                return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                                return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (long) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (long) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (long) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (long) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (long) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((long) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((long) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name_2);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XDECREF(name);
        name = __Pyx_NewRef(__pyx_n_s__113);
    }
    return name;
}
#endif

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                                return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                                return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                                return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (int) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (int) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (int) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (int) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (int) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((int) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((int) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_value = exc_info->exc_value;
    exc_info->exc_value = *value;
    if (tmp_value == NULL || tmp_value == Py_None) {
        Py_XDECREF(tmp_value);
        tmp_value = NULL;
        tmp_type = NULL;
        tmp_tb = NULL;
    } else {
        tmp_type = (PyObject*) Py_TYPE(tmp_value);
        Py_INCREF(tmp_type);
        #if CYTHON_COMPILING_IN_CPYTHON
        tmp_tb = ((PyBaseExceptionObject*) tmp_value)->traceback;
        Py_XINCREF(tmp_tb);
        #else
        tmp_tb = PyException_GetTraceback(tmp_value);
        #endif
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
  #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
  #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* CoroutineBase */
#include <frameobject.h>
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    CYTHON_UNUSED_VAR(__pyx_tstate);
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (likely(__Pyx_IS_TYPE(ev, (PyTypeObject*)PyExc_StopIteration))) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_CLEAR(exc_state->exc_value);
#else
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
#endif
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(__pyx_CoroutineObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(PyObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(PyObject *gen, PyObject *value, int closing) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    CYTHON_MAYBE_UNUSED_VAR(closing);
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_value) {
        #if CYTHON_COMPILING_IN_PYPY
        #else
        PyObject *exc_tb;
        #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
        exc_tb = PyException_GetTraceback(exc_state->exc_value);
        #elif PY_VERSION_HEX >= 0x030B00a4
        exc_tb = ((PyBaseExceptionObject*) exc_state->exc_value)->traceback;
        #else
        exc_tb = exc_state->exc_traceback;
        #endif
        if (exc_tb) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
            PyFrameObject *f = tb->tb_frame;
            assert(f->f_back == NULL);
            #if PY_VERSION_HEX >= 0x030B00A1
            f->f_back = PyThreadState_GetFrame(tstate);
            #else
            Py_XINCREF(tstate->frame);
            f->f_back = tstate->frame;
            #endif
            #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
            Py_DECREF(exc_tb);
            #endif
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body(self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
#if CYTHON_COMPILING_IN_PYPY
    CYTHON_UNUSED_VAR(exc_state);
#else
    PyObject *exc_tb;
    #if PY_VERSION_HEX >= 0x030B00a4
    if (!exc_state->exc_value) return;
    exc_tb = PyException_GetTraceback(exc_state->exc_value);
    #else
    exc_tb = exc_state->exc_traceback;
    #endif
    if (likely(exc_tb)) {
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
        #if PY_VERSION_HEX >= 0x030B00a4
        Py_DECREF(exc_tb);
        #endif
    }
#endif
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject* gen, PyObject *retval) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
static CYTHON_INLINE
PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
#if PY_VERSION_HEX <= 0x030A00A1
    return _PyGen_Send(gen, arg);
#else
    PyObject *result;
    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
        if (PyAsyncGen_CheckExact(gen)) {
            assert(result == Py_None);
            PyErr_SetNone(PyExc_StopAsyncIteration);
        }
        else if (result == Py_None) {
            PyErr_SetNone(PyExc_StopIteration);
        }
        else {
#if PY_VERSION_HEX < 0x030d00A1
            _PyGen_SetStopIterationValue(result);
#else
            if (!PyTuple_Check(result) && !PyExceptionInstance_Check(result)) {
                PyErr_SetObject(PyExc_StopIteration, result);
            } else {
                PyObject *exc = __Pyx_PyObject_CallOneArg(PyExc_StopIteration, result);
                if (likely(exc != NULL)) {
                    PyErr_SetObject(PyExc_StopIteration, exc);
                    Py_DECREF(exc);
                }
            }
#endif
        }
        Py_DECREF(result);
        result = NULL;
    }
    return result;
#endif
}
#endif
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (unlikely(PyErr_Occurred())) {
                PyErr_WriteUnraisable(yf);
            }
        } else {
            retval = __Pyx_PyObject_CallNoArg(meth);
            Py_DECREF(meth);
            if (unlikely(!retval))
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, PyObject *arg) {
    CYTHON_UNUSED_VAR(arg);
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (unlikely(PyErr_Occurred())) {
                    gen->is_running = 0;
                    return NULL;
                }
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = __Pyx_PyObject_Call(meth, args, NULL);
            } else {
                PyObject *cargs[4] = {NULL, typ, val, tb};
                ret = __Pyx_PyObject_FastCall(meth, cargs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (unlikely(!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb)))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_VISIT(exc_state->exc_value);
#else
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
#endif
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_frame);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (unlikely(PyObject_CallFinalizerFromDealloc(self)))
#else
        Py_TYPE(gen)->tp_del(self);
        if (unlikely(Py_REFCNT(self) > 0))
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    __Pyx_PyHeapTypeObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    __Pyx_SET_REFCNT(self, 1);
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(Py_REFCNT(self) > 0);
    if (likely(--self->ob_refcnt == 0)) {
        return;
    }
    {
        Py_ssize_t refcnt = Py_REFCNT(self);
        _Py_NewReference(self);
        __Pyx_SET_REFCNT(self, refcnt);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(Py_TYPE(self)) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_name;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_name, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_qualname;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_qualname, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, void *context)
{
    PyObject *frame = self->gi_frame;
    CYTHON_UNUSED_VAR(context);
    if (!frame) {
        if (unlikely(!self->gi_code)) {
            Py_RETURN_NONE;
        }
        frame = (PyObject *) PyFrame_New(
            PyThreadState_Get(),            /*PyThreadState *tstate,*/
            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/
            __pyx_d,                 /*PyObject *globals,*/
            0                               /*PyObject *locals*/
        );
        if (unlikely(!frame))
            return NULL;
        self->gi_frame = frame;
    }
    Py_INCREF(frame);
    return frame;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    #if PY_VERSION_HEX >= 0x030B00a4
    gen->gi_exc_state.exc_value = NULL;
    #else
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
    #endif
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    gen->gi_frame = NULL;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (unlikely(!module)) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_modulename), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CoroutineObject, gi_weakreflist), READONLY, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
     (char*) PyDoc_STR("Frame of the generator"), 0},
    {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_GeneratorType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_Coroutine_dealloc},
    {Py_tp_traverse, (void *)__Pyx_Coroutine_traverse},
    {Py_tp_iter, (void *)PyObject_SelfIter},
    {Py_tp_iternext, (void *)__Pyx_Generator_Next},
    {Py_tp_methods, (void *)__pyx_Generator_methods},
    {Py_tp_members, (void *)__pyx_Generator_memberlist},
    {Py_tp_getset, (void *)__pyx_Generator_getsets},
    {Py_tp_getattro, (void *) __Pyx_PyObject_GenericGetAttrNoDict},
#if CYTHON_USE_TP_FINALIZE
    {Py_tp_finalize, (void *)__Pyx_Coroutine_del},
#endif
    {0, 0},
};
static PyType_Spec __pyx_GeneratorType_spec = {
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    __pyx_GeneratorType_slots
};
#else
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_Generator_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_GeneratorType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_GeneratorType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
#endif
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030B00A4
    return Py_Version & ~0xFFUL;
#else
    const char* rt_version = Py_GetVersion();
    unsigned long version = 0;
    unsigned long factor = 0x01000000UL;
    unsigned int digit = 0;
    int i = 0;
    while (factor) {
        while ('0' <= rt_version[i] && rt_version[i] <= '9') {
            digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
            ++i;
        }
        version += factor * digit;
        if (rt_version[i] != '.')
            break;
        digit = 0;
        factor >>= 8;
        ++i;
    }
    return version;
#endif
}
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* FunctionExport */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
    cobj = PyCapsule_New(tmp.p, sig, 0);
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

/* FunctionImport */
#ifndef __PYX_HAVE_RT_ImportFunction_3_0_10
#define __PYX_HAVE_RT_ImportFunction_3_0_10
static int __Pyx_ImportFunction_3_0_10(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
